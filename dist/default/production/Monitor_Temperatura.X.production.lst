

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Aug 11 15:33:23 2021

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D  ;; Function _dispLCDstr is unused but had its address taken
  1336                           global _dispLCDstr
  1337                           _dispLCDstr equ 0
  1338  0000  ;; Function _dispLCD_B0 is unused but had its address taken
  1339                           global _dispLCD_B0
  1340                           _dispLCD_B0 equ 0
  1341  0000  ;; Function _dispLCD_B1 is unused but had its address taken
  1342                           global _dispLCD_B1
  1343                           _dispLCD_B1 equ 0
  1344  0000                     	FNCALL	_main,_delay
  1345                           	FNCALL	_main,_dispLCD
  1346                           	FNCALL	_main,_dispLCD_clr
  1347                           	FNCALL	_main,_dispLCD_init
  1348                           	FNCALL	_main,_dispLCD_num
  1349                           	FNCALL	_main,_sensor_init
  1350                           	FNCALL	_main,_teclado
  1351                           	FNCALL	_main,_teclado_init
  1352                           	FNCALL	_main,_temperatura
  1353                           	FNCALL	_temperatura,_ADC_read
  1354                           	FNCALL	_temperatura,___awdiv
  1355                           	FNCALL	_temperatura,___lmul
  1356                           	FNCALL	_temperatura,___wmul
  1357                           	FNCALL	_sensor_init,_ADC_init
  1358                           	FNCALL	_dispLCD_num,___awdiv
  1359                           	FNCALL	_dispLCD_num,___awmod
  1360                           	FNCALL	_dispLCD_num,_dispLCD_dataReg
  1361                           	FNCALL	_dispLCD_num,_dispLCD_lincol
  1362                           	FNCALL	_dispLCD_init,_delay
  1363                           	FNCALL	_dispLCD_init,_dispLCD_instReg
  1364                           	FNCALL	_dispLCD_clr,_dispLCD_instReg
  1365                           	FNCALL	_dispLCD,_dispLCD_dataReg
  1366                           	FNCALL	_dispLCD,_dispLCD_lincol
  1367                           	FNCALL	_dispLCD_lincol,_dispLCD_instReg
  1368                           	FNROOT	_main
  1369                           	FNCALL	_isr,_ADC_int
  1370                           	FNCALL	intlevel1,_isr
  1371                           	global	intlevel1
  1372                           	FNROOT	intlevel1
  1373                           	global	_tabela
  1374                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1375                           global __pidataBANK0
  1376                           __pidataBANK0:
  1377  0767                     	file	"keypad.c"
  1378                           	line	23
  1379                           
  1380                           ;initializer for _tabela
  1381                           	retlw	031h
  1382  0767  3431               	retlw	032h
  1383  0768  3432               	retlw	033h
  1384  0769  3433               	retlw	041h
  1385  076A  3441               	retlw	034h
  1386  076B  3434               	retlw	035h
  1387  076C  3435               	retlw	036h
  1388  076D  3436               	retlw	042h
  1389  076E  3442               	retlw	037h
  1390  076F  3437               	retlw	038h
  1391  0770  3438               	retlw	039h
  1392  0771  3439               	retlw	043h
  1393  0772  3443               	retlw	02Ah
  1394  0773  342A               	retlw	030h
  1395  0774  3430               	retlw	023h
  1396  0775  3423               	retlw	044h
  1397  0776  3444               	file	"./ihm.h"
  1398                           	line	15
  1399                           
  1400                           ;initializer for _IHM
  1401                           	retlw	low((fp__dispLCD_init-fpbase))
  1402  0777  3407               	retlw	low(0)
  1403  0778  3400               	retlw	low((fp__dispLCD-fpbase))
  1404  0779  3401               	retlw	low((fp__dispLCD_num-fpbase))
  1405  077A  340A               	retlw	low((fp__dispLCD_clr-fpbase))
  1406  077B  3404               	retlw	low(0)
  1407  077C  3400               	retlw	low(0)
  1408  077D  3400               	global	_ADC_value
  1409                           	global	_tMax_C
  1410                           	global	_tMin_C
  1411                           	global	_PORTB
  1412                           _PORTB	set	0x6
  1413  0006                     	global	_PIR1bits
  1414                           _PIR1bits	set	0xC
  1415  000C                     	global	_LCDbits
  1416                           _LCDbits	set	8
  1417  0008                     	global	_ADRESH
  1418                           _ADRESH	set	0x1E
  1419  001E                     	global	_ADCON0bits
  1420                           _ADCON0bits	set	0x1F
  1421  001F                     	global	_INTCONbits
  1422                           _INTCONbits	set	0xB
  1423  000B                     	global	_TRISB
  1424                           _TRISB	set	0x86
  1425  0086                     	global	_TRISDbits
  1426                           _TRISDbits	set	0x88
  1427  0088                     	global	_ADRESL
  1428                           _ADRESL	set	0x9E
  1429  009E                     	global	_PIE1bits
  1430                           _PIE1bits	set	0x8C
  1431  008C                     	global	_ADCON1bits
  1432                           _ADCON1bits	set	0x9F
  1433  009F                     	global	_ANSELH
  1434                           _ANSELH	set	0x189
  1435  0189                     	global	_ANSELbits
  1436                           _ANSELbits	set	0x188
  1437  0188                     psect	strings,class=STRING,delta=2,noexec
  1438                           global __pstrings
  1439                           __pstrings:
  1440  0320                     stringtab:
  1441  0320                     	global    __stringtab
  1442                           __stringtab:
  1443  0320                     ;	String table - string pointers are 1 byte each
  1444                           stringcode:stringdir:
  1445  0320                     movlw high(stringdir)
      + 0320                     stringdir:	
  1446  0320  3003               movwf pclath
  1447  0321  008A               movf fsr,w
  1448  0322  0804               incf fsr
  1449  0323  0A84               	addwf pc
  1450  0324  0782               	global __stringbase
  1451                           __stringbase:
  1452  0325                     	retlw	0
  1453  0325  3400               psect	strings
  1454                           	global    __end_of__stringtab
  1455                           __end_of__stringtab:
  1456  0326                     	
  1457                           STR_4:	
  1458  0326                     	retlw	84	;'T'
  1459  0326  3454               	retlw	101	;'e'
  1460  0327  3465               	retlw	109	;'m'
  1461  0328  346D               	retlw	112	;'p'
  1462  0329  3470               	retlw	58	;':'
  1463  032A  343A               	retlw	32	;' '
  1464  032B  3420               	retlw	32	;' '
  1465  032C  3420               	retlw	32	;' '
  1466  032D  3420               	retlw	32	;' '
  1467  032E  3420               	retlw	32	;' '
  1468  032F  3420               	retlw	67	;'C'
  1469  0330  3443               	retlw	32	;' '
  1470  0331  3420               	retlw	32	;' '
  1471  0332  3420               	retlw	32	;' '
  1472  0333  3420               	retlw	32	;' '
  1473  0334  3420               	retlw	32	;' '
  1474  0335  3420               	retlw	32	;' '
  1475  0336  3420               	retlw	32	;' '
  1476  0337  3420               	retlw	32	;' '
  1477  0338  3420               	retlw	0
  1478  0339  3400               psect	strings
  1479                           	
  1480                           STR_5:	
  1481  033A                     	retlw	32	;' '
  1482  033A  3420               	retlw	32	;' '
  1483  033B  3420               	retlw	32	;' '
  1484  033C  3420               	retlw	32	;' '
  1485  033D  3420               	retlw	32	;' '
  1486  033E  3420               	retlw	65	;'A'
  1487  033F  3441               	retlw	76	;'L'
  1488  0340  344C               	retlw	69	;'E'
  1489  0341  3445               	retlw	82	;'R'
  1490  0342  3452               	retlw	84	;'T'
  1491  0343  3454               	retlw	65	;'A'
  1492  0344  3441               	retlw	32	;' '
  1493  0345  3420               	retlw	32	;' '
  1494  0346  3420               	retlw	32	;' '
  1495  0347  3420               	retlw	32	;' '
  1496  0348  3420               	retlw	32	;' '
  1497  0349  3420               	retlw	0
  1498  034A  3400               psect	strings
  1499                           	
  1500                           STR_1:	
  1501  034B                     	retlw	32	;' '
  1502  034B  3420               	retlw	32	;' '
  1503  034C  3420               	retlw	32	;' '
  1504  034D  3420               	retlw	32	;' '
  1505  034E  3420               	retlw	87	;'W'
  1506  034F  3457               	retlw	69	;'E'
  1507  0350  3445               	retlw	76	;'L'
  1508  0351  344C               	retlw	67	;'C'
  1509  0352  3443               	retlw	79	;'O'
  1510  0353  344F               	retlw	77	;'M'
  1511  0354  344D               	retlw	69	;'E'
  1512  0355  3445               	retlw	32	;' '
  1513  0356  3420               	retlw	32	;' '
  1514  0357  3420               	retlw	32	;' '
  1515  0358  3420               	retlw	32	;' '
  1516  0359  3420               	retlw	32	;' '
  1517  035A  3420               	retlw	0
  1518  035B  3400               psect	strings
  1519                           	
  1520                           STR_9:	
  1521  035C                     	retlw	32	;' '
  1522  035C  3420               	retlw	32	;' '
  1523  035D  3420               	retlw	32	;' '
  1524  035E  3420               	retlw	73	;'I'
  1525  035F  3449               	retlw	110	;'n'
  1526  0360  346E               	retlw	115	;'s'
  1527  0361  3473               	retlw	116	;'t'
  1528  0362  3474               	retlw	97	;'a'
  1529  0363  3461               	retlw	108	;'l'
  1530  0364  346C               	retlw	97	;'a'
  1531  0365  3461               	retlw	99	;'c'
  1532  0366  3463               	retlw	97	;'a'
  1533  0367  3461               	retlw	111	;'o'
  1534  0368  346F               	retlw	32	;' '
  1535  0369  3420               	retlw	32	;' '
  1536  036A  3420               	retlw	32	;' '
  1537  036B  3420               	retlw	0
  1538  036C  3400               psect	strings
  1539                           	
  1540                           STR_10:	
  1541  036D                     	retlw	32	;' '
  1542  036D  3420               	retlw	32	;' '
  1543  036E  3420               	retlw	32	;' '
  1544  036F  3420               	retlw	77	;'M'
  1545  0370  344D               	retlw	97	;'a'
  1546  0371  3461               	retlw	110	;'n'
  1547  0372  346E               	retlw	117	;'u'
  1548  0373  3475               	retlw	116	;'t'
  1549  0374  3474               	retlw	101	;'e'
  1550  0375  3465               	retlw	110	;'n'
  1551  0376  346E               	retlw	99	;'c'
  1552  0377  3463               	retlw	97	;'a'
  1553  0378  3461               	retlw	111	;'o'
  1554  0379  346F               	retlw	32	;' '
  1555  037A  3420               	retlw	32	;' '
  1556  037B  3420               	retlw	32	;' '
  1557  037C  3420               	retlw	0
  1558  037D  3400               psect	strings
  1559                           	
  1560                           STR_2:	
  1561  037E                     	retlw	32	;' '
  1562  037E  3420               	retlw	84	;'T'
  1563  037F  3454               	retlw	101	;'e'
  1564  0380  3465               	retlw	82	;'R'
  1565  0381  3452               	retlw	116	;'t'
  1566  0382  3474               	retlw	111	;'o'
  1567  0383  346F               	retlw	83	;'S'
  1568  0384  3453               	retlw	32	;' '
  1569  0385  3420               	retlw	80	;'P'
  1570  0386  3450               	retlw	114	;'r'
  1571  0387  3472               	retlw	79	;'O'
  1572  0388  344F               	retlw	106	;'j'
  1573  0389  346A               	retlw	69	;'E'
  1574  038A  3445               	retlw	99	;'c'
  1575  038B  3463               	retlw	84	;'T'
  1576  038C  3454               	retlw	32	;' '
  1577  038D  3420               	retlw	0
  1578  038E  3400               psect	strings
  1579                           	
  1580                           STR_6:	
  1581  038F                     	retlw	84	;'T'
  1582  038F  3454               	retlw	69	;'E'
  1583  0390  3445               	retlw	77	;'M'
  1584  0391  344D               	retlw	80	;'P'
  1585  0392  3450               	retlw	69	;'E'
  1586  0393  3445               	retlw	82	;'R'
  1587  0394  3452               	retlw	65	;'A'
  1588  0395  3441               	retlw	84	;'T'
  1589  0396  3454               	retlw	85	;'U'
  1590  0397  3455               	retlw	82	;'R'
  1591  0398  3452               	retlw	65	;'A'
  1592  0399  3441               	retlw	32	;' '
  1593  039A  3420               	retlw	65	;'A'
  1594  039B  3441               	retlw	76	;'L'
  1595  039C  344C               	retlw	84	;'T'
  1596  039D  3454               	retlw	65	;'A'
  1597  039E  3441               	retlw	0
  1598  039F  3400               psect	strings
  1599                           	
  1600                           STR_8:	
  1601  03A0                     	retlw	84	;'T'
  1602  03A0  3454               	retlw	69	;'E'
  1603  03A1  3445               	retlw	77	;'M'
  1604  03A2  344D               	retlw	80	;'P'
  1605  03A3  3450               	retlw	69	;'E'
  1606  03A4  3445               	retlw	82	;'R'
  1607  03A5  3452               	retlw	65	;'A'
  1608  03A6  3441               	retlw	84	;'T'
  1609  03A7  3454               	retlw	85	;'U'
  1610  03A8  3455               	retlw	82	;'R'
  1611  03A9  3452               	retlw	65	;'A'
  1612  03AA  3441               	retlw	32	;' '
  1613  03AB  3420               	retlw	66	;'B'
  1614  03AC  3442               	retlw	65	;'A'
  1615  03AD  3441               	retlw	73	;'I'
  1616  03AE  3449               	retlw	88	;'X'
  1617  03AF  3458               	retlw	0
  1618  03B0  3400               psect	strings
  1619                           	
  1620                           STR_3:	
  1621  03B1                     	retlw	49	;'1'
  1622  03B1  3431               	retlw	58	;':'
  1623  03B2  343A               	retlw	73	;'I'
  1624  03B3  3449               	retlw	110	;'n'
  1625  03B4  346E               	retlw	115	;'s'
  1626  03B5  3473               	retlw	116	;'t'
  1627  03B6  3474               	retlw	32	;' '
  1628  03B7  3420               	retlw	32	;' '
  1629  03B8  3420               	retlw	32	;' '
  1630  03B9  3420               	retlw	67	;'C'
  1631  03BA  3443               	retlw	58	;':'
  1632  03BB  343A               	retlw	77	;'M'
  1633  03BC  344D               	retlw	97	;'a'
  1634  03BD  3461               	retlw	110	;'n'
  1635  03BE  346E               	retlw	117	;'u'
  1636  03BF  3475               	retlw	116	;'t'
  1637  03C0  3474               	retlw	0
  1638  03C1  3400               psect	strings
  1639                           STR_7	equ	STR_5+0
  1640  033A                     ; #config settings
  1641                           global __CFG_FOSC$INTRC_NOCLKOUT
  1642                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1643  0000                     global __CFG_WDTE$OFF
  1644                           __CFG_WDTE$OFF equ 0x0
  1645  0000                     global __CFG_PWRTE$OFF
  1646                           __CFG_PWRTE$OFF equ 0x0
  1647  0000                     global __CFG_MCLRE$OFF
  1648                           __CFG_MCLRE$OFF equ 0x0
  1649  0000                     global __CFG_CP$OFF
  1650                           __CFG_CP$OFF equ 0x0
  1651  0000                     global __CFG_CPD$OFF
  1652                           __CFG_CPD$OFF equ 0x0
  1653  0000                     global __CFG_BOREN$OFF
  1654                           __CFG_BOREN$OFF equ 0x0
  1655  0000                     global __CFG_IESO$OFF
  1656                           __CFG_IESO$OFF equ 0x0
  1657  0000                     global __CFG_FCMEN$OFF
  1658                           __CFG_FCMEN$OFF equ 0x0
  1659  0000                     global __CFG_LVP$OFF
  1660                           __CFG_LVP$OFF equ 0x0
  1661  0000                     global __CFG_BOR4V$BOR40V
  1662                           __CFG_BOR4V$BOR40V equ 0x0
  1663  0000                     global __CFG_WRT$OFF
  1664                           __CFG_WRT$OFF equ 0x0
  1665  0000                     	file	"C:\Users\20185074\AppData\Local\Temp\sbh4."
  1666                           	line	#
  1667                           psect cinit,class=CODE,delta=2
  1668                           global start_initialization
  1669                           start_initialization:
  1670  000F                     
  1671                           global __initialization
  1672                           __initialization:
  1673  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1674                           global __pbssCOMMON
  1675                           __pbssCOMMON:
  1676  0078                     _ADC_value:
  1677  0078                            ds      2
  1678  0078                     
  1679                           psect	bssBANK0,class=BANK0,space=1,noexec
  1680                           global __pbssBANK0
  1681                           __pbssBANK0:
  1682  0058                     _tMax_C:
  1683  0058                            ds      2
  1684  0058                     
  1685                           _tMin_C:
  1686  005A                            ds      2
  1687  005A                     
  1688                           psect	dataBANK0,class=BANK0,space=1,noexec
  1689                           global __pdataBANK0
  1690                           __pdataBANK0:
  1691  0041                     	file	"keypad.c"
  1692                           	line	23
  1693                           _tabela:
  1694  0041                            ds      16
  1695  0041                     
  1696                           psect	dataBANK0
  1697                           	file	"./ihm.h"
  1698                           	line	15
  1699                           _IHM:
  1700  0051                            ds      7
  1701  0051                     
  1702                           	file	"C:\Users\20185074\AppData\Local\Temp\sbh4."
  1703                           	line	#
  1704                           global btemp
  1705                           psect inittext,class=CODE,delta=2
  1706                           global init_fetch0,btemp
  1707                           ;	Called with low address in FSR and high address in W
  1708                           init_fetch0:
  1709  07BE                     	movf btemp,w
  1710  07BE  087E               	movwf pclath
  1711  07BF  008A               	movf btemp+1,w
  1712  07C0  087F               	movwf pc
  1713  07C1  0082               global init_ram0
  1714                           ;Called with:
  1715                           ;	high address of idata address in btemp 
  1716                           ;	low address of idata address in btemp+1 
  1717                           ;	low address of data in FSR
  1718                           ;	high address + 1 of data in btemp-1
  1719                           init_ram0:
  1720  07C2                     	fcall init_fetch0
  1721  07C2  120A  118A  27BE  120A  118A  	movwf indf,f
  1722  07C7  0080               	incf fsr,f
  1723  07C8  0A84               	movf fsr,w
  1724  07C9  0804               	xorwf btemp-1,w
  1725  07CA  067D               	btfsc status,2
  1726  07CB  1903               	retlw 0
  1727  07CC  3400               	incf btemp+1,f
  1728  07CD  0AFF               	btfsc status,2
  1729  07CE  1903               	incf btemp,f
  1730  07CF  0AFE               	goto init_ram0
  1731  07D0  2FC2               ; Initialize objects allocated to BANK0
  1732                           psect cinit,class=CODE,delta=2,merge=1
  1733                           global init_ram0, __pidataBANK0
  1734                           	bcf	status, 7	;select IRP bank0
  1735  000F  1383               	movlw low(__pdataBANK0+23)
  1736  0010  3058               	movwf btemp-1,f
  1737  0011  00FD               	movlw high(__pidataBANK0)
  1738  0012  3007               	movwf btemp,f
  1739  0013  00FE               	movlw low(__pidataBANK0)
  1740  0014  3067               	movwf btemp+1,f
  1741  0015  00FF               	movlw low(__pdataBANK0)
  1742  0016  3041               	movwf fsr,f
  1743  0017  0084               	fcall init_ram0
  1744  0018  120A  118A  27C2  120A  118A  	line	#
  1745                           ; Clear objects allocated to BANK0
  1746                           psect cinit,class=CODE,delta=2,merge=1
  1747                           	clrf	((__pbssBANK0)+0)&07Fh
  1748  001D  01D8               	clrf	((__pbssBANK0)+1)&07Fh
  1749  001E  01D9               	clrf	((__pbssBANK0)+2)&07Fh
  1750  001F  01DA               	clrf	((__pbssBANK0)+3)&07Fh
  1751  0020  01DB               ; Clear objects allocated to COMMON
  1752                           psect cinit,class=CODE,delta=2,merge=1
  1753                           	clrf	((__pbssCOMMON)+0)&07Fh
  1754  0021  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  1755  0022  01F9               psect cinit,class=CODE,delta=2,merge=1
  1756                           global end_of_initialization,__end_of__initialization
  1757                           
  1758                           ;End of C runtime variable initialization code
  1759                           
  1760                           end_of_initialization:
  1761  0023                     __end_of__initialization:
  1762  0023                     clrf status
  1763  0023  0183               ljmp _main	;jump to C main() function
  1764  0024  120A  118A  2839   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1765                           global __pcstackCOMMON
  1766                           __pcstackCOMMON:
  1767  0070                     ?_temperatura:	; 1 bytes @ 0x0
  1768  0070                     ?_ADC_init:	; 1 bytes @ 0x0
  1769  0070                     ?_ADC_int:	; 1 bytes @ 0x0
  1770  0070                     ??_ADC_int:	; 1 bytes @ 0x0
  1771  0070                     ?_dispLCD_instReg:	; 1 bytes @ 0x0
  1772  0070                     ?_dispLCD_dataReg:	; 1 bytes @ 0x0
  1773  0070                     ?_dispLCD_init:	; 1 bytes @ 0x0
  1774  0070                     ?_dispLCD_clr:	; 1 bytes @ 0x0
  1775  0070                     ?_isr:	; 1 bytes @ 0x0
  1776  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  1777  0070                     ?_teclado:	; 1 bytes @ 0x0
  1778  0070                     ?_main:	; 1 bytes @ 0x0
  1779  0070                     	ds	2
  1780  0070                     ??_isr:	; 1 bytes @ 0x2
  1781  0072                     	ds	2
  1782  0072                     ?_sensor_init:	; 1 bytes @ 0x4
  1783  0074                     ??_ADC_init:	; 1 bytes @ 0x4
  1784  0074                     ?_delay:	; 1 bytes @ 0x4
  1785  0074                     ??_dispLCD_instReg:	; 1 bytes @ 0x4
  1786  0074                     ??_dispLCD_dataReg:	; 1 bytes @ 0x4
  1787  0074                     ??_teclado_init:	; 1 bytes @ 0x4
  1788  0074                     ??_teclado:	; 1 bytes @ 0x4
  1789  0074                     ??___lmul:	; 1 bytes @ 0x4
  1790  0074                     	global	?_ADC_read
  1791                           ?_ADC_read:	; 2 bytes @ 0x4
  1792  0074                     	global	?___wmul
  1793                           ?___wmul:	; 2 bytes @ 0x4
  1794  0074                     	global	?___awmod
  1795                           ?___awmod:	; 2 bytes @ 0x4
  1796  0074                     	global	delay@t
  1797                           delay@t:	; 2 bytes @ 0x4
  1798  0074                     	global	sensor_init@tmin
  1799                           sensor_init@tmin:	; 2 bytes @ 0x4
  1800  0074                     	global	___wmul@multiplier
  1801                           ___wmul@multiplier:	; 2 bytes @ 0x4
  1802  0074                     	global	___awmod@divisor
  1803                           ___awmod@divisor:	; 2 bytes @ 0x4
  1804  0074                     	ds	1
  1805  0074                     	global	dispLCD_dataReg@d
  1806                           dispLCD_dataReg@d:	; 1 bytes @ 0x5
  1807  0075                     	ds	1
  1808  0075                     ??_ADC_read:	; 1 bytes @ 0x6
  1809  0076                     ??_delay:	; 1 bytes @ 0x6
  1810  0076                     	global	dispLCD_instReg@i
  1811                           dispLCD_instReg@i:	; 1 bytes @ 0x6
  1812  0076                     	global	sensor_init@tmax
  1813                           sensor_init@tmax:	; 2 bytes @ 0x6
  1814  0076                     	global	___wmul@multiplicand
  1815                           ___wmul@multiplicand:	; 2 bytes @ 0x6
  1816  0076                     	global	___awmod@dividend
  1817                           ___awmod@dividend:	; 2 bytes @ 0x6
  1818  0076                     	ds	1
  1819  0076                     ?_dispLCD_lincol:	; 1 bytes @ 0x7
  1820  0077                     ??_dispLCD_init:	; 1 bytes @ 0x7
  1821  0077                     ??_dispLCD_clr:	; 1 bytes @ 0x7
  1822  0077                     	global	dispLCD_lincol@col
  1823                           dispLCD_lincol@col:	; 1 bytes @ 0x7
  1824  0077                     	ds	1
  1825  0077                     ??_sensor_init:	; 1 bytes @ 0x8
  1826  0078                     ??___wmul:	; 1 bytes @ 0x8
  1827  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1828                           global __pcstackBANK0
  1829                           __pcstackBANK0:
  1830  0020                     ??_dispLCD_lincol:	; 1 bytes @ 0x0
  1831  0020                     ??___awmod:	; 1 bytes @ 0x0
  1832  0020                     	global	?___lmul
  1833                           ?___lmul:	; 4 bytes @ 0x0
  1834  0020                     	global	teclado@tecla
  1835                           teclado@tecla:	; 1 bytes @ 0x0
  1836  0020                     	global	___wmul@product
  1837                           ___wmul@product:	; 2 bytes @ 0x0
  1838  0020                     	global	___lmul@multiplier
  1839                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1840  0020                     	ds	1
  1841  0020                     	global	dispLCD_lincol@lin
  1842                           dispLCD_lincol@lin:	; 1 bytes @ 0x1
  1843  0021                     	global	teclado@col
  1844                           teclado@col:	; 1 bytes @ 0x1
  1845  0021                     	global	___awmod@counter
  1846                           ___awmod@counter:	; 1 bytes @ 0x1
  1847  0021                     	ds	1
  1848  0021                     ?_dispLCD:	; 1 bytes @ 0x2
  1849  0022                     	global	?___awdiv
  1850                           ?___awdiv:	; 2 bytes @ 0x2
  1851  0022                     	global	dispLCD@lin
  1852                           dispLCD@lin:	; 1 bytes @ 0x2
  1853  0022                     	global	teclado@lin
  1854                           teclado@lin:	; 1 bytes @ 0x2
  1855  0022                     	global	___awmod@sign
  1856                           ___awmod@sign:	; 1 bytes @ 0x2
  1857  0022                     	global	___awdiv@divisor
  1858                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1859  0022                     	ds	1
  1860  0022                     	global	dispLCD@col
  1861                           dispLCD@col:	; 1 bytes @ 0x3
  1862  0023                     	ds	1
  1863  0023                     	global	dispLCD@str
  1864                           dispLCD@str:	; 1 bytes @ 0x4
  1865  0024                     	global	___awdiv@dividend
  1866                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1867  0024                     	global	___lmul@multiplicand
  1868                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1869  0024                     	ds	1
  1870  0024                     ??_dispLCD:	; 1 bytes @ 0x5
  1871  0025                     	ds	1
  1872  0025                     ??___awdiv:	; 1 bytes @ 0x6
  1873  0026                     	ds	1
  1874  0026                     	global	___awdiv@counter
  1875                           ___awdiv@counter:	; 1 bytes @ 0x7
  1876  0027                     	ds	1
  1877  0027                     	global	___awdiv@sign
  1878                           ___awdiv@sign:	; 1 bytes @ 0x8
  1879  0028                     	global	___lmul@product
  1880                           ___lmul@product:	; 4 bytes @ 0x8
  1881  0028                     	ds	1
  1882  0028                     	global	___awdiv@quotient
  1883                           ___awdiv@quotient:	; 2 bytes @ 0x9
  1884  0029                     	ds	2
  1885  0029                     ?_dispLCD_num:	; 1 bytes @ 0xB
  1886  002B                     	global	dispLCD_num@lin
  1887                           dispLCD_num@lin:	; 1 bytes @ 0xB
  1888  002B                     	ds	1
  1889  002B                     ??_temperatura:	; 1 bytes @ 0xC
  1890  002C                     	global	dispLCD_num@col
  1891                           dispLCD_num@col:	; 1 bytes @ 0xC
  1892  002C                     	ds	1
  1893  002C                     	global	dispLCD_num@num
  1894                           dispLCD_num@num:	; 2 bytes @ 0xD
  1895  002D                     	ds	2
  1896  002D                     	global	dispLCD_num@tam
  1897                           dispLCD_num@tam:	; 1 bytes @ 0xF
  1898  002F                     	ds	1
  1899  002F                     ??_dispLCD_num:	; 1 bytes @ 0x10
  1900  0030                     	global	temperatura@t
  1901                           temperatura@t:	; 4 bytes @ 0x10
  1902  0030                     	ds	3
  1903  0030                     	global	dispLCD_num@size
  1904                           dispLCD_num@size:	; 1 bytes @ 0x13
  1905  0033                     	ds	1
  1906  0033                     	global	dispLCD_num@sinal
  1907                           dispLCD_num@sinal:	; 1 bytes @ 0x14
  1908  0034                     	global	temperatura@ptr
  1909                           temperatura@ptr:	; 1 bytes @ 0x14
  1910  0034                     	ds	1
  1911  0034                     	global	dispLCD_num@div
  1912                           dispLCD_num@div:	; 2 bytes @ 0x15
  1913  0035                     	ds	2
  1914  0035                     ??_main:	; 1 bytes @ 0x17
  1915  0037                     	ds	2
  1916  0037                     	global	main@tecla
  1917                           main@tecla:	; 1 bytes @ 0x19
  1918  0039                     	ds	1
  1919  0039                     	global	main@estado
  1920                           main@estado:	; 1 bytes @ 0x1A
  1921  003A                     	ds	1
  1922  003A                     	global	main@sensor
  1923                           main@sensor:	; 6 bytes @ 0x1B
  1924  003B                     	ds	6
  1925  003B                     ;!
  1926                           ;!Data Sizes:
  1927                           ;!    Strings     156
  1928                           ;!    Constant    0
  1929                           ;!    Data        23
  1930                           ;!    BSS         6
  1931                           ;!    Persistent  0
  1932                           ;!    Stack       0
  1933                           ;!
  1934                           ;!Auto Spaces:
  1935                           ;!    Space          Size  Autos    Used
  1936                           ;!    COMMON           14      8      10
  1937                           ;!    BANK0            80     33      60
  1938                           ;!    BANK1            80      0       0
  1939                           ;!    BANK3            96      0       0
  1940                           ;!    BANK2            96      0       0
  1941                           
  1942                           ;!
  1943                           ;!Pointer List with Targets:
  1944                           ;!
  1945                           ;!    S348$1$0	PTR const unsigned char  size(1) Largest target is 0
  1946                           ;!
  1947                           ;!    S348$2$2	PTR const unsigned char  size(1) Largest target is 20
  1948                           ;!		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
  1949                           ;!		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[20]), STR_3(CODE[17]), 
  1950                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  1951                           ;!
  1952                           ;!    temperatura@ptr	PTR struct SensorTemperatura_t size(1) Largest target is 6
  1953                           ;!		 -> main@sensor(BANK0[6]), 
  1954                           ;!
  1955                           ;!    S348$B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1956                           ;!		 -> dispLCD_B1(), 
  1957                           ;!
  1958                           ;!    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
  1959                           ;!		 -> dispLCD_B1(), 
  1960                           ;!
  1961                           ;!    S348$B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1962                           ;!		 -> dispLCD_B0(), 
  1963                           ;!
  1964                           ;!    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
  1965                           ;!		 -> dispLCD_B0(), 
  1966                           ;!
  1967                           ;!    S348$clr	PTR FTN()void  size(1) Largest target is 1
  1968                           ;!		 -> dispLCD_clr(), 
  1969                           ;!
  1970                           ;!    IHM.clr	PTR FTN()void  size(1) Largest target is 1
  1971                           ;!		 -> dispLCD_clr(), 
  1972                           ;!
  1973                           ;!    S348$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(
                                 1) Largest target is 1
  1974                           ;!		 -> dispLCD_num(), 
  1975                           ;!
  1976                           ;!    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1
                                 ) Largest target is 1
  1977                           ;!		 -> dispLCD_num(), 
  1978                           ;!
  1979                           ;!    S348$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void
                                   size(1) Largest target is 1
  1980                           ;!		 -> dispLCD(), 
  1981                           ;!
  1982                           ;!    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void 
                                  size(1) Largest target is 1
  1983                           ;!		 -> dispLCD(), 
  1984                           ;!
  1985                           ;!    S348$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1986                           ;!		 -> dispLCDstr(), 
  1987                           ;!
  1988                           ;!    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
  1989                           ;!		 -> dispLCDstr(), 
  1990                           ;!
  1991                           ;!    S348$init	PTR FTN()void  size(1) Largest target is 1
  1992                           ;!		 -> dispLCD_init(), 
  1993                           ;!
  1994                           ;!    IHM.init	PTR FTN()void  size(1) Largest target is 1
  1995                           ;!		 -> dispLCD_init(), 
  1996                           ;!
  1997                           ;!    dispLCD@str	PTR const unsigned char  size(1) Largest target is 20
  1998                           ;!		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
  1999                           ;!		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[20]), STR_3(CODE[17]), 
  2000                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
  2001                           ;!
  2002                           
  2003                           
  2004                           ;!
  2005                           ;!Critical Paths under _main in COMMON
  2006                           ;!
  2007                           ;!    _main->_sensor_init
  2008                           ;!    _main->_teclado
  2009                           ;!    _temperatura->___wmul
  2010                           ;!    _dispLCD_num->___awmod
  2011                           ;!    _dispLCD_num->_dispLCD_lincol
  2012                           ;!    ___awdiv->___wmul
  2013                           ;!    _dispLCD_init->_delay
  2014                           ;!    _dispLCD_init->_dispLCD_instReg
  2015                           ;!    _dispLCD_clr->_dispLCD_instReg
  2016                           ;!    _dispLCD->_dispLCD_lincol
  2017                           ;!    _dispLCD_lincol->_dispLCD_instReg
  2018                           ;!
  2019                           ;!Critical Paths under _isr in COMMON
  2020                           ;!
  2021                           ;!    _isr->_ADC_int
  2022                           ;!
  2023                           ;!Critical Paths under _main in BANK0
  2024                           ;!
  2025                           ;!    _main->_dispLCD_num
  2026                           ;!    _temperatura->___lmul
  2027                           ;!    _dispLCD_num->___awdiv
  2028                           ;!    ___awdiv->___wmul
  2029                           ;!    _dispLCD->_dispLCD_lincol
  2030                           ;!
  2031                           ;!Critical Paths under _isr in BANK0
  2032                           ;!
  2033                           ;!    None.
  2034                           ;!
  2035                           ;!Critical Paths under _main in BANK1
  2036                           ;!
  2037                           ;!    None.
  2038                           ;!
  2039                           ;!Critical Paths under _isr in BANK1
  2040                           ;!
  2041                           ;!    None.
  2042                           ;!
  2043                           ;!Critical Paths under _main in BANK3
  2044                           ;!
  2045                           ;!    None.
  2046                           ;!
  2047                           ;!Critical Paths under _isr in BANK3
  2048                           ;!
  2049                           ;!    None.
  2050                           ;!
  2051                           ;!Critical Paths under _main in BANK2
  2052                           ;!
  2053                           ;!    None.
  2054                           ;!
  2055                           ;!Critical Paths under _isr in BANK2
  2056                           ;!
  2057                           ;!    None.
  2058                           
  2059 ;;
  2060 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2061 ;;
  2062                           
  2063                           ;!
  2064                           ;!Call Graph Tables:
  2065                           ;!
  2066                           ;! ---------------------------------------------------------------------------------
  2067                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2068                           ;! ---------------------------------------------------------------------------------
  2069                           ;! (0) _main                                                10    10      0   11770
  2070                           ;!                                             23 BANK0     10    10      0
  2071                           ;!                              _delay
  2072                           ;!                            _dispLCD
  2073                           ;!                        _dispLCD_clr
  2074                           ;!                       _dispLCD_init
  2075                           ;!                        _dispLCD_num
  2076                           ;!                        _sensor_init
  2077                           ;!                            _teclado
  2078                           ;!                       _teclado_init
  2079                           ;!                        _temperatura
  2080                           ;! ---------------------------------------------------------------------------------
  2081                           ;! (1) _temperatura                                          9     9      0    2062
  2082                           ;!                                             12 BANK0      9     9      0
  2083                           ;!                           _ADC_read
  2084                           ;!                            ___awdiv
  2085                           ;!                             ___lmul
  2086                           ;!                             ___wmul
  2087                           ;! ---------------------------------------------------------------------------------
  2088                           ;! (2) ___wmul                                               6     2      4     316
  2089                           ;!                                              4 COMMON     4     0      4
  2090                           ;!                                              0 BANK0      2     2      0
  2091                           ;! ---------------------------------------------------------------------------------
  2092                           ;! (2) ___lmul                                              13     5      8     316
  2093                           ;!                                              4 COMMON     1     1      0
  2094                           ;!                                              0 BANK0     12     4      8
  2095                           ;! ---------------------------------------------------------------------------------
  2096                           ;! (2) _ADC_read                                             2     0      2       0
  2097                           ;!                                              4 COMMON     2     0      2
  2098                           ;! ---------------------------------------------------------------------------------
  2099                           ;! (1) _teclado_init                                         0     0      0       0
  2100                           ;! ---------------------------------------------------------------------------------
  2101                           ;! (1) _teclado                                              7     7      0     204
  2102                           ;!                                              4 COMMON     4     4      0
  2103                           ;!                                              0 BANK0      3     3      0
  2104                           ;! ---------------------------------------------------------------------------------
  2105                           ;! (1) _sensor_init                                          4     0      4     196
  2106                           ;!                                              4 COMMON     4     0      4
  2107                           ;!                           _ADC_init
  2108                           ;! ---------------------------------------------------------------------------------
  2109                           ;! (2) _ADC_init                                             0     0      0       0
  2110                           ;! ---------------------------------------------------------------------------------
  2111                           ;! (1) _dispLCD_num                                         12     7      5    3844
  2112                           ;!                                             11 BANK0     12     7      5
  2113                           ;!                            ___awdiv
  2114                           ;!                            ___awmod
  2115                           ;!                    _dispLCD_dataReg
  2116                           ;!                     _dispLCD_lincol
  2117                           ;! ---------------------------------------------------------------------------------
  2118                           ;! (2) ___awmod                                              7     3      4     613
  2119                           ;!                                              4 COMMON     4     0      4
  2120                           ;!                                              0 BANK0      3     3      0
  2121                           ;! ---------------------------------------------------------------------------------
  2122                           ;! (2) ___awdiv                                              9     5      4    1060
  2123                           ;!                                              2 BANK0      9     5      4
  2124                           ;!                             ___wmul (ARG)
  2125                           ;! ---------------------------------------------------------------------------------
  2126                           ;! (1) _dispLCD_init                                         0     0      0     651
  2127                           ;!                              _delay
  2128                           ;!                    _dispLCD_instReg
  2129                           ;! ---------------------------------------------------------------------------------
  2130                           ;! (2) _delay                                                3     1      2     403
  2131                           ;!                                              4 COMMON     3     1      2
  2132                           ;! ---------------------------------------------------------------------------------
  2133                           ;! (1) _dispLCD_clr                                          0     0      0     248
  2134                           ;!                    _dispLCD_instReg
  2135                           ;! ---------------------------------------------------------------------------------
  2136                           ;! (1) _dispLCD                                              4     1      3    3631
  2137                           ;!                                              2 BANK0      4     1      3
  2138                           ;!                    _dispLCD_dataReg
  2139                           ;!                     _dispLCD_lincol
  2140                           ;! ---------------------------------------------------------------------------------
  2141                           ;! (2) _dispLCD_lincol                                       3     2      1     760
  2142                           ;!                                              7 COMMON     1     0      1
  2143                           ;!                                              0 BANK0      2     2      0
  2144                           ;!                    _dispLCD_instReg
  2145                           ;! ---------------------------------------------------------------------------------
  2146                           ;! (3) _dispLCD_instReg                                      3     3      0     248
  2147                           ;!                                              4 COMMON     3     3      0
  2148                           ;! ---------------------------------------------------------------------------------
  2149                           ;! (2) _dispLCD_dataReg                                      2     2      0      44
  2150                           ;!                                              4 COMMON     2     2      0
  2151                           ;! ---------------------------------------------------------------------------------
  2152                           ;! Estimated maximum stack depth 3
  2153                           ;! ---------------------------------------------------------------------------------
  2154                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2155                           ;! ---------------------------------------------------------------------------------
  2156                           ;! (4) _isr                                                  2     2      0       0
  2157                           ;!                                              2 COMMON     2     2      0
  2158                           ;!                            _ADC_int
  2159                           ;! ---------------------------------------------------------------------------------
  2160                           ;! (5) _ADC_int                                              2     2      0       0
  2161                           ;!                                              0 COMMON     2     2      0
  2162                           ;! ---------------------------------------------------------------------------------
  2163                           ;! Estimated maximum stack depth 5
  2164                           ;! ---------------------------------------------------------------------------------
  2165                           ;!
  2166                           ;! Call Graph Graphs:
  2167                           ;!
  2168                           ;! _main (ROOT)
  2169                           ;!   _delay
  2170                           ;!   _dispLCD
  2171                           ;!     _dispLCD_dataReg
  2172                           ;!     _dispLCD_lincol
  2173                           ;!       _dispLCD_instReg
  2174                           ;!   _dispLCD_clr
  2175                           ;!     _dispLCD_instReg
  2176                           ;!   _dispLCD_init
  2177                           ;!     _delay
  2178                           ;!     _dispLCD_instReg
  2179                           ;!   _dispLCD_num
  2180                           ;!     ___awdiv
  2181                           ;!       ___wmul (ARG)
  2182                           ;!     ___awmod
  2183                           ;!     _dispLCD_dataReg
  2184                           ;!     _dispLCD_lincol
  2185                           ;!       _dispLCD_instReg
  2186                           ;!   _sensor_init
  2187                           ;!     _ADC_init
  2188                           ;!   _teclado
  2189                           ;!   _teclado_init
  2190                           ;!   _temperatura
  2191                           ;!     _ADC_read
  2192                           ;!     ___awdiv
  2193                           ;!       ___wmul (ARG)
  2194                           ;!     ___lmul
  2195                           ;!     ___wmul
  2196                           ;!
  2197                           ;! _isr (ROOT)
  2198                           ;!   _ADC_int
  2199                           ;!
  2200                           
  2201                           ;! Address spaces:
  2202                           
  2203                           ;!Name               Size   Autos  Total    Cost      Usage
  2204                           ;!BANK3               60      0       0       9        0.0%
  2205                           ;!BITBANK3            60      0       0       8        0.0%
  2206                           ;!SFR3                 0      0       0       4        0.0%
  2207                           ;!BITSFR3              0      0       0       4        0.0%
  2208                           ;!BANK2               60      0       0      11        0.0%
  2209                           ;!BITBANK2            60      0       0      10        0.0%
  2210                           ;!SFR2                 0      0       0       5        0.0%
  2211                           ;!BITSFR2              0      0       0       5        0.0%
  2212                           ;!BANK1               50      0       0       7        0.0%
  2213                           ;!BITBANK1            50      0       0       6        0.0%
  2214                           ;!SFR1                 0      0       0       2        0.0%
  2215                           ;!BITSFR1              0      0       0       2        0.0%
  2216                           ;!BANK0               50     21      3C       5       75.0%
  2217                           ;!BITBANK0            50      0       0       4        0.0%
  2218                           ;!SFR0                 0      0       0       1        0.0%
  2219                           ;!BITSFR0              0      0       0       1        0.0%
  2220                           ;!COMMON               E      8       A       1       71.4%
  2221                           ;!BITCOMMON            E      0       0       0        0.0%
  2222                           ;!CODE                 0      0       0       0        0.0%
  2223                           ;!DATA                 0      0      46      12        0.0%
  2224                           ;!ABS                  0      0      46       3        0.0%
  2225                           ;!NULL                 0      0       0       0        0.0%
  2226                           ;!STACK                0      0       0       2        0.0%
  2227                           ;!EEDATA             100      0       0       0        0.0%
  2228                           
  2229                           	global	_main
  2230                           
  2231 ;; *************** function _main *****************
  2232 ;; Defined at:
  2233 ;;		line 18 in file "main.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;  sensor          6   27[BANK0 ] struct SensorTemperatura
  2238 ;;  estado          1   26[BANK0 ] unsigned char 
  2239 ;;  tecla           1   25[BANK0 ] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : B00/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       0       0       0       0
  2250 ;;      Locals:         0       8       0       0       0
  2251 ;;      Temps:          0       2       0       0       0
  2252 ;;      Totals:         0      10       0       0       0
  2253 ;;Total ram usage:       10 bytes
  2254 ;; Hardware stack levels required when called:    5
  2255 ;; This function calls:
  2256 ;;		_delay
  2257 ;;		_dispLCD
  2258 ;;		_dispLCD_clr
  2259 ;;		_dispLCD_init
  2260 ;;		_dispLCD_num
  2261 ;;		_sensor_init
  2262 ;;		_teclado
  2263 ;;		_teclado_init
  2264 ;;		_temperatura
  2265 ;; This function is called by:
  2266 ;;		Startup code after reset
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2270                           	file	"main.c"
  2271                           	line	18
  2272                           global __pmaintext
  2273                           __pmaintext:	;psect for function _main
  2274  0039                     psect	maintext
  2275                           	file	"main.c"
  2276                           	line	18
  2277                           	global	__size_of_main
  2278                           	__size_of_main	equ	__end_of_main-_main
  2279  01F8                     	
  2280                           _main:	
  2281  0039                     ;incstack = 0
  2282                           	opt	stack 3
  2283                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2284                           	line	20
  2285                           	
  2286                           l1982:	
  2287  0039                     ;main.c: 20:     char estado = 0;
  2288                           	bcf	status, 5	;RP0=0, select bank0
  2289  0039  1283               	bcf	status, 6	;RP1=0, select bank0
  2290  003A  1303               	clrf	(main@estado)
  2291  003B  01BA               	line	22
  2292                           	
  2293                           l1984:	
  2294  003C                     ;main.c: 21:     char tecla;;main.c: 22:     dispLCD_init();
  2295                           	fcall	_dispLCD_init
  2296  003C  120A  118A  265B  120A  118A  	line	23
  2297                           	
  2298                           l1986:	
  2299  0041                     ;main.c: 23:     teclado_init();
  2300                           	fcall	_teclado_init
  2301  0041  120A  118A  27E1  120A  118A  	line	26
  2302                           	
  2303                           l1988:	
  2304  0046                     ;main.c: 25:     struct SensorTemperatura_t sensor;;main.c: 26:     sensor_init(-50,150)
                                 ;
  2305                           	movlw	0CEh
  2306  0046  30CE               	movwf	(sensor_init@tmin)
  2307  0047  00F4               	movlw	0FFh
  2308  0048  30FF               	movwf	((sensor_init@tmin))+1
  2309  0049  00F5               	movlw	096h
  2310  004A  3096               	movwf	(sensor_init@tmax)
  2311  004B  00F6               	movlw	0
  2312  004C  3000               	movwf	((sensor_init@tmax))+1
  2313  004D  00F7               	fcall	_sensor_init
  2314  004E  120A  118A  27D1  120A  118A  	goto	l1990
  2315  0053  2854               	line	28
  2316                           ;main.c: 28:     while (1)
  2317                           	
  2318                           l169:	
  2319  0054                     	line	30
  2320                           	
  2321                           l1990:	
  2322  0054                     ;main.c: 29:     {;main.c: 30:         tecla = teclado();
  2323                           	fcall	_teclado
  2324  0054  120A  118A  25B1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2325  0059  1283               	bcf	status, 6	;RP1=0, select bank0
  2326  005A  1303               	movwf	(??_main+0)+0
  2327  005B  00B7               	movf	(??_main+0)+0,w
  2328  005C  0837               	movwf	(main@tecla)
  2329  005D  00B9               	line	32
  2330                           ;main.c: 32:         switch( estado )
  2331                           	goto	l2080
  2332  005E  2A01               	line	34
  2333                           ;main.c: 33:         {;main.c: 34:             case 0: estado = 1;
  2334                           	
  2335                           l171:	
  2336  005F                     	clrf	(main@estado)
  2337  005F  01BA               	incf	(main@estado),f
  2338  0060  0ABA               	line	35
  2339                           ;main.c: 35:                     break;
  2340                           	goto	l2082
  2341  0061  2A26               	line	37
  2342                           ;main.c: 37:             case 1: dispLCD(0,0,"    WELCOME     ");
  2343                           	
  2344                           l173:	
  2345  0062                     	
  2346                           l1992:	
  2347  0062                     	clrf	(dispLCD@lin)
  2348  0062  01A2               	clrf	(dispLCD@col)
  2349  0063  01A3               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2350  0064  3026               	movwf	(??_main+0)+0
  2351  0065  00B7               	movf	(??_main+0)+0,w
  2352  0066  0837               	movwf	(dispLCD@str)
  2353  0067  00A4               	fcall	_dispLCD
  2354  0068  120A  118A  269C  120A  118A  	line	38
  2355                           	
  2356                           l1994:	
  2357  006D                     ;main.c: 38:                     delay(2000);
  2358                           	movlw	0D0h
  2359  006D  30D0               	movwf	(delay@t)
  2360  006E  00F4               	movlw	07h
  2361  006F  3007               	movwf	((delay@t))+1
  2362  0070  00F5               	fcall	_delay
  2363  0071  120A  118A  277E  120A  118A  	line	39
  2364                           	
  2365                           l1996:	
  2366  0076                     ;main.c: 39:                     dispLCD_clr();
  2367                           	fcall	_dispLCD_clr
  2368  0076  120A  118A  27EC  120A  118A  	line	40
  2369                           	
  2370                           l1998:	
  2371  007B                     ;main.c: 40:                     estado = 10;
  2372                           	movlw	low(0Ah)
  2373  007B  300A               	bcf	status, 5	;RP0=0, select bank0
  2374  007C  1283               	bcf	status, 6	;RP1=0, select bank0
  2375  007D  1303               	movwf	(??_main+0)+0
  2376  007E  00B7               	movf	(??_main+0)+0,w
  2377  007F  0837               	movwf	(main@estado)
  2378  0080  00BA               	line	41
  2379                           ;main.c: 41:                     break;
  2380                           	goto	l2082
  2381  0081  2A26               	line	43
  2382                           ;main.c: 43:             case 10: dispLCD(0,0," TeRtoS PrOjEcT ");
  2383                           	
  2384                           l174:	
  2385  0082                     	
  2386                           l2000:	
  2387  0082                     	clrf	(dispLCD@lin)
  2388  0082  01A2               	clrf	(dispLCD@col)
  2389  0083  01A3               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2390  0084  3059               	movwf	(??_main+0)+0
  2391  0085  00B7               	movf	(??_main+0)+0,w
  2392  0086  0837               	movwf	(dispLCD@str)
  2393  0087  00A4               	fcall	_dispLCD
  2394  0088  120A  118A  269C  120A  118A  	line	44
  2395                           	
  2396                           l2002:	
  2397  008D                     ;main.c: 44:                      delay(2000);
  2398                           	movlw	0D0h
  2399  008D  30D0               	movwf	(delay@t)
  2400  008E  00F4               	movlw	07h
  2401  008F  3007               	movwf	((delay@t))+1
  2402  0090  00F5               	fcall	_delay
  2403  0091  120A  118A  277E  120A  118A  	line	45
  2404                           	
  2405                           l2004:	
  2406  0096                     ;main.c: 45:                      dispLCD_clr();
  2407                           	fcall	_dispLCD_clr
  2408  0096  120A  118A  27EC  120A  118A  	line	46
  2409                           	
  2410                           l2006:	
  2411  009B                     ;main.c: 46:                      estado = 15;
  2412                           	movlw	low(0Fh)
  2413  009B  300F               	bcf	status, 5	;RP0=0, select bank0
  2414  009C  1283               	bcf	status, 6	;RP1=0, select bank0
  2415  009D  1303               	movwf	(??_main+0)+0
  2416  009E  00B7               	movf	(??_main+0)+0,w
  2417  009F  0837               	movwf	(main@estado)
  2418  00A0  00BA               	line	47
  2419                           ;main.c: 47:                      break;
  2420                           	goto	l2082
  2421  00A1  2A26               	line	49
  2422                           ;main.c: 49:             case 15: dispLCD(0,0,"1:Inst   C:Manut");
  2423                           	
  2424                           l175:	
  2425  00A2                     	
  2426                           l2008:	
  2427  00A2                     	clrf	(dispLCD@lin)
  2428  00A2  01A2               	clrf	(dispLCD@col)
  2429  00A3  01A3               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2430  00A4  308C               	movwf	(??_main+0)+0
  2431  00A5  00B7               	movf	(??_main+0)+0,w
  2432  00A6  0837               	movwf	(dispLCD@str)
  2433  00A7  00A4               	fcall	_dispLCD
  2434  00A8  120A  118A  269C  120A  118A  	line	51
  2435                           ;main.c: 51:                      dispLCD(1,0,"Temp:     C        ");
  2436                           	bcf	status, 5	;RP0=0, select bank0
  2437  00AD  1283               	bcf	status, 6	;RP1=0, select bank0
  2438  00AE  1303               	clrf	(dispLCD@lin)
  2439  00AF  01A2               	incf	(dispLCD@lin),f
  2440  00B0  0AA2               	clrf	(dispLCD@col)
  2441  00B1  01A3               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2442  00B2  3001               	movwf	(??_main+0)+0
  2443  00B3  00B7               	movf	(??_main+0)+0,w
  2444  00B4  0837               	movwf	(dispLCD@str)
  2445  00B5  00A4               	fcall	_dispLCD
  2446  00B6  120A  118A  269C  120A  118A  	line	52
  2447                           ;main.c: 52:                      temperatura( &sensor );
  2448                           	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2449  00BB  303B               	fcall	_temperatura
  2450  00BC  120A  118A  23C2  120A  118A  	line	53
  2451                           	
  2452                           l2010:	
  2453  00C1                     ;main.c: 53:                      dispLCD_num(1, 6, sensor.temp_C, 4 );
  2454                           	bcf	status, 5	;RP0=0, select bank0
  2455  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  2456  00C2  1303               	clrf	(dispLCD_num@lin)
  2457  00C3  01AB               	incf	(dispLCD_num@lin),f
  2458  00C4  0AAB               	movlw	low(06h)
  2459  00C5  3006               	movwf	(??_main+0)+0
  2460  00C6  00B7               	movf	(??_main+0)+0,w
  2461  00C7  0837               	movwf	(dispLCD_num@col)
  2462  00C8  00AC               	movf	(main@sensor+1),w
  2463  00C9  083C               	movwf	(dispLCD_num@num+1)
  2464  00CA  00AE               	movf	(main@sensor),w
  2465  00CB  083B               	movwf	(dispLCD_num@num)
  2466  00CC  00AD               	movlw	low(04h)
  2467  00CD  3004               	movwf	(??_main+1)+0
  2468  00CE  00B8               	movf	(??_main+1)+0,w
  2469  00CF  0838               	movwf	(dispLCD_num@tam)
  2470  00D0  00AF               	fcall	_dispLCD_num
  2471  00D1  120A  118A  2231  120A  118A  	line	54
  2472                           	
  2473                           l2012:	
  2474  00D6                     ;main.c: 54:                      estado = 16;
  2475                           	movlw	low(010h)
  2476  00D6  3010               	bcf	status, 5	;RP0=0, select bank0
  2477  00D7  1283               	bcf	status, 6	;RP1=0, select bank0
  2478  00D8  1303               	movwf	(??_main+0)+0
  2479  00D9  00B7               	movf	(??_main+0)+0,w
  2480  00DA  0837               	movwf	(main@estado)
  2481  00DB  00BA               	line	55
  2482                           ;main.c: 55:                      break;
  2483                           	goto	l2082
  2484  00DC  2A26               	line	57
  2485                           ;main.c: 57:             case 16: dispLCD_num(1, 6, sensor.temp_C, 4 );
  2486                           	
  2487                           l176:	
  2488  00DD                     	
  2489                           l2014:	
  2490  00DD                     	clrf	(dispLCD_num@lin)
  2491  00DD  01AB               	incf	(dispLCD_num@lin),f
  2492  00DE  0AAB               	movlw	low(06h)
  2493  00DF  3006               	movwf	(??_main+0)+0
  2494  00E0  00B7               	movf	(??_main+0)+0,w
  2495  00E1  0837               	movwf	(dispLCD_num@col)
  2496  00E2  00AC               	movf	(main@sensor+1),w
  2497  00E3  083C               	movwf	(dispLCD_num@num+1)
  2498  00E4  00AE               	movf	(main@sensor),w
  2499  00E5  083B               	movwf	(dispLCD_num@num)
  2500  00E6  00AD               	movlw	low(04h)
  2501  00E7  3004               	movwf	(??_main+1)+0
  2502  00E8  00B8               	movf	(??_main+1)+0,w
  2503  00E9  0838               	movwf	(dispLCD_num@tam)
  2504  00EA  00AF               	fcall	_dispLCD_num
  2505  00EB  120A  118A  2231  120A  118A  	line	58
  2506                           	
  2507                           l2016:	
  2508  00F0                     ;main.c: 58:                      if(sensor.temp_C > 100)
  2509                           	bcf	status, 5	;RP0=0, select bank0
  2510  00F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2511  00F1  1303               	movf	(main@sensor+1),w
  2512  00F2  083C               	xorlw	80h
  2513  00F3  3A80               	movwf	btemp+1
  2514  00F4  00FF               	movlw	(0)^80h
  2515  00F5  3080               	subwf	btemp+1,w
  2516  00F6  027F               	skipz
  2517  00F7  1D03               	goto	u1855
  2518  00F8  28FB               	movlw	065h
  2519  00F9  3065               	subwf	(main@sensor),w
  2520  00FA  023B               u1855:
  2521  00FB                     
  2522                           	skipc
  2523  00FB  1C03               	goto	u1851
  2524  00FC  28FE               	goto	u1850
  2525  00FD  28FF               u1851:
  2526  00FE                     	goto	l2026
  2527  00FE  2926               u1850:
  2528  00FF                     	line	60
  2529                           	
  2530                           l2018:	
  2531  00FF                     ;main.c: 59:                      {;main.c: 60:                          dispLCD_clr();

  2532                           	fcall	_dispLCD_clr
  2533  00FF  120A  118A  27EC  120A  118A  	line	61
  2534                           	
  2535                           l2020:	
  2536  0104                     ;main.c: 61:                          dispLCD(0, 0, "     ALERTA     ");
  2537                           	bcf	status, 5	;RP0=0, select bank0
  2538  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  2539  0105  1303               	clrf	(dispLCD@lin)
  2540  0106  01A2               	clrf	(dispLCD@col)
  2541  0107  01A3               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  2542  0108  3015               	movwf	(??_main+0)+0
  2543  0109  00B7               	movf	(??_main+0)+0,w
  2544  010A  0837               	movwf	(dispLCD@str)
  2545  010B  00A4               	fcall	_dispLCD
  2546  010C  120A  118A  269C  120A  118A  	line	62
  2547                           	
  2548                           l2022:	
  2549  0111                     ;main.c: 62:                          dispLCD(1, 0, "TEMPERATURA ALTA");
  2550                           	bcf	status, 5	;RP0=0, select bank0
  2551  0111  1283               	bcf	status, 6	;RP1=0, select bank0
  2552  0112  1303               	clrf	(dispLCD@lin)
  2553  0113  01A2               	incf	(dispLCD@lin),f
  2554  0114  0AA2               	clrf	(dispLCD@col)
  2555  0115  01A3               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  2556  0116  306A               	movwf	(??_main+0)+0
  2557  0117  00B7               	movf	(??_main+0)+0,w
  2558  0118  0837               	movwf	(dispLCD@str)
  2559  0119  00A4               	fcall	_dispLCD
  2560  011A  120A  118A  269C  120A  118A  	line	63
  2561                           	
  2562                           l2024:	
  2563  011F                     ;main.c: 63:                          estado = 17;
  2564                           	movlw	low(011h)
  2565  011F  3011               	bcf	status, 5	;RP0=0, select bank0
  2566  0120  1283               	bcf	status, 6	;RP1=0, select bank0
  2567  0121  1303               	movwf	(??_main+0)+0
  2568  0122  00B7               	movf	(??_main+0)+0,w
  2569  0123  0837               	movwf	(main@estado)
  2570  0124  00BA               	goto	l2026
  2571  0125  2926               	line	64
  2572                           ;main.c: 64:                      }
  2573                           	
  2574                           l177:	
  2575  0126                     	line	66
  2576                           	
  2577                           l2026:	
  2578  0126                     ;main.c: 66:                      if(sensor.temp_C < 20 )
  2579                           	bcf	status, 5	;RP0=0, select bank0
  2580  0126  1283               	bcf	status, 6	;RP1=0, select bank0
  2581  0127  1303               	movf	(main@sensor+1),w
  2582  0128  083C               	xorlw	80h
  2583  0129  3A80               	movwf	btemp+1
  2584  012A  00FF               	movlw	(0)^80h
  2585  012B  3080               	subwf	btemp+1,w
  2586  012C  027F               	skipz
  2587  012D  1D03               	goto	u1865
  2588  012E  2931               	movlw	014h
  2589  012F  3014               	subwf	(main@sensor),w
  2590  0130  023B               u1865:
  2591  0131                     
  2592                           	skipnc
  2593  0131  1803               	goto	u1861
  2594  0132  2934               	goto	u1860
  2595  0133  2935               u1861:
  2596  0134                     	goto	l2036
  2597  0134  295C               u1860:
  2598  0135                     	line	68
  2599                           	
  2600                           l2028:	
  2601  0135                     ;main.c: 67:                      {;main.c: 68:                          dispLCD_clr();

  2602                           	fcall	_dispLCD_clr
  2603  0135  120A  118A  27EC  120A  118A  	line	69
  2604                           	
  2605                           l2030:	
  2606  013A                     ;main.c: 69:                          dispLCD(0, 0, "     ALERTA     ");
  2607                           	bcf	status, 5	;RP0=0, select bank0
  2608  013A  1283               	bcf	status, 6	;RP1=0, select bank0
  2609  013B  1303               	clrf	(dispLCD@lin)
  2610  013C  01A2               	clrf	(dispLCD@col)
  2611  013D  01A3               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  2612  013E  3015               	movwf	(??_main+0)+0
  2613  013F  00B7               	movf	(??_main+0)+0,w
  2614  0140  0837               	movwf	(dispLCD@str)
  2615  0141  00A4               	fcall	_dispLCD
  2616  0142  120A  118A  269C  120A  118A  	line	70
  2617                           	
  2618                           l2032:	
  2619  0147                     ;main.c: 70:                          dispLCD(1, 0, "TEMPERATURA BAIX");
  2620                           	bcf	status, 5	;RP0=0, select bank0
  2621  0147  1283               	bcf	status, 6	;RP1=0, select bank0
  2622  0148  1303               	clrf	(dispLCD@lin)
  2623  0149  01A2               	incf	(dispLCD@lin),f
  2624  014A  0AA2               	clrf	(dispLCD@col)
  2625  014B  01A3               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  2626  014C  307B               	movwf	(??_main+0)+0
  2627  014D  00B7               	movf	(??_main+0)+0,w
  2628  014E  0837               	movwf	(dispLCD@str)
  2629  014F  00A4               	fcall	_dispLCD
  2630  0150  120A  118A  269C  120A  118A  	line	71
  2631                           	
  2632                           l2034:	
  2633  0155                     ;main.c: 71:                          estado = 18;
  2634                           	movlw	low(012h)
  2635  0155  3012               	bcf	status, 5	;RP0=0, select bank0
  2636  0156  1283               	bcf	status, 6	;RP1=0, select bank0
  2637  0157  1303               	movwf	(??_main+0)+0
  2638  0158  00B7               	movf	(??_main+0)+0,w
  2639  0159  0837               	movwf	(main@estado)
  2640  015A  00BA               	goto	l2036
  2641  015B  295C               	line	72
  2642                           ;main.c: 72:                      }
  2643                           	
  2644                           l178:	
  2645  015C                     	line	74
  2646                           	
  2647                           l2036:	
  2648  015C                     ;main.c: 74:                      if(tecla == '1')
  2649                           		movlw	49
  2650  015C  3031               	bcf	status, 5	;RP0=0, select bank0
  2651  015D  1283               	bcf	status, 6	;RP1=0, select bank0
  2652  015E  1303               	xorwf	((main@tecla)),w
  2653  015F  0639               	btfss	status,2
  2654  0160  1D03               	goto	u1871
  2655  0161  2963               	goto	u1870
  2656  0162  2964               u1871:
  2657  0163                     	goto	l2042
  2658  0163  2970               u1870:
  2659  0164                     	line	76
  2660                           	
  2661                           l2038:	
  2662  0164                     ;main.c: 75:                      {;main.c: 76:                          dispLCD_clr();

  2663                           	fcall	_dispLCD_clr
  2664  0164  120A  118A  27EC  120A  118A  	line	77
  2665                           	
  2666                           l2040:	
  2667  0169                     ;main.c: 77:                          estado = 20;
  2668                           	movlw	low(014h)
  2669  0169  3014               	bcf	status, 5	;RP0=0, select bank0
  2670  016A  1283               	bcf	status, 6	;RP1=0, select bank0
  2671  016B  1303               	movwf	(??_main+0)+0
  2672  016C  00B7               	movf	(??_main+0)+0,w
  2673  016D  0837               	movwf	(main@estado)
  2674  016E  00BA               	goto	l2042
  2675  016F  2970               	line	78
  2676                           ;main.c: 78:                      }
  2677                           	
  2678                           l179:	
  2679  0170                     	line	79
  2680                           	
  2681                           l2042:	
  2682  0170                     ;main.c: 79:                      if(tecla == 'C')
  2683                           		movlw	67
  2684  0170  3043               	xorwf	((main@tecla)),w
  2685  0171  0639               	btfss	status,2
  2686  0172  1D03               	goto	u1881
  2687  0173  2975               	goto	u1880
  2688  0174  2976               u1881:
  2689  0175                     	goto	l2082
  2690  0175  2A26               u1880:
  2691  0176                     	line	81
  2692                           	
  2693                           l2044:	
  2694  0176                     ;main.c: 80:                      {;main.c: 81:                          dispLCD_clr();

  2695                           	fcall	_dispLCD_clr
  2696  0176  120A  118A  27EC  120A  118A  	line	82
  2697                           	
  2698                           l2046:	
  2699  017B                     ;main.c: 82:                          estado = 100;
  2700                           	movlw	low(064h)
  2701  017B  3064               	bcf	status, 5	;RP0=0, select bank0
  2702  017C  1283               	bcf	status, 6	;RP1=0, select bank0
  2703  017D  1303               	movwf	(??_main+0)+0
  2704  017E  00B7               	movf	(??_main+0)+0,w
  2705  017F  0837               	movwf	(main@estado)
  2706  0180  00BA               	goto	l2082
  2707  0181  2A26               	line	83
  2708                           ;main.c: 83:                      }
  2709                           	
  2710                           l180:	
  2711  0182                     	line	84
  2712                           ;main.c: 84:                      break;
  2713                           	goto	l2082
  2714  0182  2A26               	line	86
  2715                           ;main.c: 86:             case 17: temperatura( &sensor );
  2716                           	
  2717                           l181:	
  2718  0183                     	
  2719                           l2048:	
  2720  0183                     	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2721  0183  303B               	fcall	_temperatura
  2722  0184  120A  118A  23C2  120A  118A  	line	87
  2723                           	
  2724                           l2050:	
  2725  0189                     ;main.c: 87:                      if(sensor.temp_C < 100)
  2726                           	bcf	status, 5	;RP0=0, select bank0
  2727  0189  1283               	bcf	status, 6	;RP1=0, select bank0
  2728  018A  1303               	movf	(main@sensor+1),w
  2729  018B  083C               	xorlw	80h
  2730  018C  3A80               	movwf	btemp+1
  2731  018D  00FF               	movlw	(0)^80h
  2732  018E  3080               	subwf	btemp+1,w
  2733  018F  027F               	skipz
  2734  0190  1D03               	goto	u1895
  2735  0191  2994               	movlw	064h
  2736  0192  3064               	subwf	(main@sensor),w
  2737  0193  023B               u1895:
  2738  0194                     
  2739                           	skipnc
  2740  0194  1803               	goto	u1891
  2741  0195  2997               	goto	u1890
  2742  0196  2998               u1891:
  2743  0197                     	goto	l2082
  2744  0197  2A26               u1890:
  2745  0198                     	line	89
  2746                           	
  2747                           l2052:	
  2748  0198                     ;main.c: 88:                      {;main.c: 89:                          dispLCD_clr();

  2749                           	fcall	_dispLCD_clr
  2750  0198  120A  118A  27EC  120A  118A  	line	90
  2751                           	
  2752                           l2054:	
  2753  019D                     ;main.c: 90:                          estado = 15;
  2754                           	movlw	low(0Fh)
  2755  019D  300F               	bcf	status, 5	;RP0=0, select bank0
  2756  019E  1283               	bcf	status, 6	;RP1=0, select bank0
  2757  019F  1303               	movwf	(??_main+0)+0
  2758  01A0  00B7               	movf	(??_main+0)+0,w
  2759  01A1  0837               	movwf	(main@estado)
  2760  01A2  00BA               	goto	l2082
  2761  01A3  2A26               	line	91
  2762                           ;main.c: 91:                      }
  2763                           	
  2764                           l182:	
  2765  01A4                     	line	92
  2766                           ;main.c: 92:                      break;
  2767                           	goto	l2082
  2768  01A4  2A26               	line	94
  2769                           ;main.c: 94:             case 18: temperatura( &sensor );
  2770                           	
  2771                           l183:	
  2772  01A5                     	
  2773                           l2056:	
  2774  01A5                     	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2775  01A5  303B               	fcall	_temperatura
  2776  01A6  120A  118A  23C2  120A  118A  	line	95
  2777                           	
  2778                           l2058:	
  2779  01AB                     ;main.c: 95:                      if(sensor.temp_C > 20)
  2780                           	bcf	status, 5	;RP0=0, select bank0
  2781  01AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2782  01AC  1303               	movf	(main@sensor+1),w
  2783  01AD  083C               	xorlw	80h
  2784  01AE  3A80               	movwf	btemp+1
  2785  01AF  00FF               	movlw	(0)^80h
  2786  01B0  3080               	subwf	btemp+1,w
  2787  01B1  027F               	skipz
  2788  01B2  1D03               	goto	u1905
  2789  01B3  29B6               	movlw	015h
  2790  01B4  3015               	subwf	(main@sensor),w
  2791  01B5  023B               u1905:
  2792  01B6                     
  2793                           	skipc
  2794  01B6  1C03               	goto	u1901
  2795  01B7  29B9               	goto	u1900
  2796  01B8  29BA               u1901:
  2797  01B9                     	goto	l2082
  2798  01B9  2A26               u1900:
  2799  01BA                     	line	97
  2800                           	
  2801                           l2060:	
  2802  01BA                     ;main.c: 96:                      {;main.c: 97:                          dispLCD_clr();

  2803                           	fcall	_dispLCD_clr
  2804  01BA  120A  118A  27EC  120A  118A  	line	98
  2805                           	
  2806                           l2062:	
  2807  01BF                     ;main.c: 98:                          estado = 15;
  2808                           	movlw	low(0Fh)
  2809  01BF  300F               	bcf	status, 5	;RP0=0, select bank0
  2810  01C0  1283               	bcf	status, 6	;RP1=0, select bank0
  2811  01C1  1303               	movwf	(??_main+0)+0
  2812  01C2  00B7               	movf	(??_main+0)+0,w
  2813  01C3  0837               	movwf	(main@estado)
  2814  01C4  00BA               	goto	l2082
  2815  01C5  2A26               	line	99
  2816                           ;main.c: 99:                      }
  2817                           	
  2818                           l184:	
  2819  01C6                     	line	100
  2820                           ;main.c: 100:                      break;
  2821                           	goto	l2082
  2822  01C6  2A26               	line	102
  2823                           ;main.c: 102:             case 20: dispLCD(0,0,"   Instalacao   ");
  2824                           	
  2825                           l185:	
  2826  01C7                     	
  2827                           l2064:	
  2828  01C7                     	clrf	(dispLCD@lin)
  2829  01C7  01A2               	clrf	(dispLCD@col)
  2830  01C8  01A3               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  2831  01C9  3037               	movwf	(??_main+0)+0
  2832  01CA  00B7               	movf	(??_main+0)+0,w
  2833  01CB  0837               	movwf	(dispLCD@str)
  2834  01CC  00A4               	fcall	_dispLCD
  2835  01CD  120A  118A  269C  120A  118A  	line	103
  2836                           	
  2837                           l2066:	
  2838  01D2                     ;main.c: 103:                      if(tecla == '*')
  2839                           		movlw	42
  2840  01D2  302A               	bcf	status, 5	;RP0=0, select bank0
  2841  01D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2842  01D4  1303               	xorwf	((main@tecla)),w
  2843  01D5  0639               	btfss	status,2
  2844  01D6  1D03               	goto	u1911
  2845  01D7  29D9               	goto	u1910
  2846  01D8  29DA               u1911:
  2847  01D9                     	goto	l2082
  2848  01D9  2A26               u1910:
  2849  01DA                     	line	105
  2850                           	
  2851                           l2068:	
  2852  01DA                     ;main.c: 104:                      {;main.c: 105:                          dispLCD_clr()
                                 ;
  2853                           	fcall	_dispLCD_clr
  2854  01DA  120A  118A  27EC  120A  118A  	line	106
  2855                           	
  2856                           l2070:	
  2857  01DF                     ;main.c: 106:                          estado = 15;
  2858                           	movlw	low(0Fh)
  2859  01DF  300F               	bcf	status, 5	;RP0=0, select bank0
  2860  01E0  1283               	bcf	status, 6	;RP1=0, select bank0
  2861  01E1  1303               	movwf	(??_main+0)+0
  2862  01E2  00B7               	movf	(??_main+0)+0,w
  2863  01E3  0837               	movwf	(main@estado)
  2864  01E4  00BA               	goto	l2082
  2865  01E5  2A26               	line	107
  2866                           ;main.c: 107:                      }
  2867                           	
  2868                           l186:	
  2869  01E6                     	line	108
  2870                           ;main.c: 108:                      break;
  2871                           	goto	l2082
  2872  01E6  2A26               	line	110
  2873                           ;main.c: 110:             case 100:dispLCD(0,0,"   Manutencao   ");
  2874                           	
  2875                           l187:	
  2876  01E7                     	
  2877                           l2072:	
  2878  01E7                     	clrf	(dispLCD@lin)
  2879  01E7  01A2               	clrf	(dispLCD@col)
  2880  01E8  01A3               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  2881  01E9  3048               	movwf	(??_main+0)+0
  2882  01EA  00B7               	movf	(??_main+0)+0,w
  2883  01EB  0837               	movwf	(dispLCD@str)
  2884  01EC  00A4               	fcall	_dispLCD
  2885  01ED  120A  118A  269C  120A  118A  	line	111
  2886                           	
  2887                           l2074:	
  2888  01F2                     ;main.c: 111:                      if(tecla == '*')
  2889                           		movlw	42
  2890  01F2  302A               	bcf	status, 5	;RP0=0, select bank0
  2891  01F3  1283               	bcf	status, 6	;RP1=0, select bank0
  2892  01F4  1303               	xorwf	((main@tecla)),w
  2893  01F5  0639               	btfss	status,2
  2894  01F6  1D03               	goto	u1921
  2895  01F7  29F9               	goto	u1920
  2896  01F8  29FA               u1921:
  2897  01F9                     	goto	l2082
  2898  01F9  2A26               u1920:
  2899  01FA                     	line	112
  2900                           	
  2901                           l2076:	
  2902  01FA                     ;main.c: 112:                          estado = 15;
  2903                           	movlw	low(0Fh)
  2904  01FA  300F               	movwf	(??_main+0)+0
  2905  01FB  00B7               	movf	(??_main+0)+0,w
  2906  01FC  0837               	movwf	(main@estado)
  2907  01FD  00BA               	goto	l2082
  2908  01FE  2A26               	
  2909                           l188:	
  2910  01FF                     	line	113
  2911                           ;main.c: 113:                      break;
  2912                           	goto	l2082
  2913  01FF  2A26               	line	114
  2914                           	
  2915                           l2078:	
  2916  0200                     ;main.c: 114:         }
  2917                           	goto	l2082
  2918  0200  2A26               	
  2919                           l170:	
  2920  0201                     	
  2921                           l2080:	
  2922  0201                     	movf	(main@estado),w
  2923  0201  083A               	movwf	(??_main+0)+0
  2924  0202  00B7               	clrf	(??_main+0)+0+1
  2925  0203  01B8               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2926                           ; Switch size 1, requested type "space"
  2927                           ; Number of cases is 1, Range of values is 0 to 0
  2928                           ; switch strategies available:
  2929                           ; Name         Instructions Cycles
  2930                           ; simple_byte            4     3 (average)
  2931                           ; direct_byte           11     8 (fixed)
  2932                           ; jumptable            260     6 (fixed)
  2933                           ;	Chosen strategy is simple_byte
  2934                           
  2935                           	movf 1+(??_main+0)+0,w
  2936  0204  0838               	opt asmopt_push
  2937                           	opt asmopt_off
  2938                           	xorlw	0^0	; case 0
  2939  0205  3A00               	skipnz
  2940  0206  1903               	goto	l2120
  2941  0207  2A09               	goto	l2082
  2942  0208  2A26               	opt asmopt_pop
  2943                           	
  2944                           l2120:	
  2945  0209                     ; Switch size 1, requested type "space"
  2946                           ; Number of cases is 9, Range of values is 0 to 100
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte           28    15 (average)
  2950                           ; jumptable            260     6 (fixed)
  2951                           ;	Chosen strategy is simple_byte
  2952                           
  2953                           	movf 0+(??_main+0)+0,w
  2954  0209  0837               	opt asmopt_push
  2955                           	opt asmopt_off
  2956                           	xorlw	0^0	; case 0
  2957  020A  3A00               	skipnz
  2958  020B  1903               	goto	l171
  2959  020C  285F               	xorlw	1^0	; case 1
  2960  020D  3A01               	skipnz
  2961  020E  1903               	goto	l1992
  2962  020F  2862               	xorlw	10^1	; case 10
  2963  0210  3A0B               	skipnz
  2964  0211  1903               	goto	l2000
  2965  0212  2882               	xorlw	15^10	; case 15
  2966  0213  3A05               	skipnz
  2967  0214  1903               	goto	l2008
  2968  0215  28A2               	xorlw	16^15	; case 16
  2969  0216  3A1F               	skipnz
  2970  0217  1903               	goto	l2014
  2971  0218  28DD               	xorlw	17^16	; case 17
  2972  0219  3A01               	skipnz
  2973  021A  1903               	goto	l2048
  2974  021B  2983               	xorlw	18^17	; case 18
  2975  021C  3A03               	skipnz
  2976  021D  1903               	goto	l2056
  2977  021E  29A5               	xorlw	20^18	; case 20
  2978  021F  3A06               	skipnz
  2979  0220  1903               	goto	l2064
  2980  0221  29C7               	xorlw	100^20	; case 100
  2981  0222  3A70               	skipnz
  2982  0223  1903               	goto	l2072
  2983  0224  29E7               	goto	l2082
  2984  0225  2A26               	opt asmopt_pop
  2985                           
  2986                           	
  2987                           l172:	
  2988  0226                     	line	116
  2989                           	
  2990                           l2082:	
  2991  0226                     ;main.c: 116:         temperatura( &sensor );
  2992                           	movlw	(low(main@sensor|((0x0)<<8)))&0ffh
  2993  0226  303B               	fcall	_temperatura
  2994  0227  120A  118A  23C2  120A  118A  	goto	l1990
  2995  022C  2854               	line	118
  2996                           ;main.c: 118:     }
  2997                           	
  2998                           l189:	
  2999  022D                     	goto	l1990
  3000  022D  2854               	
  3001                           l190:	
  3002  022E                     	line	123
  3003                           ;main.c: 122:     return;
  3004                           	
  3005                           l191:	
  3006  022E                     	global	start
  3007                           	ljmp	start
  3008  022E  120A  118A  280C   	opt stack 0
  3009                           GLOBAL	__end_of_main
  3010                           	__end_of_main:
  3011  0231                     	signat	_main,89
  3012                           	global	_temperatura
  3013                           
  3014 ;; *************** function _temperatura *****************
  3015 ;; Defined at:
  3016 ;;		line 24 in file "sensor.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  ptr             1    wreg     PTR struct SensorTempera
  3019 ;;		 -> main@sensor(6), 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  ptr             1   20[BANK0 ] PTR struct SensorTempera
  3022 ;;		 -> main@sensor(6), 
  3023 ;;  t               4   16[BANK0 ] long 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      void 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         0       0       0       0       0
  3034 ;;      Locals:         0       5       0       0       0
  3035 ;;      Temps:          0       4       0       0       0
  3036 ;;      Totals:         0       9       0       0       0
  3037 ;;Total ram usage:        9 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		_ADC_read
  3042 ;;		___awdiv
  3043 ;;		___lmul
  3044 ;;		___wmul
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3050                           	file	"sensor.c"
  3051                           	line	24
  3052                           global __ptext1
  3053                           __ptext1:	;psect for function _temperatura
  3054  03C2                     psect	text1
  3055                           	file	"sensor.c"
  3056                           	line	24
  3057                           	global	__size_of_temperatura
  3058                           	__size_of_temperatura	equ	__end_of_temperatura-_temperatura
  3059  009E                     	
  3060                           _temperatura:	
  3061  03C2                     ;incstack = 0
  3062                           	opt	stack 4
  3063                           ; Regs used in _temperatura: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3064                           ;temperatura@ptr stored from wreg
  3065                           	bcf	status, 5	;RP0=0, select bank0
  3066  03C2  1283               	bcf	status, 6	;RP1=0, select bank0
  3067  03C3  1303               	movwf	(temperatura@ptr)
  3068  03C4  00B4               	line	26
  3069                           	
  3070                           l1942:	
  3071  03C5                     ;sensor.c: 24: void temperatura( struct SensorTemperatura_t * ptr );sensor.c: 25: {;sens
                                 or.c: 26:     long t = ADC_read();
  3072                           	fcall	_ADC_read
  3073  03C5  120A  118A  27F3  120A  118A  	movf	(0+(?_ADC_read)),w
  3074  03CA  0874               	bcf	status, 5	;RP0=0, select bank0
  3075  03CB  1283               	bcf	status, 6	;RP1=0, select bank0
  3076  03CC  1303               	movwf	(temperatura@t)
  3077  03CD  00B0               	movf	(1+(?_ADC_read)),w
  3078  03CE  0875               	movwf	((temperatura@t))+1
  3079  03CF  00B1               	clrf	2+((temperatura@t))
  3080  03D0  01B2               	clrf	3+((temperatura@t))
  3081  03D1  01B3               	line	28
  3082                           	
  3083                           l1944:	
  3084  03D2                     ;sensor.c: 28:     t *= (tMax_C - tMin_C);
  3085                           	comf	(_tMin_C),w
  3086  03D2  095A               	movwf	(??_temperatura+0)+0
  3087  03D3  00AC               	comf	(_tMin_C+1),w
  3088  03D4  095B               	movwf	((??_temperatura+0)+0+1)
  3089  03D5  00AD               	incf	(??_temperatura+0)+0,f
  3090  03D6  0AAC               	skipnz
  3091  03D7  1903               	incf	((??_temperatura+0)+0+1),f
  3092  03D8  0AAD               	movf	(_tMax_C),w
  3093  03D9  0858               	addwf	0+(??_temperatura+0)+0,w
  3094  03DA  072C               	movwf	(___lmul@multiplier)
  3095  03DB  00A0               	movf	(_tMax_C+1),w
  3096  03DC  0859               	skipnc
  3097  03DD  1803               	incf	(_tMax_C+1),w
  3098  03DE  0A59               	addwf	1+(??_temperatura+0)+0,w
  3099  03DF  072D               	movwf	1+(___lmul@multiplier)
  3100  03E0  00A1               	clrf	(___lmul@multiplier)+2
  3101  03E1  01A2               	btfsc	(___lmul@multiplier)+1,7
  3102  03E2  1BA1               	decf	2+(___lmul@multiplier),f
  3103  03E3  03A2               	movf	(___lmul@multiplier)+2,w
  3104  03E4  0822               	movwf	3+(___lmul@multiplier)
  3105  03E5  00A3               	movf	(temperatura@t+3),w
  3106  03E6  0833               	movwf	(___lmul@multiplicand+3)
  3107  03E7  00A7               	movf	(temperatura@t+2),w
  3108  03E8  0832               	movwf	(___lmul@multiplicand+2)
  3109  03E9  00A6               	movf	(temperatura@t+1),w
  3110  03EA  0831               	movwf	(___lmul@multiplicand+1)
  3111  03EB  00A5               	movf	(temperatura@t),w
  3112  03EC  0830               	movwf	(___lmul@multiplicand)
  3113  03ED  00A4               
  3114                           	fcall	___lmul
  3115  03EE  120A  118A  260F  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3116  03F3  1283               	bcf	status, 6	;RP1=0, select bank0
  3117  03F4  1303               	movf	(3+(?___lmul)),w
  3118  03F5  0823               	movwf	(temperatura@t+3)
  3119  03F6  00B3               	movf	(2+(?___lmul)),w
  3120  03F7  0822               	movwf	(temperatura@t+2)
  3121  03F8  00B2               	movf	(1+(?___lmul)),w
  3122  03F9  0821               	movwf	(temperatura@t+1)
  3123  03FA  00B1               	movf	(0+(?___lmul)),w
  3124  03FB  0820               	movwf	(temperatura@t)
  3125  03FC  00B0               
  3126                           	line	29
  3127                           	
  3128                           l1946:	
  3129  03FD                     ;sensor.c: 29:     t >>= 10;
  3130                           	movlw	0Ah
  3131  03FD  300A               	movwf	(??_temperatura+0)+0
  3132  03FE  00AC               u1795:
  3133  03FF                     	rlf	(temperatura@t+3),w
  3134  03FF  0D33               	rrf	(temperatura@t+3),f
  3135  0400  0CB3               	rrf	(temperatura@t+2),f
  3136  0401  0CB2               	rrf	(temperatura@t+1),f
  3137  0402  0CB1               	rrf	(temperatura@t),f
  3138  0403  0CB0               	decfsz	(??_temperatura+0)+0&07fh,f
  3139  0404  0BAC               	goto	u1795
  3140  0405  2BFF               
  3141                           	line	31
  3142                           	
  3143                           l1948:	
  3144  0406                     ;sensor.c: 31:     ptr->temp_C = (int)(t + tMin_C);
  3145                           	movf	(temperatura@t),w
  3146  0406  0830               	addwf	(_tMin_C),w
  3147  0407  075A               	movwf	(??_temperatura+0)+0
  3148  0408  00AC               	movf	(temperatura@t+1),w
  3149  0409  0831               	skipnc
  3150  040A  1803               	incf	(temperatura@t+1),w
  3151  040B  0A31               	addwf	(_tMin_C+1),w
  3152  040C  075B               	movwf	1+(??_temperatura+0)+0
  3153  040D  00AD               	movf	(temperatura@ptr),w
  3154  040E  0834               	movwf	fsr0
  3155  040F  0084               	movf	0+(??_temperatura+0)+0,w
  3156  0410  082C               	bcf	status, 7	;select IRP bank0
  3157  0411  1383               	movwf	indf
  3158  0412  0080               	incf	fsr0,f
  3159  0413  0A84               	movf	1+(??_temperatura+0)+0,w
  3160  0414  082D               	movwf	indf
  3161  0415  0080               	line	32
  3162                           	
  3163                           l1950:	
  3164  0416                     ;sensor.c: 32:     ptr->temp_F = ((ptr->temp_C*9)/5)+32;
  3165                           	movlw	05h
  3166  0416  3005               	movwf	(___awdiv@divisor)
  3167  0417  00A2               	movlw	0
  3168  0418  3000               	movwf	((___awdiv@divisor))+1
  3169  0419  00A3               	movf	(temperatura@ptr),w
  3170  041A  0834               	movwf	fsr0
  3171  041B  0084               	movf	indf,w
  3172  041C  0800               	movwf	(___wmul@multiplier)
  3173  041D  00F4               	incf	fsr0,f
  3174  041E  0A84               	movf	indf,w
  3175  041F  0800               	movwf	(___wmul@multiplier+1)
  3176  0420  00F5               	movlw	09h
  3177  0421  3009               	movwf	(___wmul@multiplicand)
  3178  0422  00F6               	movlw	0
  3179  0423  3000               	movwf	((___wmul@multiplicand))+1
  3180  0424  00F7               	fcall	___wmul
  3181  0425  120A  118A  26CE  120A  118A  	movf	(1+(?___wmul)),w
  3182  042A  0875               	bcf	status, 5	;RP0=0, select bank0
  3183  042B  1283               	bcf	status, 6	;RP1=0, select bank0
  3184  042C  1303               	movwf	(___awdiv@dividend+1)
  3185  042D  00A5               	movf	(0+(?___wmul)),w
  3186  042E  0874               	movwf	(___awdiv@dividend)
  3187  042F  00A4               	fcall	___awdiv
  3188  0430  120A  118A  24D9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3189  0435  1283               	bcf	status, 6	;RP1=0, select bank0
  3190  0436  1303               	movf	(0+(?___awdiv)),w
  3191  0437  0822               	addlw	low(020h)
  3192  0438  3E20               	movwf	(??_temperatura+0)+0
  3193  0439  00AC               	movf	(1+(?___awdiv)),w
  3194  043A  0823               	skipnc
  3195  043B  1803               	addlw	1
  3196  043C  3E01               	addlw	high(020h)
  3197  043D  3E00               	movwf	1+(??_temperatura+0)+0
  3198  043E  00AD               	movf	(temperatura@ptr),w
  3199  043F  0834               	addlw	04h
  3200  0440  3E04               	movwf	fsr0
  3201  0441  0084               	movf	0+(??_temperatura+0)+0,w
  3202  0442  082C               	bcf	status, 7	;select IRP bank0
  3203  0443  1383               	movwf	indf
  3204  0444  0080               	incf	fsr0,f
  3205  0445  0A84               	movf	1+(??_temperatura+0)+0,w
  3206  0446  082D               	movwf	indf
  3207  0447  0080               	line	33
  3208                           	
  3209                           l1952:	
  3210  0448                     ;sensor.c: 33:     ptr->temp_K = ptr->temp_C + 273;
  3211                           	movf	(temperatura@ptr),w
  3212  0448  0834               	movwf	fsr0
  3213  0449  0084               	movf	indf,w
  3214  044A  0800               	movwf	(??_temperatura+0)+0+0
  3215  044B  00AC               	incf	fsr0,f
  3216  044C  0A84               	movf	indf,w
  3217  044D  0800               	movwf	(??_temperatura+0)+0+1
  3218  044E  00AD               	movf	0+(??_temperatura+0)+0,w
  3219  044F  082C               	addlw	low(0111h)
  3220  0450  3E11               	movwf	(??_temperatura+2)+0
  3221  0451  00AE               	movf	1+(??_temperatura+0)+0,w
  3222  0452  082D               	skipnc
  3223  0453  1803               	addlw	1
  3224  0454  3E01               	addlw	high(0111h)
  3225  0455  3E01               	movwf	1+(??_temperatura+2)+0
  3226  0456  00AF               	movf	(temperatura@ptr),w
  3227  0457  0834               	addlw	02h
  3228  0458  3E02               	movwf	fsr0
  3229  0459  0084               	movf	0+(??_temperatura+2)+0,w
  3230  045A  082E               	movwf	indf
  3231  045B  0080               	incf	fsr0,f
  3232  045C  0A84               	movf	1+(??_temperatura+2)+0,w
  3233  045D  082F               	movwf	indf
  3234  045E  0080               	line	34
  3235                           	
  3236                           l205:	
  3237  045F                     	return
  3238  045F  0008               	opt stack 0
  3239                           GLOBAL	__end_of_temperatura
  3240                           	__end_of_temperatura:
  3241  0460                     	signat	_temperatura,4217
  3242                           	global	___wmul
  3243                           
  3244 ;; *************** function ___wmul *****************
  3245 ;; Defined at:
  3246 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  multiplier      2    4[COMMON] unsigned int 
  3249 ;;  multiplicand    2    6[COMMON] unsigned int 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  product         2    0[BANK0 ] unsigned int 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2    4[COMMON] unsigned int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3261 ;;      Params:         4       0       0       0       0
  3262 ;;      Locals:         0       2       0       0       0
  3263 ;;      Temps:          0       0       0       0       0
  3264 ;;      Totals:         4       2       0       0       0
  3265 ;;Total ram usage:        6 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    2
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_temperatura
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           psect	text2,local,class=CODE,delta=2,merge=1,group=1
  3275                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3276                           	line	15
  3277                           global __ptext2
  3278                           __ptext2:	;psect for function ___wmul
  3279  06CE                     psect	text2
  3280                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3281                           	line	15
  3282                           	global	__size_of___wmul
  3283                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3284  002E                     	
  3285                           ___wmul:	
  3286  06CE                     ;incstack = 0
  3287                           	opt	stack 4
  3288                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3289                           	line	43
  3290                           	
  3291                           l1812:	
  3292  06CE                     	bcf	status, 5	;RP0=0, select bank0
  3293  06CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3294  06CF  1303               	clrf	(___wmul@product)
  3295  06D0  01A0               	clrf	(___wmul@product+1)
  3296  06D1  01A1               	goto	l1814
  3297  06D2  2ED3               	line	44
  3298                           	
  3299                           l290:	
  3300  06D3                     	line	45
  3301                           	
  3302                           l1814:	
  3303  06D3                     	btfss	(___wmul@multiplier),(0)&7
  3304  06D3  1C74               	goto	u1511
  3305  06D4  2ED6               	goto	u1510
  3306  06D5  2ED7               u1511:
  3307  06D6                     	goto	l291
  3308  06D6  2EDF               u1510:
  3309  06D7                     	line	46
  3310                           	
  3311                           l1816:	
  3312  06D7                     	movf	(___wmul@multiplicand),w
  3313  06D7  0876               	bcf	status, 5	;RP0=0, select bank0
  3314  06D8  1283               	bcf	status, 6	;RP1=0, select bank0
  3315  06D9  1303               	addwf	(___wmul@product),f
  3316  06DA  07A0               	skipnc
  3317  06DB  1803               	incf	(___wmul@product+1),f
  3318  06DC  0AA1               	movf	(___wmul@multiplicand+1),w
  3319  06DD  0877               	addwf	(___wmul@product+1),f
  3320  06DE  07A1               	
  3321                           l291:	
  3322  06DF                     	line	47
  3323                           	movlw	01h
  3324  06DF  3001               	
  3325                           u1525:
  3326  06E0                     	clrc
  3327  06E0  1003               	rlf	(___wmul@multiplicand),f
  3328  06E1  0DF6               	rlf	(___wmul@multiplicand+1),f
  3329  06E2  0DF7               	addlw	-1
  3330  06E3  3EFF               	skipz
  3331  06E4  1D03               	goto	u1525
  3332  06E5  2EE0               	line	48
  3333                           	
  3334                           l1818:	
  3335  06E6                     	movlw	01h
  3336  06E6  3001               	
  3337                           u1535:
  3338  06E7                     	clrc
  3339  06E7  1003               	rrf	(___wmul@multiplier+1),f
  3340  06E8  0CF5               	rrf	(___wmul@multiplier),f
  3341  06E9  0CF4               	addlw	-1
  3342  06EA  3EFF               	skipz
  3343  06EB  1D03               	goto	u1535
  3344  06EC  2EE7               	line	49
  3345                           	
  3346                           l1820:	
  3347  06ED                     	movf	((___wmul@multiplier)),w
  3348  06ED  0874               iorwf	((___wmul@multiplier+1)),w
  3349  06EE  0475               	btfss	status,2
  3350  06EF  1D03               	goto	u1541
  3351  06F0  2EF2               	goto	u1540
  3352  06F1  2EF3               u1541:
  3353  06F2                     	goto	l1814
  3354  06F2  2ED3               u1540:
  3355  06F3                     	goto	l1822
  3356  06F3  2EF4               	
  3357                           l292:	
  3358  06F4                     	line	52
  3359                           	
  3360                           l1822:	
  3361  06F4                     	bcf	status, 5	;RP0=0, select bank0
  3362  06F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3363  06F5  1303               	movf	(___wmul@product+1),w
  3364  06F6  0821               	movwf	(?___wmul+1)
  3365  06F7  00F5               	movf	(___wmul@product),w
  3366  06F8  0820               	movwf	(?___wmul)
  3367  06F9  00F4               	goto	l293
  3368  06FA  2EFB               	
  3369                           l1824:	
  3370  06FB                     	line	53
  3371                           	
  3372                           l293:	
  3373  06FB                     	return
  3374  06FB  0008               	opt stack 0
  3375                           GLOBAL	__end_of___wmul
  3376                           	__end_of___wmul:
  3377  06FC                     	signat	___wmul,8314
  3378                           	global	___lmul
  3379                           
  3380 ;; *************** function ___lmul *****************
  3381 ;; Defined at:
  3382 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3385 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  product         4    8[BANK0 ] unsigned long 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  4    0[BANK0 ] unsigned long 
  3390 ;; Registers used:
  3391 ;;		wreg, status,2, status,0
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3397 ;;      Params:         0       8       0       0       0
  3398 ;;      Locals:         0       4       0       0       0
  3399 ;;      Temps:          1       0       0       0       0
  3400 ;;      Totals:         1      12       0       0       0
  3401 ;;Total ram usage:       13 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    2
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_temperatura
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  3411                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3412                           	line	15
  3413                           global __ptext3
  3414                           __ptext3:	;psect for function ___lmul
  3415  060F                     psect	text3
  3416                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  3417                           	line	15
  3418                           	global	__size_of___lmul
  3419                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  3420  004C                     	
  3421                           ___lmul:	
  3422  060F                     ;incstack = 0
  3423                           	opt	stack 4
  3424                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3425                           	line	119
  3426                           	
  3427                           l1826:	
  3428  060F                     	movlw	high highword(0)
  3429  060F  3000               	bcf	status, 5	;RP0=0, select bank0
  3430  0610  1283               	bcf	status, 6	;RP1=0, select bank0
  3431  0611  1303               	movwf	(___lmul@product+3)
  3432  0612  00AB               	movlw	low highword(0)
  3433  0613  3000               	movwf	(___lmul@product+2)
  3434  0614  00AA               	movlw	high(0)
  3435  0615  3000               	movwf	(___lmul@product+1)
  3436  0616  00A9               	movlw	low(0)
  3437  0617  3000               	movwf	(___lmul@product)
  3438  0618  00A8               
  3439                           	goto	l1828
  3440  0619  2E1A               	line	120
  3441                           	
  3442                           l302:	
  3443  061A                     	line	121
  3444                           	
  3445                           l1828:	
  3446  061A                     	btfss	(___lmul@multiplier),(0)&7
  3447  061A  1C20               	goto	u1551
  3448  061B  2E1D               	goto	u1550
  3449  061C  2E1E               u1551:
  3450  061D                     	goto	l1832
  3451  061D  2E36               u1550:
  3452  061E                     	line	122
  3453                           	
  3454                           l1830:	
  3455  061E                     	movf	(___lmul@multiplicand),w
  3456  061E  0824               	addwf	(___lmul@product),f
  3457  061F  07A8               	movf	(___lmul@multiplicand+1),w
  3458  0620  0825               	clrz
  3459  0621  1103               	skipnc
  3460  0622  1803               	addlw	1
  3461  0623  3E01               	skipnz
  3462  0624  1903               	goto	u1561
  3463  0625  2E27               	addwf	(___lmul@product+1),f
  3464  0626  07A9               u1561:
  3465  0627                     	movf	(___lmul@multiplicand+2),w
  3466  0627  0826               	clrz
  3467  0628  1103               	skipnc
  3468  0629  1803               	addlw	1
  3469  062A  3E01               	skipnz
  3470  062B  1903               	goto	u1562
  3471  062C  2E2E               	addwf	(___lmul@product+2),f
  3472  062D  07AA               u1562:
  3473  062E                     	movf	(___lmul@multiplicand+3),w
  3474  062E  0827               	clrz
  3475  062F  1103               	skipnc
  3476  0630  1803               	addlw	1
  3477  0631  3E01               	skipnz
  3478  0632  1903               	goto	u1563
  3479  0633  2E35               	addwf	(___lmul@product+3),f
  3480  0634  07AB               u1563:
  3481  0635                     
  3482                           	goto	l1832
  3483  0635  2E36               	
  3484                           l303:	
  3485  0636                     	line	123
  3486                           	
  3487                           l1832:	
  3488  0636                     	movlw	01h
  3489  0636  3001               	movwf	(??___lmul+0)+0
  3490  0637  00F4               u1575:
  3491  0638                     	clrc
  3492  0638  1003               	rlf	(___lmul@multiplicand),f
  3493  0639  0DA4               	rlf	(___lmul@multiplicand+1),f
  3494  063A  0DA5               	rlf	(___lmul@multiplicand+2),f
  3495  063B  0DA6               	rlf	(___lmul@multiplicand+3),f
  3496  063C  0DA7               	decfsz	(??___lmul+0)+0
  3497  063D  0BF4               	goto	u1575
  3498  063E  2E38               	line	124
  3499                           	
  3500                           l1834:	
  3501  063F                     	movlw	01h
  3502  063F  3001               u1585:
  3503  0640                     	clrc
  3504  0640  1003               	rrf	(___lmul@multiplier+3),f
  3505  0641  0CA3               	rrf	(___lmul@multiplier+2),f
  3506  0642  0CA2               	rrf	(___lmul@multiplier+1),f
  3507  0643  0CA1               	rrf	(___lmul@multiplier),f
  3508  0644  0CA0               	addlw	-1
  3509  0645  3EFF               	skipz
  3510  0646  1D03               	goto	u1585
  3511  0647  2E40               
  3512                           	line	125
  3513                           	movf	(___lmul@multiplier+3),w
  3514  0648  0823               	iorwf	(___lmul@multiplier+2),w
  3515  0649  0422               	iorwf	(___lmul@multiplier+1),w
  3516  064A  0421               	iorwf	(___lmul@multiplier),w
  3517  064B  0420               	skipz
  3518  064C  1D03               	goto	u1591
  3519  064D  2E4F               	goto	u1590
  3520  064E  2E50               u1591:
  3521  064F                     	goto	l1828
  3522  064F  2E1A               u1590:
  3523  0650                     	goto	l1836
  3524  0650  2E51               	
  3525                           l304:	
  3526  0651                     	line	128
  3527                           	
  3528                           l1836:	
  3529  0651                     	movf	(___lmul@product+3),w
  3530  0651  082B               	movwf	(?___lmul+3)
  3531  0652  00A3               	movf	(___lmul@product+2),w
  3532  0653  082A               	movwf	(?___lmul+2)
  3533  0654  00A2               	movf	(___lmul@product+1),w
  3534  0655  0829               	movwf	(?___lmul+1)
  3535  0656  00A1               	movf	(___lmul@product),w
  3536  0657  0828               	movwf	(?___lmul)
  3537  0658  00A0               
  3538                           	goto	l305
  3539  0659  2E5A               	
  3540                           l1838:	
  3541  065A                     	line	129
  3542                           	
  3543                           l305:	
  3544  065A                     	return
  3545  065A  0008               	opt stack 0
  3546                           GLOBAL	__end_of___lmul
  3547                           	__end_of___lmul:
  3548  065B                     	signat	___lmul,8316
  3549                           	global	_ADC_read
  3550                           
  3551 ;; *************** function _ADC_read *****************
  3552 ;; Defined at:
  3553 ;;		line 39 in file "adc.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2    4[COMMON] unsigned int 
  3560 ;; Registers used:
  3561 ;;		wreg
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         2       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         2       0       0       0       0
  3571 ;;Total ram usage:        2 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    2
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_temperatura
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3581                           	file	"adc.c"
  3582                           	line	39
  3583                           global __ptext4
  3584                           __ptext4:	;psect for function _ADC_read
  3585  07F3                     psect	text4
  3586                           	file	"adc.c"
  3587                           	line	39
  3588                           	global	__size_of_ADC_read
  3589                           	__size_of_ADC_read	equ	__end_of_ADC_read-_ADC_read
  3590  0006                     	
  3591                           _ADC_read:	
  3592  07F3                     ;incstack = 0
  3593                           	opt	stack 4
  3594                           ; Regs used in _ADC_read: [wreg]
  3595                           	line	41
  3596                           	
  3597                           l1344:	
  3598  07F3                     ;adc.c: 41:     return( ADC_value );
  3599                           	movf	(_ADC_value+1),w
  3600  07F3  0879               	movwf	(?_ADC_read+1)
  3601  07F4  00F5               	movf	(_ADC_value),w
  3602  07F5  0878               	movwf	(?_ADC_read)
  3603  07F6  00F4               	goto	l25
  3604  07F7  2FF8               	
  3605                           l1346:	
  3606  07F8                     	line	42
  3607                           	
  3608                           l25:	
  3609  07F8                     	return
  3610  07F8  0008               	opt stack 0
  3611                           GLOBAL	__end_of_ADC_read
  3612                           	__end_of_ADC_read:
  3613  07F9                     	signat	_ADC_read,90
  3614                           	global	_teclado_init
  3615                           
  3616 ;; *************** function _teclado_init *****************
  3617 ;; Defined at:
  3618 ;;		line 28 in file "keypad.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    2
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3646                           	file	"keypad.c"
  3647                           	line	28
  3648                           global __ptext5
  3649                           __ptext5:	;psect for function _teclado_init
  3650  07E1                     psect	text5
  3651                           	file	"keypad.c"
  3652                           	line	28
  3653                           	global	__size_of_teclado_init
  3654                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  3655  000B                     	
  3656                           _teclado_init:	
  3657  07E1                     ;incstack = 0
  3658                           	opt	stack 5
  3659                           ; Regs used in _teclado_init: [wreg+status,2]
  3660                           	line	30
  3661                           	
  3662                           l1548:	
  3663  07E1                     ;keypad.c: 30:     ANSELH = 0;
  3664                           	bsf	status, 5	;RP0=1, select bank3
  3665  07E1  1683               	bsf	status, 6	;RP1=1, select bank3
  3666  07E2  1703               	clrf	(393)^0180h	;volatile
  3667  07E3  0189               	line	31
  3668                           	
  3669                           l1550:	
  3670  07E4                     ;keypad.c: 31:     TRISB = 0xF0;
  3671                           	movlw	low(0F0h)
  3672  07E4  30F0               	bsf	status, 5	;RP0=1, select bank1
  3673  07E5  1683               	bcf	status, 6	;RP1=0, select bank1
  3674  07E6  1303               	movwf	(134)^080h	;volatile
  3675  07E7  0086               	line	32
  3676                           	
  3677                           l1552:	
  3678  07E8                     ;keypad.c: 32:     PORTB = 0x00;
  3679                           	bcf	status, 5	;RP0=0, select bank0
  3680  07E8  1283               	bcf	status, 6	;RP1=0, select bank0
  3681  07E9  1303               	clrf	(6)	;volatile
  3682  07EA  0186               	line	33
  3683                           	
  3684                           l130:	
  3685  07EB                     	return
  3686  07EB  0008               	opt stack 0
  3687                           GLOBAL	__end_of_teclado_init
  3688                           	__end_of_teclado_init:
  3689  07EC                     	signat	_teclado_init,89
  3690                           	global	_teclado
  3691                           
  3692 ;; *************** function _teclado *****************
  3693 ;; Defined at:
  3694 ;;		line 35 in file "keypad.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  lin             1    2[BANK0 ] unsigned char 
  3699 ;;  col             1    1[BANK0 ] unsigned char 
  3700 ;;  tecla           1    0[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         0       3       0       0       0
  3712 ;;      Temps:          4       0       0       0       0
  3713 ;;      Totals:         4       3       0       0       0
  3714 ;;Total ram usage:        7 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3724                           	line	35
  3725                           global __ptext6
  3726                           __ptext6:	;psect for function _teclado
  3727  05B1                     psect	text6
  3728                           	file	"keypad.c"
  3729                           	line	35
  3730                           	global	__size_of_teclado
  3731                           	__size_of_teclado	equ	__end_of_teclado-_teclado
  3732  005E                     	
  3733                           _teclado:	
  3734  05B1                     ;incstack = 0
  3735                           	opt	stack 5
  3736                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0]
  3737                           	line	37
  3738                           	
  3739                           l1554:	
  3740  05B1                     ;keypad.c: 37:     char tecla = 0;
  3741                           	bcf	status, 5	;RP0=0, select bank0
  3742  05B1  1283               	bcf	status, 6	;RP1=0, select bank0
  3743  05B2  1303               	clrf	(teclado@tecla)
  3744  05B3  01A0               	line	40
  3745                           ;keypad.c: 38:     char col, lin;;keypad.c: 40:     for(lin=0; lin<4; lin++)
  3746                           	clrf	(teclado@lin)
  3747  05B4  01A2               	
  3748                           l1556:	
  3749  05B5                     	movlw	low(04h)
  3750  05B5  3004               	subwf	(teclado@lin),w
  3751  05B6  0222               	skipc
  3752  05B7  1C03               	goto	u1211
  3753  05B8  2DBA               	goto	u1210
  3754  05B9  2DBB               u1211:
  3755  05BA                     	goto	l1560
  3756  05BA  2DBD               u1210:
  3757  05BB                     	goto	l1580
  3758  05BB  2E0C               	
  3759                           l1558:	
  3760  05BC                     	goto	l1580
  3761  05BC  2E0C               	
  3762                           l133:	
  3763  05BD                     	line	42
  3764                           	
  3765                           l1560:	
  3766  05BD                     ;keypad.c: 41:     {;keypad.c: 42:         PORTB = 0x01<<lin;
  3767                           	movlw	low(01h)
  3768  05BD  3001               	movwf	(??_teclado+0)+0
  3769  05BE  00F4               	incf	(teclado@lin),w
  3770  05BF  0A22               	goto	u1224
  3771  05C0  2DC3               u1225:
  3772  05C1                     	clrc
  3773  05C1  1003               	rlf	(??_teclado+0)+0,f
  3774  05C2  0DF4               u1224:
  3775  05C3                     	addlw	-1
  3776  05C3  3EFF               	skipz
  3777  05C4  1D03               	goto	u1225
  3778  05C5  2DC1               	movf	0+(??_teclado+0)+0,w
  3779  05C6  0874               	movwf	(6)	;volatile
  3780  05C7  0086               	line	43
  3781                           	
  3782                           l1562:	
  3783  05C8                     ;keypad.c: 43:         for(col=0; col<4; col++)
  3784                           	clrf	(teclado@col)
  3785  05C8  01A1               	
  3786                           l1564:	
  3787  05C9                     	movlw	low(04h)
  3788  05C9  3004               	subwf	(teclado@col),w
  3789  05CA  0221               	skipc
  3790  05CB  1C03               	goto	u1231
  3791  05CC  2DCE               	goto	u1230
  3792  05CD  2DCF               u1231:
  3793  05CE                     	goto	l1568
  3794  05CE  2DD1               u1230:
  3795  05CF                     	goto	l1576
  3796  05CF  2E01               	
  3797                           l1566:	
  3798  05D0                     	goto	l1576
  3799  05D0  2E01               	
  3800                           l135:	
  3801  05D1                     	line	45
  3802                           	
  3803                           l1568:	
  3804  05D1                     ;keypad.c: 44:         {;keypad.c: 45:             if(PORTB & 0x10<<col)
  3805                           	movlw	low(010h)
  3806  05D1  3010               	movwf	(??_teclado+0)+0
  3807  05D2  00F4               	incf	(teclado@col),w
  3808  05D3  0A21               	goto	u1244
  3809  05D4  2DD7               u1245:
  3810  05D5                     	clrc
  3811  05D5  1003               	rlf	(??_teclado+0)+0,f
  3812  05D6  0DF4               u1244:
  3813  05D7                     	addlw	-1
  3814  05D7  3EFF               	skipz
  3815  05D8  1D03               	goto	u1245
  3816  05D9  2DD5               	movf	0+(??_teclado+0)+0,w
  3817  05DA  0874               	andwf	(6),w	;volatile
  3818  05DB  0506               	btfsc	status,2
  3819  05DC  1903               	goto	u1251
  3820  05DD  2DDF               	goto	u1250
  3821  05DE  2DE0               u1251:
  3822  05DF                     	goto	l1572
  3823  05DF  2DF6               u1250:
  3824  05E0                     	line	46
  3825                           	
  3826                           l1570:	
  3827  05E0                     ;keypad.c: 46:                 tecla = tabela[lin][col];
  3828                           	movf	(teclado@lin),w
  3829  05E0  0822               	movwf	(??_teclado+0)+0
  3830  05E1  00F4               	movlw	02h
  3831  05E2  3002               u1265:
  3832  05E3                     	clrc
  3833  05E3  1003               	rlf	(??_teclado+0)+0,f
  3834  05E4  0DF4               	addlw	-1
  3835  05E5  3EFF               	skipz
  3836  05E6  1D03               	goto	u1265
  3837  05E7  2DE3               	movlw	(low(_tabela|((0x0)<<8)))&0ffh
  3838  05E8  3041               	addwf	0+(??_teclado+0)+0,w
  3839  05E9  0774               	movwf	(??_teclado+1)+0
  3840  05EA  00F5               	movf	(teclado@col),w
  3841  05EB  0821               	addwf	0+(??_teclado+1)+0,w
  3842  05EC  0775               	movwf	(??_teclado+2)+0
  3843  05ED  00F6               	movf	0+(??_teclado+2)+0,w
  3844  05EE  0876               	movwf	fsr0
  3845  05EF  0084               	bcf	status, 7	;select IRP bank0
  3846  05F0  1383               	movf	indf,w
  3847  05F1  0800               	movwf	(??_teclado+3)+0
  3848  05F2  00F7               	movf	(??_teclado+3)+0,w
  3849  05F3  0877               	movwf	(teclado@tecla)
  3850  05F4  00A0               	goto	l1572
  3851  05F5  2DF6               	
  3852                           l137:	
  3853  05F6                     	line	47
  3854                           	
  3855                           l1572:	
  3856  05F6                     ;keypad.c: 47:         }
  3857                           	movlw	low(01h)
  3858  05F6  3001               	movwf	(??_teclado+0)+0
  3859  05F7  00F4               	movf	(??_teclado+0)+0,w
  3860  05F8  0874               	addwf	(teclado@col),f
  3861  05F9  07A1               	
  3862                           l1574:	
  3863  05FA                     	movlw	low(04h)
  3864  05FA  3004               	subwf	(teclado@col),w
  3865  05FB  0221               	skipc
  3866  05FC  1C03               	goto	u1271
  3867  05FD  2DFF               	goto	u1270
  3868  05FE  2E00               u1271:
  3869  05FF                     	goto	l1568
  3870  05FF  2DD1               u1270:
  3871  0600                     	goto	l1576
  3872  0600  2E01               	
  3873                           l136:	
  3874  0601                     	line	48
  3875                           	
  3876                           l1576:	
  3877  0601                     ;keypad.c: 48:     }
  3878                           	movlw	low(01h)
  3879  0601  3001               	movwf	(??_teclado+0)+0
  3880  0602  00F4               	movf	(??_teclado+0)+0,w
  3881  0603  0874               	addwf	(teclado@lin),f
  3882  0604  07A2               	
  3883                           l1578:	
  3884  0605                     	movlw	low(04h)
  3885  0605  3004               	subwf	(teclado@lin),w
  3886  0606  0222               	skipc
  3887  0607  1C03               	goto	u1281
  3888  0608  2E0A               	goto	u1280
  3889  0609  2E0B               u1281:
  3890  060A                     	goto	l1560
  3891  060A  2DBD               u1280:
  3892  060B                     	goto	l1580
  3893  060B  2E0C               	
  3894                           l134:	
  3895  060C                     	line	50
  3896                           	
  3897                           l1580:	
  3898  060C                     ;keypad.c: 50:     return(tecla);
  3899                           	movf	(teclado@tecla),w
  3900  060C  0820               	goto	l138
  3901  060D  2E0E               	
  3902                           l1582:	
  3903  060E                     	line	51
  3904                           	
  3905                           l138:	
  3906  060E                     	return
  3907  060E  0008               	opt stack 0
  3908                           GLOBAL	__end_of_teclado
  3909                           	__end_of_teclado:
  3910  060F                     	signat	_teclado,89
  3911                           	global	_sensor_init
  3912                           
  3913 ;; *************** function _sensor_init *****************
  3914 ;; Defined at:
  3915 ;;		line 17 in file "sensor.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  tmin            2    4[COMMON] int 
  3918 ;;  tmax            2    6[COMMON] int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         4       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         4       0       0       0       0
  3934 ;;Total ram usage:        4 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    3
  3937 ;; This function calls:
  3938 ;;		_ADC_init
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3944                           	file	"sensor.c"
  3945                           	line	17
  3946                           global __ptext7
  3947                           __ptext7:	;psect for function _sensor_init
  3948  07D1                     psect	text7
  3949                           	file	"sensor.c"
  3950                           	line	17
  3951                           	global	__size_of_sensor_init
  3952                           	__size_of_sensor_init	equ	__end_of_sensor_init-_sensor_init
  3953  0010                     	
  3954                           _sensor_init:	
  3955  07D1                     ;incstack = 0
  3956                           	opt	stack 4
  3957                           ; Regs used in _sensor_init: [wreg+status,2+status,0+pclath+cstack]
  3958                           	line	19
  3959                           	
  3960                           l1584:	
  3961  07D1                     ;sensor.c: 17: void sensor_init( int tmin, int tmax );sensor.c: 18: {;sensor.c: 19:     
                                 ADC_init();
  3962                           	fcall	_ADC_init
  3963  07D1  120A  118A  2727  120A  118A  	line	20
  3964                           	
  3965                           l1586:	
  3966  07D6                     ;sensor.c: 20:     tMin_C = tmin;
  3967                           	movf	(sensor_init@tmin+1),w
  3968  07D6  0875               	bcf	status, 5	;RP0=0, select bank0
  3969  07D7  1283               	bcf	status, 6	;RP1=0, select bank0
  3970  07D8  1303               	movwf	(_tMin_C+1)
  3971  07D9  00DB               	movf	(sensor_init@tmin),w
  3972  07DA  0874               	movwf	(_tMin_C)
  3973  07DB  00DA               	line	21
  3974                           	
  3975                           l1588:	
  3976  07DC                     ;sensor.c: 21:     tMax_C = tmax;
  3977                           	movf	(sensor_init@tmax+1),w
  3978  07DC  0877               	movwf	(_tMax_C+1)
  3979  07DD  00D9               	movf	(sensor_init@tmax),w
  3980  07DE  0876               	movwf	(_tMax_C)
  3981  07DF  00D8               	line	22
  3982                           	
  3983                           l202:	
  3984  07E0                     	return
  3985  07E0  0008               	opt stack 0
  3986                           GLOBAL	__end_of_sensor_init
  3987                           	__end_of_sensor_init:
  3988  07E1                     	signat	_sensor_init,8313
  3989                           	global	_ADC_init
  3990                           
  3991 ;; *************** function _ADC_init *****************
  3992 ;; Defined at:
  3993 ;;		line 12 in file "adc.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       0       0       0       0
  4008 ;;      Locals:         0       0       0       0       0
  4009 ;;      Temps:          0       0       0       0       0
  4010 ;;      Totals:         0       0       0       0       0
  4011 ;;Total ram usage:        0 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    2
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_sensor_init
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4021                           	file	"adc.c"
  4022                           	line	12
  4023                           global __ptext8
  4024                           __ptext8:	;psect for function _ADC_init
  4025  0727                     psect	text8
  4026                           	file	"adc.c"
  4027                           	line	12
  4028                           	global	__size_of_ADC_init
  4029                           	__size_of_ADC_init	equ	__end_of_ADC_init-_ADC_init
  4030  0021                     	
  4031                           _ADC_init:	
  4032  0727                     ;incstack = 0
  4033                           	opt	stack 4
  4034                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
  4035                           	line	14
  4036                           	
  4037                           l1324:	
  4038  0727                     ;adc.c: 14:     INTCONbits.GIE = 0;
  4039                           	bcf	(11),7	;volatile
  4040  0727  138B               	line	16
  4041                           ;adc.c: 16:     ANSELbits.ANS0 = 1;
  4042                           	bsf	status, 5	;RP0=1, select bank3
  4043  0728  1683               	bsf	status, 6	;RP1=1, select bank3
  4044  0729  1703               	bsf	(392)^0180h,0	;volatile
  4045  072A  1408               	line	17
  4046                           	
  4047                           l1326:	
  4048  072B                     ;adc.c: 17:     ADCON0bits.ADCS = 0x2;
  4049                           	bcf	status, 5	;RP0=0, select bank0
  4050  072B  1283               	bcf	status, 6	;RP1=0, select bank0
  4051  072C  1303               	movf	(31),w	;volatile
  4052  072D  081F               	andlw	not (((1<<2)-1)<<6)
  4053  072E  393F               	iorlw	(02h & ((1<<2)-1))<<6
  4054  072F  3880               	movwf	(31)	;volatile
  4055  0730  009F               	line	18
  4056                           	
  4057                           l1328:	
  4058  0731                     ;adc.c: 18:     ADCON1bits.VCFG0 = 0;
  4059                           	bsf	status, 5	;RP0=1, select bank1
  4060  0731  1683               	bcf	status, 6	;RP1=0, select bank1
  4061  0732  1303               	bcf	(159)^080h,4	;volatile
  4062  0733  121F               	line	19
  4063                           	
  4064                           l1330:	
  4065  0734                     ;adc.c: 19:     ADCON1bits.VCFG1 = 0;
  4066                           	bcf	(159)^080h,5	;volatile
  4067  0734  129F               	line	20
  4068                           ;adc.c: 20:     ADCON0bits.CHS = 0x0;
  4069                           	movlw	((0 & ((1<<4)-1))<<2)|not (((1<<4)-1)<<2)
  4070  0735  30C3               	bcf	status, 5	;RP0=0, select bank0
  4071  0736  1283               	bcf	status, 6	;RP1=0, select bank0
  4072  0737  1303               	andwf	(31),f	;volatile
  4073  0738  059F               	line	21
  4074                           	
  4075                           l1332:	
  4076  0739                     ;adc.c: 21:     ADCON1bits.ADFM = 1;
  4077                           	bsf	status, 5	;RP0=1, select bank1
  4078  0739  1683               	bcf	status, 6	;RP1=0, select bank1
  4079  073A  1303               	bsf	(159)^080h,7	;volatile
  4080  073B  179F               	line	22
  4081                           	
  4082                           l1334:	
  4083  073C                     ;adc.c: 22:     ADCON0bits.ADON = 1;
  4084                           	bcf	status, 5	;RP0=0, select bank0
  4085  073C  1283               	bcf	status, 6	;RP1=0, select bank0
  4086  073D  1303               	bsf	(31),0	;volatile
  4087  073E  141F               	line	24
  4088                           	
  4089                           l1336:	
  4090  073F                     ;adc.c: 24:     INTCONbits.PEIE = 1;
  4091                           	bsf	(11),6	;volatile
  4092  073F  170B               	line	25
  4093                           	
  4094                           l1338:	
  4095  0740                     ;adc.c: 25:     PIE1bits.ADIE = 1;
  4096                           	bsf	status, 5	;RP0=1, select bank1
  4097  0740  1683               	bcf	status, 6	;RP1=0, select bank1
  4098  0741  1303               	bsf	(140)^080h,6	;volatile
  4099  0742  170C               	line	26
  4100                           	
  4101                           l1340:	
  4102  0743                     ;adc.c: 26:     INTCONbits.GIE = 1;
  4103                           	bsf	(11),7	;volatile
  4104  0743  178B               	line	27
  4105                           	
  4106                           l1342:	
  4107  0744                     ;adc.c: 27:     ADCON0bits.GO = 1;
  4108                           	bcf	status, 5	;RP0=0, select bank0
  4109  0744  1283               	bcf	status, 6	;RP1=0, select bank0
  4110  0745  1303               	bsf	(31),1	;volatile
  4111  0746  149F               	line	28
  4112                           	
  4113                           l17:	
  4114  0747                     	return
  4115  0747  0008               	opt stack 0
  4116                           GLOBAL	__end_of_ADC_init
  4117                           	__end_of_ADC_init:
  4118  0748                     	signat	_ADC_init,89
  4119                           	global	_dispLCD_num
  4120                           
  4121 ;; *************** function _dispLCD_num *****************
  4122 ;; Defined at:
  4123 ;;		line 202 in file "dispLCD4vias.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  lin             1   11[BANK0 ] unsigned char 
  4126 ;;  col             1   12[BANK0 ] unsigned char 
  4127 ;;  num             2   13[BANK0 ] int 
  4128 ;;  tam             1   15[BANK0 ] unsigned char 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  div             2   21[BANK0 ] int 
  4131 ;;  sinal           1   20[BANK0 ] unsigned char 
  4132 ;;  size            1   19[BANK0 ] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       5       0       0       0
  4143 ;;      Locals:         0       4       0       0       0
  4144 ;;      Temps:          0       3       0       0       0
  4145 ;;      Totals:         0      12       0       0       0
  4146 ;;Total ram usage:       12 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; Hardware stack levels required when called:    4
  4149 ;; This function calls:
  4150 ;;		___awdiv
  4151 ;;		___awmod
  4152 ;;		_dispLCD_dataReg
  4153 ;;		_dispLCD_lincol
  4154 ;; This function is called by:
  4155 ;;		_main
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4159                           	file	"dispLCD4vias.c"
  4160                           	line	202
  4161                           global __ptext9
  4162                           __ptext9:	;psect for function _dispLCD_num
  4163  0231                     psect	text9
  4164                           	file	"dispLCD4vias.c"
  4165                           	line	202
  4166                           	global	__size_of_dispLCD_num
  4167                           	__size_of_dispLCD_num	equ	__end_of_dispLCD_num-_dispLCD_num
  4168  00EF                     	
  4169                           _dispLCD_num:	
  4170  0231                     ;incstack = 0
  4171                           	opt	stack 3
  4172                           ; Regs used in _dispLCD_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4173                           	line	209
  4174                           	
  4175                           l1906:	
  4176  0231                     ;dispLCD4vias.c: 202: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
                                 as.c: 203:                     int num, unsigned char tam );dispLCD4vias.c: 204: {;dispL
                                 CD4vias.c: 205:     int div;;dispLCD4vias.c: 206:     unsigned char size;;dispLCD4vias.c
                                 : 207:     char sinal;;dispLCD4vias.c: 209:     sinal = num < 0;
  4177                           	bcf	status, 5	;RP0=0, select bank0
  4178  0231  1283               	bcf	status, 6	;RP1=0, select bank0
  4179  0232  1303               	btfsc	(dispLCD_num@num+1),7
  4180  0233  1BAE               	goto	u1701
  4181  0234  2A36               	goto	u1700
  4182  0235  2A38               u1701:
  4183  0236                     	movlw	1
  4184  0236  3001               	goto	u1710
  4185  0237  2A39               u1700:
  4186  0238                     	movlw	0
  4187  0238  3000               u1710:
  4188  0239                     	movwf	(??_dispLCD_num+0)+0
  4189  0239  00B0               	movf	(??_dispLCD_num+0)+0,w
  4190  023A  0830               	movwf	(dispLCD_num@sinal)
  4191  023B  00B4               	line	210
  4192                           	
  4193                           l1908:	
  4194  023C                     ;dispLCD4vias.c: 210:     if( sinal )
  4195                           	movf	((dispLCD_num@sinal)),w
  4196  023C  0834               	btfsc	status,2
  4197  023D  1903               	goto	u1721
  4198  023E  2A40               	goto	u1720
  4199  023F  2A41               u1721:
  4200  0240                     	goto	l1912
  4201  0240  2A47               u1720:
  4202  0241                     	line	211
  4203                           	
  4204                           l1910:	
  4205  0241                     ;dispLCD4vias.c: 211:         num = (~num) + 1;
  4206                           	comf	(dispLCD_num@num),f
  4207  0241  09AD               	comf	(dispLCD_num@num+1),f
  4208  0242  09AE               	incf	(dispLCD_num@num),f
  4209  0243  0AAD               	skipnz
  4210  0244  1903               	incf	(dispLCD_num@num+1),f
  4211  0245  0AAE               	goto	l1912
  4212  0246  2A47               	
  4213                           l86:	
  4214  0247                     	line	213
  4215                           	
  4216                           l1912:	
  4217  0247                     ;dispLCD4vias.c: 213:     dispLCD_lincol(lin, col);
  4218                           	movf	(dispLCD_num@col),w
  4219  0247  082C               	movwf	(??_dispLCD_num+0)+0
  4220  0248  00B0               	movf	(??_dispLCD_num+0)+0,w
  4221  0249  0830               	movwf	(dispLCD_lincol@col)
  4222  024A  00F7               	movf	(dispLCD_num@lin),w
  4223  024B  082B               	fcall	_dispLCD_lincol
  4224  024C  120A  118A  2795  120A  118A  	line	215
  4225                           	
  4226                           l1914:	
  4227  0251                     ;dispLCD4vias.c: 215:     div=10000;
  4228                           	movlw	010h
  4229  0251  3010               	bcf	status, 5	;RP0=0, select bank0
  4230  0252  1283               	bcf	status, 6	;RP1=0, select bank0
  4231  0253  1303               	movwf	(dispLCD_num@div)
  4232  0254  00B5               	movlw	027h
  4233  0255  3027               	movwf	((dispLCD_num@div))+1
  4234  0256  00B6               	line	216
  4235                           	
  4236                           l1916:	
  4237  0257                     ;dispLCD4vias.c: 216:     size = 5;
  4238                           	movlw	low(05h)
  4239  0257  3005               	movwf	(??_dispLCD_num+0)+0
  4240  0258  00B0               	movf	(??_dispLCD_num+0)+0,w
  4241  0259  0830               	movwf	(dispLCD_num@size)
  4242  025A  00B3               	line	217
  4243                           ;dispLCD4vias.c: 217:     while( div >= 1 )
  4244                           	goto	l1924
  4245  025B  2A8B               	
  4246                           l88:	
  4247  025C                     	line	219
  4248                           	
  4249                           l1918:	
  4250  025C                     ;dispLCD4vias.c: 218:     {;dispLCD4vias.c: 219:         if( num/div == 0 )
  4251                           	bcf	status, 5	;RP0=0, select bank0
  4252  025C  1283               	bcf	status, 6	;RP1=0, select bank0
  4253  025D  1303               	movf	(dispLCD_num@div+1),w
  4254  025E  0836               	movwf	(___awdiv@divisor+1)
  4255  025F  00A3               	movf	(dispLCD_num@div),w
  4256  0260  0835               	movwf	(___awdiv@divisor)
  4257  0261  00A2               	movf	(dispLCD_num@num+1),w
  4258  0262  082E               	movwf	(___awdiv@dividend+1)
  4259  0263  00A5               	movf	(dispLCD_num@num),w
  4260  0264  082D               	movwf	(___awdiv@dividend)
  4261  0265  00A4               	fcall	___awdiv
  4262  0266  120A  118A  24D9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4263  026B  1283               	bcf	status, 6	;RP1=0, select bank0
  4264  026C  1303               	movf	((0+(?___awdiv))),w
  4265  026D  0822               iorwf	((1+(?___awdiv))),w
  4266  026E  0423               	btfss	status,2
  4267  026F  1D03               	goto	u1731
  4268  0270  2A72               	goto	u1730
  4269  0271  2A73               u1731:
  4270  0272                     	goto	l1930
  4271  0272  2AA5               u1730:
  4272  0273                     	line	220
  4273                           	
  4274                           l1920:	
  4275  0273                     ;dispLCD4vias.c: 220:             --size;
  4276                           	movlw	01h
  4277  0273  3001               	subwf	(dispLCD_num@size),f
  4278  0274  02B3               	goto	l1922
  4279  0275  2A77               	line	221
  4280                           ;dispLCD4vias.c: 221:         else
  4281                           	
  4282                           l89:	
  4283  0276                     	line	222
  4284                           ;dispLCD4vias.c: 222:             break;
  4285                           	goto	l1930
  4286  0276  2AA5               	
  4287                           l90:	
  4288  0277                     	line	223
  4289                           	
  4290                           l1922:	
  4291  0277                     ;dispLCD4vias.c: 223:         div/=10;
  4292                           	movlw	0Ah
  4293  0277  300A               	movwf	(___awdiv@divisor)
  4294  0278  00A2               	movlw	0
  4295  0279  3000               	movwf	((___awdiv@divisor))+1
  4296  027A  00A3               	movf	(dispLCD_num@div+1),w
  4297  027B  0836               	movwf	(___awdiv@dividend+1)
  4298  027C  00A5               	movf	(dispLCD_num@div),w
  4299  027D  0835               	movwf	(___awdiv@dividend)
  4300  027E  00A4               	fcall	___awdiv
  4301  027F  120A  118A  24D9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4302  0284  1283               	bcf	status, 6	;RP1=0, select bank0
  4303  0285  1303               	movf	(1+(?___awdiv)),w
  4304  0286  0823               	movwf	(dispLCD_num@div+1)
  4305  0287  00B6               	movf	(0+(?___awdiv)),w
  4306  0288  0822               	movwf	(dispLCD_num@div)
  4307  0289  00B5               	goto	l1924
  4308  028A  2A8B               	line	224
  4309                           ;dispLCD4vias.c: 224:     }
  4310                           	
  4311                           l87:	
  4312  028B                     	line	217
  4313                           	
  4314                           l1924:	
  4315  028B                     ;dispLCD4vias.c: 217:     while( div >= 1 )
  4316                           	movf	(dispLCD_num@div+1),w
  4317  028B  0836               	xorlw	80h
  4318  028C  3A80               	movwf	btemp+1
  4319  028D  00FF               	movlw	(0)^80h
  4320  028E  3080               	subwf	btemp+1,w
  4321  028F  027F               	skipz
  4322  0290  1D03               	goto	u1745
  4323  0291  2A94               	movlw	01h
  4324  0292  3001               	subwf	(dispLCD_num@div),w
  4325  0293  0235               u1745:
  4326  0294                     
  4327                           	skipnc
  4328  0294  1803               	goto	u1741
  4329  0295  2A97               	goto	u1740
  4330  0296  2A98               u1741:
  4331  0297                     	goto	l1918
  4332  0297  2A5C               u1740:
  4333  0298                     	goto	l1930
  4334  0298  2AA5               	
  4335                           l91:	
  4336  0299                     	line	226
  4337                           ;dispLCD4vias.c: 226:     while( tam > (size+sinal) && tam > 1 )
  4338                           	goto	l1930
  4339  0299  2AA5               	
  4340                           l93:	
  4341  029A                     	line	228
  4342                           	
  4343                           l1926:	
  4344  029A                     ;dispLCD4vias.c: 227:     {;dispLCD4vias.c: 228:         dispLCD_dataReg(' ');
  4345                           	movlw	low(020h)
  4346  029A  3020               	fcall	_dispLCD_dataReg
  4347  029B  120A  118A  26FC  120A  118A  	line	229
  4348                           	
  4349                           l1928:	
  4350  02A0                     ;dispLCD4vias.c: 229:         --tam;
  4351                           	movlw	01h
  4352  02A0  3001               	bcf	status, 5	;RP0=0, select bank0
  4353  02A1  1283               	bcf	status, 6	;RP1=0, select bank0
  4354  02A2  1303               	subwf	(dispLCD_num@tam),f
  4355  02A3  02AF               	goto	l1930
  4356  02A4  2AA5               	line	230
  4357                           ;dispLCD4vias.c: 230:     }
  4358                           	
  4359                           l92:	
  4360  02A5                     	line	226
  4361                           	
  4362                           l1930:	
  4363  02A5                     ;dispLCD4vias.c: 226:     while( tam > (size+sinal) && tam > 1 )
  4364                           	bcf	status, 5	;RP0=0, select bank0
  4365  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  4366  02A6  1303               	movf	(dispLCD_num@size),w
  4367  02A7  0833               	addwf	(dispLCD_num@sinal),w
  4368  02A8  0734               	movwf	(??_dispLCD_num+0)+0
  4369  02A9  00B0               	clrf	(??_dispLCD_num+0)+0+1
  4370  02AA  01B1               	rlf	1+(??_dispLCD_num+0)+0,f
  4371  02AB  0DB1               	
  4372                           	movf	1+(??_dispLCD_num+0)+0,w
  4373  02AC  0831               	xorlw	80h
  4374  02AD  3A80               	movwf	(??_dispLCD_num+2)+0
  4375  02AE  00B2               	movlw	80h
  4376  02AF  3080               	subwf	(??_dispLCD_num+2)+0,w
  4377  02B0  0232               	skipz
  4378  02B1  1D03               	goto	u1755
  4379  02B2  2AB5               	movf	(dispLCD_num@tam),w
  4380  02B3  082F               	subwf	0+(??_dispLCD_num+0)+0,w
  4381  02B4  0230               u1755:
  4382  02B5                     
  4383                           	skipnc
  4384  02B5  1803               	goto	u1751
  4385  02B6  2AB8               	goto	u1750
  4386  02B7  2AB9               u1751:
  4387  02B8                     	goto	l1934
  4388  02B8  2AC3               u1750:
  4389  02B9                     	
  4390                           l1932:	
  4391  02B9                     	movlw	low(02h)
  4392  02B9  3002               	bcf	status, 5	;RP0=0, select bank0
  4393  02BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4394  02BB  1303               	subwf	(dispLCD_num@tam),w
  4395  02BC  022F               	skipnc
  4396  02BD  1803               	goto	u1761
  4397  02BE  2AC0               	goto	u1760
  4398  02BF  2AC1               u1761:
  4399  02C0                     	goto	l1926
  4400  02C0  2A9A               u1760:
  4401  02C1                     	goto	l1934
  4402  02C1  2AC3               	
  4403                           l95:	
  4404  02C2                     	goto	l1934
  4405  02C2  2AC3               	
  4406                           l96:	
  4407  02C3                     	line	232
  4408                           	
  4409                           l1934:	
  4410  02C3                     ;dispLCD4vias.c: 232:     if( sinal )
  4411                           	bcf	status, 5	;RP0=0, select bank0
  4412  02C3  1283               	bcf	status, 6	;RP1=0, select bank0
  4413  02C4  1303               	movf	((dispLCD_num@sinal)),w
  4414  02C5  0834               	btfsc	status,2
  4415  02C6  1903               	goto	u1771
  4416  02C7  2AC9               	goto	u1770
  4417  02C8  2ACA               u1771:
  4418  02C9                     	goto	l98
  4419  02C9  2AD1               u1770:
  4420  02CA                     	line	233
  4421                           	
  4422                           l1936:	
  4423  02CA                     ;dispLCD4vias.c: 233:         dispLCD_dataReg('-');
  4424                           	movlw	low(02Dh)
  4425  02CA  302D               	fcall	_dispLCD_dataReg
  4426  02CB  120A  118A  26FC  120A  118A  	goto	l98
  4427  02D0  2AD1               	
  4428                           l97:	
  4429  02D1                     	line	235
  4430                           ;dispLCD4vias.c: 235:     do
  4431                           	
  4432                           l98:	
  4433  02D1                     	line	237
  4434                           ;dispLCD4vias.c: 236:     {;dispLCD4vias.c: 237:         dispLCD_dataReg( (unsigned char
                                 )(num / div) + '0' );
  4435                           	bcf	status, 5	;RP0=0, select bank0
  4436  02D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4437  02D2  1303               	movf	(dispLCD_num@div+1),w
  4438  02D3  0836               	movwf	(___awdiv@divisor+1)
  4439  02D4  00A3               	movf	(dispLCD_num@div),w
  4440  02D5  0835               	movwf	(___awdiv@divisor)
  4441  02D6  00A2               	movf	(dispLCD_num@num+1),w
  4442  02D7  082E               	movwf	(___awdiv@dividend+1)
  4443  02D8  00A5               	movf	(dispLCD_num@num),w
  4444  02D9  082D               	movwf	(___awdiv@dividend)
  4445  02DA  00A4               	fcall	___awdiv
  4446  02DB  120A  118A  24D9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4447  02E0  1283               	bcf	status, 6	;RP1=0, select bank0
  4448  02E1  1303               	movf	(0+(?___awdiv)),w
  4449  02E2  0822               	addlw	030h
  4450  02E3  3E30               	fcall	_dispLCD_dataReg
  4451  02E4  120A  118A  26FC  120A  118A  	line	238
  4452                           ;dispLCD4vias.c: 238:         num = num % div;
  4453                           	bcf	status, 5	;RP0=0, select bank0
  4454  02E9  1283               	bcf	status, 6	;RP1=0, select bank0
  4455  02EA  1303               	movf	(dispLCD_num@div+1),w
  4456  02EB  0836               	movwf	(___awmod@divisor+1)
  4457  02EC  00F5               	movf	(dispLCD_num@div),w
  4458  02ED  0835               	movwf	(___awmod@divisor)
  4459  02EE  00F4               	movf	(dispLCD_num@num+1),w
  4460  02EF  082E               	movwf	(___awmod@dividend+1)
  4461  02F0  00F7               	movf	(dispLCD_num@num),w
  4462  02F1  082D               	movwf	(___awmod@dividend)
  4463  02F2  00F6               	fcall	___awmod
  4464  02F3  120A  118A  254C  120A  118A  	movf	(1+(?___awmod)),w
  4465  02F8  0875               	bcf	status, 5	;RP0=0, select bank0
  4466  02F9  1283               	bcf	status, 6	;RP1=0, select bank0
  4467  02FA  1303               	movwf	(dispLCD_num@num+1)
  4468  02FB  00AE               	movf	(0+(?___awmod)),w
  4469  02FC  0874               	movwf	(dispLCD_num@num)
  4470  02FD  00AD               	line	239
  4471                           ;dispLCD4vias.c: 239:         div/=10;
  4472                           	movlw	0Ah
  4473  02FE  300A               	movwf	(___awdiv@divisor)
  4474  02FF  00A2               	movlw	0
  4475  0300  3000               	movwf	((___awdiv@divisor))+1
  4476  0301  00A3               	movf	(dispLCD_num@div+1),w
  4477  0302  0836               	movwf	(___awdiv@dividend+1)
  4478  0303  00A5               	movf	(dispLCD_num@div),w
  4479  0304  0835               	movwf	(___awdiv@dividend)
  4480  0305  00A4               	fcall	___awdiv
  4481  0306  120A  118A  24D9  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4482  030B  1283               	bcf	status, 6	;RP1=0, select bank0
  4483  030C  1303               	movf	(1+(?___awdiv)),w
  4484  030D  0823               	movwf	(dispLCD_num@div+1)
  4485  030E  00B6               	movf	(0+(?___awdiv)),w
  4486  030F  0822               	movwf	(dispLCD_num@div)
  4487  0310  00B5               	line	240
  4488                           	
  4489                           l1938:	
  4490  0311                     ;dispLCD4vias.c: 240:     }
  4491                           	movf	(dispLCD_num@div+1),w
  4492  0311  0836               	xorlw	80h
  4493  0312  3A80               	movwf	btemp+1
  4494  0313  00FF               	movlw	(0)^80h
  4495  0314  3080               	subwf	btemp+1,w
  4496  0315  027F               	skipz
  4497  0316  1D03               	goto	u1785
  4498  0317  2B1A               	movlw	01h
  4499  0318  3001               	subwf	(dispLCD_num@div),w
  4500  0319  0235               u1785:
  4501  031A                     
  4502                           	skipnc
  4503  031A  1803               	goto	u1781
  4504  031B  2B1D               	goto	u1780
  4505  031C  2B1E               u1781:
  4506  031D                     	goto	l98
  4507  031D  2AD1               u1780:
  4508  031E                     	goto	l100
  4509  031E  2B1F               	
  4510                           l99:	
  4511  031F                     	line	242
  4512                           	
  4513                           l100:	
  4514  031F                     	return
  4515  031F  0008               	opt stack 0
  4516                           GLOBAL	__end_of_dispLCD_num
  4517                           	__end_of_dispLCD_num:
  4518  0320                     	signat	_dispLCD_num,16505
  4519                           	global	___awmod
  4520                           
  4521 ;; *************** function ___awmod *****************
  4522 ;; Defined at:
  4523 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  divisor         2    4[COMMON] int 
  4526 ;;  dividend        2    6[COMMON] int 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  sign            1    2[BANK0 ] unsigned char 
  4529 ;;  counter         1    1[BANK0 ] unsigned char 
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  2    4[COMMON] int 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4539 ;;      Params:         4       0       0       0       0
  4540 ;;      Locals:         0       2       0       0       0
  4541 ;;      Temps:          0       1       0       0       0
  4542 ;;      Totals:         4       3       0       0       0
  4543 ;;Total ram usage:        7 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    2
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_dispLCD_num
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4553                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4554                           	line	5
  4555                           global __ptext10
  4556                           __ptext10:	;psect for function ___awmod
  4557  054C                     psect	text10
  4558                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  4559                           	line	5
  4560                           	global	__size_of___awmod
  4561                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  4562  0065                     	
  4563                           ___awmod:	
  4564  054C                     ;incstack = 0
  4565                           	opt	stack 4
  4566                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4567                           	line	12
  4568                           	
  4569                           l1840:	
  4570  054C                     	bcf	status, 5	;RP0=0, select bank0
  4571  054C  1283               	bcf	status, 6	;RP1=0, select bank0
  4572  054D  1303               	clrf	(___awmod@sign)
  4573  054E  01A2               	line	13
  4574                           	
  4575                           l1842:	
  4576  054F                     	btfss	(___awmod@dividend+1),7
  4577  054F  1FF7               	goto	u1601
  4578  0550  2D52               	goto	u1600
  4579  0551  2D53               u1601:
  4580  0552                     	goto	l1848
  4581  0552  2D5B               u1600:
  4582  0553                     	line	14
  4583                           	
  4584                           l1844:	
  4585  0553                     	comf	(___awmod@dividend),f
  4586  0553  09F6               	comf	(___awmod@dividend+1),f
  4587  0554  09F7               	incf	(___awmod@dividend),f
  4588  0555  0AF6               	skipnz
  4589  0556  1903               	incf	(___awmod@dividend+1),f
  4590  0557  0AF7               	line	15
  4591                           	
  4592                           l1846:	
  4593  0558                     	clrf	(___awmod@sign)
  4594  0558  01A2               	incf	(___awmod@sign),f
  4595  0559  0AA2               	goto	l1848
  4596  055A  2D5B               	line	16
  4597                           	
  4598                           l447:	
  4599  055B                     	line	17
  4600                           	
  4601                           l1848:	
  4602  055B                     	btfss	(___awmod@divisor+1),7
  4603  055B  1FF5               	goto	u1611
  4604  055C  2D5E               	goto	u1610
  4605  055D  2D5F               u1611:
  4606  055E                     	goto	l1852
  4607  055E  2D65               u1610:
  4608  055F                     	line	18
  4609                           	
  4610                           l1850:	
  4611  055F                     	comf	(___awmod@divisor),f
  4612  055F  09F4               	comf	(___awmod@divisor+1),f
  4613  0560  09F5               	incf	(___awmod@divisor),f
  4614  0561  0AF4               	skipnz
  4615  0562  1903               	incf	(___awmod@divisor+1),f
  4616  0563  0AF5               	goto	l1852
  4617  0564  2D65               	
  4618                           l448:	
  4619  0565                     	line	19
  4620                           	
  4621                           l1852:	
  4622  0565                     	movf	((___awmod@divisor)),w
  4623  0565  0874               iorwf	((___awmod@divisor+1)),w
  4624  0566  0475               	btfsc	status,2
  4625  0567  1903               	goto	u1621
  4626  0568  2D6A               	goto	u1620
  4627  0569  2D6B               u1621:
  4628  056A                     	goto	l1870
  4629  056A  2DA0               u1620:
  4630  056B                     	line	20
  4631                           	
  4632                           l1854:	
  4633  056B                     	clrf	(___awmod@counter)
  4634  056B  01A1               	incf	(___awmod@counter),f
  4635  056C  0AA1               	line	21
  4636                           	goto	l1860
  4637  056D  2D7A               	
  4638                           l451:	
  4639  056E                     	line	22
  4640                           	
  4641                           l1856:	
  4642  056E                     	movlw	01h
  4643  056E  3001               	
  4644                           u1635:
  4645  056F                     	clrc
  4646  056F  1003               	rlf	(___awmod@divisor),f
  4647  0570  0DF4               	rlf	(___awmod@divisor+1),f
  4648  0571  0DF5               	addlw	-1
  4649  0572  3EFF               	skipz
  4650  0573  1D03               	goto	u1635
  4651  0574  2D6F               	line	23
  4652                           	
  4653                           l1858:	
  4654  0575                     	movlw	low(01h)
  4655  0575  3001               	movwf	(??___awmod+0)+0
  4656  0576  00A0               	movf	(??___awmod+0)+0,w
  4657  0577  0820               	addwf	(___awmod@counter),f
  4658  0578  07A1               	goto	l1860
  4659  0579  2D7A               	line	24
  4660                           	
  4661                           l450:	
  4662  057A                     	line	21
  4663                           	
  4664                           l1860:	
  4665  057A                     	btfss	(___awmod@divisor+1),(15)&7
  4666  057A  1FF5               	goto	u1641
  4667  057B  2D7D               	goto	u1640
  4668  057C  2D7E               u1641:
  4669  057D                     	goto	l1856
  4670  057D  2D6E               u1640:
  4671  057E                     	goto	l1862
  4672  057E  2D80               	
  4673                           l452:	
  4674  057F                     	goto	l1862
  4675  057F  2D80               	line	25
  4676                           	
  4677                           l453:	
  4678  0580                     	line	26
  4679                           	
  4680                           l1862:	
  4681  0580                     	movf	(___awmod@divisor+1),w
  4682  0580  0875               	subwf	(___awmod@dividend+1),w
  4683  0581  0277               	skipz
  4684  0582  1D03               	goto	u1655
  4685  0583  2D86               	movf	(___awmod@divisor),w
  4686  0584  0874               	subwf	(___awmod@dividend),w
  4687  0585  0276               u1655:
  4688  0586                     	skipc
  4689  0586  1C03               	goto	u1651
  4690  0587  2D89               	goto	u1650
  4691  0588  2D8A               u1651:
  4692  0589                     	goto	l1866
  4693  0589  2D91               u1650:
  4694  058A                     	line	27
  4695                           	
  4696                           l1864:	
  4697  058A                     	movf	(___awmod@divisor),w
  4698  058A  0874               	subwf	(___awmod@dividend),f
  4699  058B  02F6               	movf	(___awmod@divisor+1),w
  4700  058C  0875               	skipc
  4701  058D  1C03               	decf	(___awmod@dividend+1),f
  4702  058E  03F7               	subwf	(___awmod@dividend+1),f
  4703  058F  02F7               	goto	l1866
  4704  0590  2D91               	
  4705                           l454:	
  4706  0591                     	line	28
  4707                           	
  4708                           l1866:	
  4709  0591                     	movlw	01h
  4710  0591  3001               	
  4711                           u1665:
  4712  0592                     	clrc
  4713  0592  1003               	rrf	(___awmod@divisor+1),f
  4714  0593  0CF5               	rrf	(___awmod@divisor),f
  4715  0594  0CF4               	addlw	-1
  4716  0595  3EFF               	skipz
  4717  0596  1D03               	goto	u1665
  4718  0597  2D92               	line	29
  4719                           	
  4720                           l1868:	
  4721  0598                     	movlw	01h
  4722  0598  3001               	subwf	(___awmod@counter),f
  4723  0599  02A1               	btfss	status,2
  4724  059A  1D03               	goto	u1671
  4725  059B  2D9D               	goto	u1670
  4726  059C  2D9E               u1671:
  4727  059D                     	goto	l1862
  4728  059D  2D80               u1670:
  4729  059E                     	goto	l1870
  4730  059E  2DA0               	
  4731                           l455:	
  4732  059F                     	goto	l1870
  4733  059F  2DA0               	line	30
  4734                           	
  4735                           l449:	
  4736  05A0                     	line	31
  4737                           	
  4738                           l1870:	
  4739  05A0                     	movf	((___awmod@sign)),w
  4740  05A0  0822               	btfsc	status,2
  4741  05A1  1903               	goto	u1681
  4742  05A2  2DA4               	goto	u1680
  4743  05A3  2DA5               u1681:
  4744  05A4                     	goto	l1874
  4745  05A4  2DAB               u1680:
  4746  05A5                     	line	32
  4747                           	
  4748                           l1872:	
  4749  05A5                     	comf	(___awmod@dividend),f
  4750  05A5  09F6               	comf	(___awmod@dividend+1),f
  4751  05A6  09F7               	incf	(___awmod@dividend),f
  4752  05A7  0AF6               	skipnz
  4753  05A8  1903               	incf	(___awmod@dividend+1),f
  4754  05A9  0AF7               	goto	l1874
  4755  05AA  2DAB               	
  4756                           l456:	
  4757  05AB                     	line	33
  4758                           	
  4759                           l1874:	
  4760  05AB                     	movf	(___awmod@dividend+1),w
  4761  05AB  0877               	movwf	(?___awmod+1)
  4762  05AC  00F5               	movf	(___awmod@dividend),w
  4763  05AD  0876               	movwf	(?___awmod)
  4764  05AE  00F4               	goto	l457
  4765  05AF  2DB0               	
  4766                           l1876:	
  4767  05B0                     	line	34
  4768                           	
  4769                           l457:	
  4770  05B0                     	return
  4771  05B0  0008               	opt stack 0
  4772                           GLOBAL	__end_of___awmod
  4773                           	__end_of___awmod:
  4774  05B1                     	signat	___awmod,8314
  4775                           	global	___awdiv
  4776                           
  4777 ;; *************** function ___awdiv *****************
  4778 ;; Defined at:
  4779 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  divisor         2    2[BANK0 ] int 
  4782 ;;  dividend        2    4[BANK0 ] int 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  quotient        2    9[BANK0 ] int 
  4785 ;;  sign            1    8[BANK0 ] unsigned char 
  4786 ;;  counter         1    7[BANK0 ] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  2    2[BANK0 ] int 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4796 ;;      Params:         0       4       0       0       0
  4797 ;;      Locals:         0       4       0       0       0
  4798 ;;      Temps:          0       1       0       0       0
  4799 ;;      Totals:         0       9       0       0       0
  4800 ;;Total ram usage:        9 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    2
  4803 ;; This function calls:
  4804 ;;		Nothing
  4805 ;; This function is called by:
  4806 ;;		_dispLCD_num
  4807 ;;		_temperatura
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4811                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4812                           	line	5
  4813                           global __ptext11
  4814                           __ptext11:	;psect for function ___awdiv
  4815  04D9                     psect	text11
  4816                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  4817                           	line	5
  4818                           	global	__size_of___awdiv
  4819                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  4820  0073                     	
  4821                           ___awdiv:	
  4822  04D9                     ;incstack = 0
  4823                           	opt	stack 4
  4824                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4825                           	line	13
  4826                           	
  4827                           l1402:	
  4828  04D9                     	bcf	status, 5	;RP0=0, select bank0
  4829  04D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4830  04DA  1303               	clrf	(___awdiv@sign)
  4831  04DB  01A8               	line	14
  4832                           	
  4833                           l1404:	
  4834  04DC                     	btfss	(___awdiv@divisor+1),7
  4835  04DC  1FA3               	goto	u921
  4836  04DD  2CDF               	goto	u920
  4837  04DE  2CE0               u921:
  4838  04DF                     	goto	l1410
  4839  04DF  2CE8               u920:
  4840  04E0                     	line	15
  4841                           	
  4842                           l1406:	
  4843  04E0                     	comf	(___awdiv@divisor),f
  4844  04E0  09A2               	comf	(___awdiv@divisor+1),f
  4845  04E1  09A3               	incf	(___awdiv@divisor),f
  4846  04E2  0AA2               	skipnz
  4847  04E3  1903               	incf	(___awdiv@divisor+1),f
  4848  04E4  0AA3               	line	16
  4849                           	
  4850                           l1408:	
  4851  04E5                     	clrf	(___awdiv@sign)
  4852  04E5  01A8               	incf	(___awdiv@sign),f
  4853  04E6  0AA8               	goto	l1410
  4854  04E7  2CE8               	line	17
  4855                           	
  4856                           l434:	
  4857  04E8                     	line	18
  4858                           	
  4859                           l1410:	
  4860  04E8                     	btfss	(___awdiv@dividend+1),7
  4861  04E8  1FA5               	goto	u931
  4862  04E9  2CEB               	goto	u930
  4863  04EA  2CEC               u931:
  4864  04EB                     	goto	l1416
  4865  04EB  2CF6               u930:
  4866  04EC                     	line	19
  4867                           	
  4868                           l1412:	
  4869  04EC                     	comf	(___awdiv@dividend),f
  4870  04EC  09A4               	comf	(___awdiv@dividend+1),f
  4871  04ED  09A5               	incf	(___awdiv@dividend),f
  4872  04EE  0AA4               	skipnz
  4873  04EF  1903               	incf	(___awdiv@dividend+1),f
  4874  04F0  0AA5               	line	20
  4875                           	
  4876                           l1414:	
  4877  04F1                     	movlw	low(01h)
  4878  04F1  3001               	movwf	(??___awdiv+0)+0
  4879  04F2  00A6               	movf	(??___awdiv+0)+0,w
  4880  04F3  0826               	xorwf	(___awdiv@sign),f
  4881  04F4  06A8               	goto	l1416
  4882  04F5  2CF6               	line	21
  4883                           	
  4884                           l435:	
  4885  04F6                     	line	22
  4886                           	
  4887                           l1416:	
  4888  04F6                     	clrf	(___awdiv@quotient)
  4889  04F6  01A9               	clrf	(___awdiv@quotient+1)
  4890  04F7  01AA               	line	23
  4891                           	
  4892                           l1418:	
  4893  04F8                     	movf	((___awdiv@divisor)),w
  4894  04F8  0822               iorwf	((___awdiv@divisor+1)),w
  4895  04F9  0423               	btfsc	status,2
  4896  04FA  1903               	goto	u941
  4897  04FB  2CFD               	goto	u940
  4898  04FC  2CFE               u941:
  4899  04FD                     	goto	l1438
  4900  04FD  2D3B               u940:
  4901  04FE                     	line	24
  4902                           	
  4903                           l1420:	
  4904  04FE                     	clrf	(___awdiv@counter)
  4905  04FE  01A7               	incf	(___awdiv@counter),f
  4906  04FF  0AA7               	line	25
  4907                           	goto	l1426
  4908  0500  2D0D               	
  4909                           l438:	
  4910  0501                     	line	26
  4911                           	
  4912                           l1422:	
  4913  0501                     	movlw	01h
  4914  0501  3001               	
  4915                           u955:
  4916  0502                     	clrc
  4917  0502  1003               	rlf	(___awdiv@divisor),f
  4918  0503  0DA2               	rlf	(___awdiv@divisor+1),f
  4919  0504  0DA3               	addlw	-1
  4920  0505  3EFF               	skipz
  4921  0506  1D03               	goto	u955
  4922  0507  2D02               	line	27
  4923                           	
  4924                           l1424:	
  4925  0508                     	movlw	low(01h)
  4926  0508  3001               	movwf	(??___awdiv+0)+0
  4927  0509  00A6               	movf	(??___awdiv+0)+0,w
  4928  050A  0826               	addwf	(___awdiv@counter),f
  4929  050B  07A7               	goto	l1426
  4930  050C  2D0D               	line	28
  4931                           	
  4932                           l437:	
  4933  050D                     	line	25
  4934                           	
  4935                           l1426:	
  4936  050D                     	btfss	(___awdiv@divisor+1),(15)&7
  4937  050D  1FA3               	goto	u961
  4938  050E  2D10               	goto	u960
  4939  050F  2D11               u961:
  4940  0510                     	goto	l1422
  4941  0510  2D01               u960:
  4942  0511                     	goto	l1428
  4943  0511  2D13               	
  4944                           l439:	
  4945  0512                     	goto	l1428
  4946  0512  2D13               	line	29
  4947                           	
  4948                           l440:	
  4949  0513                     	line	30
  4950                           	
  4951                           l1428:	
  4952  0513                     	movlw	01h
  4953  0513  3001               	
  4954                           u975:
  4955  0514                     	clrc
  4956  0514  1003               	rlf	(___awdiv@quotient),f
  4957  0515  0DA9               	rlf	(___awdiv@quotient+1),f
  4958  0516  0DAA               	addlw	-1
  4959  0517  3EFF               	skipz
  4960  0518  1D03               	goto	u975
  4961  0519  2D14               	line	31
  4962                           	movf	(___awdiv@divisor+1),w
  4963  051A  0823               	subwf	(___awdiv@dividend+1),w
  4964  051B  0225               	skipz
  4965  051C  1D03               	goto	u985
  4966  051D  2D20               	movf	(___awdiv@divisor),w
  4967  051E  0822               	subwf	(___awdiv@dividend),w
  4968  051F  0224               u985:
  4969  0520                     	skipc
  4970  0520  1C03               	goto	u981
  4971  0521  2D23               	goto	u980
  4972  0522  2D24               u981:
  4973  0523                     	goto	l1434
  4974  0523  2D2C               u980:
  4975  0524                     	line	32
  4976                           	
  4977                           l1430:	
  4978  0524                     	movf	(___awdiv@divisor),w
  4979  0524  0822               	subwf	(___awdiv@dividend),f
  4980  0525  02A4               	movf	(___awdiv@divisor+1),w
  4981  0526  0823               	skipc
  4982  0527  1C03               	decf	(___awdiv@dividend+1),f
  4983  0528  03A5               	subwf	(___awdiv@dividend+1),f
  4984  0529  02A5               	line	33
  4985                           	
  4986                           l1432:	
  4987  052A                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  4988  052A  1429               	goto	l1434
  4989  052B  2D2C               	line	34
  4990                           	
  4991                           l441:	
  4992  052C                     	line	35
  4993                           	
  4994                           l1434:	
  4995  052C                     	movlw	01h
  4996  052C  3001               	
  4997                           u995:
  4998  052D                     	clrc
  4999  052D  1003               	rrf	(___awdiv@divisor+1),f
  5000  052E  0CA3               	rrf	(___awdiv@divisor),f
  5001  052F  0CA2               	addlw	-1
  5002  0530  3EFF               	skipz
  5003  0531  1D03               	goto	u995
  5004  0532  2D2D               	line	36
  5005                           	
  5006                           l1436:	
  5007  0533                     	movlw	01h
  5008  0533  3001               	subwf	(___awdiv@counter),f
  5009  0534  02A7               	btfss	status,2
  5010  0535  1D03               	goto	u1001
  5011  0536  2D38               	goto	u1000
  5012  0537  2D39               u1001:
  5013  0538                     	goto	l1428
  5014  0538  2D13               u1000:
  5015  0539                     	goto	l1438
  5016  0539  2D3B               	
  5017                           l442:	
  5018  053A                     	goto	l1438
  5019  053A  2D3B               	line	37
  5020                           	
  5021                           l436:	
  5022  053B                     	line	38
  5023                           	
  5024                           l1438:	
  5025  053B                     	movf	((___awdiv@sign)),w
  5026  053B  0828               	btfsc	status,2
  5027  053C  1903               	goto	u1011
  5028  053D  2D3F               	goto	u1010
  5029  053E  2D40               u1011:
  5030  053F                     	goto	l1442
  5031  053F  2D46               u1010:
  5032  0540                     	line	39
  5033                           	
  5034                           l1440:	
  5035  0540                     	comf	(___awdiv@quotient),f
  5036  0540  09A9               	comf	(___awdiv@quotient+1),f
  5037  0541  09AA               	incf	(___awdiv@quotient),f
  5038  0542  0AA9               	skipnz
  5039  0543  1903               	incf	(___awdiv@quotient+1),f
  5040  0544  0AAA               	goto	l1442
  5041  0545  2D46               	
  5042                           l443:	
  5043  0546                     	line	40
  5044                           	
  5045                           l1442:	
  5046  0546                     	movf	(___awdiv@quotient+1),w
  5047  0546  082A               	movwf	(?___awdiv+1)
  5048  0547  00A3               	movf	(___awdiv@quotient),w
  5049  0548  0829               	movwf	(?___awdiv)
  5050  0549  00A2               	goto	l444
  5051  054A  2D4B               	
  5052                           l1444:	
  5053  054B                     	line	41
  5054                           	
  5055                           l444:	
  5056  054B                     	return
  5057  054B  0008               	opt stack 0
  5058                           GLOBAL	__end_of___awdiv
  5059                           	__end_of___awdiv:
  5060  054C                     	signat	___awdiv,8314
  5061                           	global	_dispLCD_init
  5062                           
  5063 ;; *************** function _dispLCD_init *****************
  5064 ;; Defined at:
  5065 ;;		line 154 in file "dispLCD4vias.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;		None
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  1    wreg      void 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0, pclath, cstack
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5079 ;;      Params:         0       0       0       0       0
  5080 ;;      Locals:         0       0       0       0       0
  5081 ;;      Temps:          0       0       0       0       0
  5082 ;;      Totals:         0       0       0       0       0
  5083 ;;Total ram usage:        0 bytes
  5084 ;; Hardware stack levels used:    1
  5085 ;; Hardware stack levels required when called:    3
  5086 ;; This function calls:
  5087 ;;		_delay
  5088 ;;		_dispLCD_instReg
  5089 ;; This function is called by:
  5090 ;;		_main
  5091 ;; This function uses a non-reentrant model
  5092 ;;
  5093                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5094                           	file	"dispLCD4vias.c"
  5095                           	line	154
  5096                           global __ptext12
  5097                           __ptext12:	;psect for function _dispLCD_init
  5098  065B                     psect	text12
  5099                           	file	"dispLCD4vias.c"
  5100                           	line	154
  5101                           	global	__size_of_dispLCD_init
  5102                           	__size_of_dispLCD_init	equ	__end_of_dispLCD_init-_dispLCD_init
  5103  0041                     	
  5104                           _dispLCD_init:	
  5105  065B                     ;incstack = 0
  5106                           	opt	stack 4
  5107                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  5108                           	line	156
  5109                           	
  5110                           l1878:	
  5111  065B                     ;dispLCD4vias.c: 156:     delay(100);
  5112                           	movlw	064h
  5113  065B  3064               	movwf	(delay@t)
  5114  065C  00F4               	movlw	0
  5115  065D  3000               	movwf	((delay@t))+1
  5116  065E  00F5               	fcall	_delay
  5117  065F  120A  118A  277E  120A  118A  	line	157
  5118                           	
  5119                           l1880:	
  5120  0664                     ;dispLCD4vias.c: 157:     TRISDbits.TRISD0 = 0;
  5121                           	bsf	status, 5	;RP0=1, select bank1
  5122  0664  1683               	bcf	status, 6	;RP1=0, select bank1
  5123  0665  1303               	bcf	(136)^080h,0	;volatile
  5124  0666  1008               	line	158
  5125                           	
  5126                           l1882:	
  5127  0667                     ;dispLCD4vias.c: 158:     TRISDbits.TRISD1 = 0;
  5128                           	bcf	(136)^080h,1	;volatile
  5129  0667  1088               	line	159
  5130                           	
  5131                           l1884:	
  5132  0668                     ;dispLCD4vias.c: 159:     TRISDbits.TRISD2 = 0;
  5133                           	bcf	(136)^080h,2	;volatile
  5134  0668  1108               	line	160
  5135                           	
  5136                           l1886:	
  5137  0669                     ;dispLCD4vias.c: 160:     TRISDbits.TRISD3 = 0;
  5138                           	bcf	(136)^080h,3	;volatile
  5139  0669  1188               	line	161
  5140                           	
  5141                           l1888:	
  5142  066A                     ;dispLCD4vias.c: 161:     TRISDbits.TRISD4 = 0;
  5143                           	bcf	(136)^080h,4	;volatile
  5144  066A  1208               	line	162
  5145                           	
  5146                           l1890:	
  5147  066B                     ;dispLCD4vias.c: 162:     TRISDbits.TRISD5 = 0;
  5148                           	bcf	(136)^080h,5	;volatile
  5149  066B  1288               	line	163
  5150                           	
  5151                           l1892:	
  5152  066C                     ;dispLCD4vias.c: 163:     TRISDbits.TRISD6 = 1;
  5153                           	bsf	(136)^080h,6	;volatile
  5154  066C  1708               	line	164
  5155                           	
  5156                           l1894:	
  5157  066D                     ;dispLCD4vias.c: 164:     TRISDbits.TRISD7 = 1;
  5158                           	bsf	(136)^080h,7	;volatile
  5159  066D  1788               	line	165
  5160                           ;dispLCD4vias.c: 165:     delay(100);
  5161                           	movlw	064h
  5162  066E  3064               	movwf	(delay@t)
  5163  066F  00F4               	movlw	0
  5164  0670  3000               	movwf	((delay@t))+1
  5165  0671  00F5               	fcall	_delay
  5166  0672  120A  118A  277E  120A  118A  	line	166
  5167                           	
  5168                           l1896:	
  5169  0677                     ;dispLCD4vias.c: 166:     LCDbits.EN = 1;
  5170                           	bcf	status, 5	;RP0=0, select bank0
  5171  0677  1283               	bcf	status, 6	;RP1=0, select bank0
  5172  0678  1303               	bsf	(8),5	;volatile
  5173  0679  1688               	line	167
  5174                           ;dispLCD4vias.c: 167:     dispLCD_instReg( 0x20|0x00|0x08);
  5175                           	movlw	low(028h)
  5176  067A  3028               	fcall	_dispLCD_instReg
  5177  067B  120A  118A  2460  120A  118A  	line	168
  5178                           ;dispLCD4vias.c: 168:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  5179                           	movlw	low(0Ch)
  5180  0680  300C               	fcall	_dispLCD_instReg
  5181  0681  120A  118A  2460  120A  118A  	line	169
  5182                           ;dispLCD4vias.c: 169:     dispLCD_instReg( 0x01 );
  5183                           	movlw	low(01h)
  5184  0686  3001               	fcall	_dispLCD_instReg
  5185  0687  120A  118A  2460  120A  118A  	line	170
  5186                           ;dispLCD4vias.c: 170:     dispLCD_instReg( 0x02 );
  5187                           	movlw	low(02h)
  5188  068C  3002               	fcall	_dispLCD_instReg
  5189  068D  120A  118A  2460  120A  118A  	line	171
  5190                           ;dispLCD4vias.c: 171:     delay(100);
  5191                           	movlw	064h
  5192  0692  3064               	movwf	(delay@t)
  5193  0693  00F4               	movlw	0
  5194  0694  3000               	movwf	((delay@t))+1
  5195  0695  00F5               	fcall	_delay
  5196  0696  120A  118A  277E  120A  118A  	line	172
  5197                           	
  5198                           l70:	
  5199  069B                     	return
  5200  069B  0008               	opt stack 0
  5201                           GLOBAL	__end_of_dispLCD_init
  5202                           	__end_of_dispLCD_init:
  5203  069C                     	signat	_dispLCD_init,89
  5204                           	global	_delay
  5205                           
  5206 ;; *************** function _delay *****************
  5207 ;; Defined at:
  5208 ;;		line 12 in file "delay.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  t               2    4[COMMON] unsigned int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;		None
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         2       0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0
  5224 ;;      Temps:          1       0       0       0       0
  5225 ;;      Totals:         3       0       0       0       0
  5226 ;;Total ram usage:        3 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    2
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_dispLCD_init
  5233 ;;		_main
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5237                           	file	"delay.c"
  5238                           	line	12
  5239                           global __ptext13
  5240                           __ptext13:	;psect for function _delay
  5241  077E                     psect	text13
  5242                           	file	"delay.c"
  5243                           	line	12
  5244                           	global	__size_of_delay
  5245                           	__size_of_delay	equ	__end_of_delay-_delay
  5246  0017                     	
  5247                           _delay:	
  5248  077E                     ;incstack = 0
  5249                           	opt	stack 4
  5250                           ; Regs used in _delay: [wreg+status,2+status,0]
  5251                           	line	14
  5252                           	
  5253                           l1348:	
  5254  077E                     ;delay.c: 12: void delay (unsigned int t);delay.c: 13: {;delay.c: 14:     while( t )
  5255                           	goto	l1352
  5256  077E  2F8D               	
  5257                           l31:	
  5258  077F                     	line	16
  5259                           	
  5260                           l1350:	
  5261  077F                     ;delay.c: 15:     {;delay.c: 16:         --t;
  5262                           	movlw	01h
  5263  077F  3001               	subwf	(delay@t),f
  5264  0780  02F4               	movlw	0
  5265  0781  3000               	skipc
  5266  0782  1C03               	decf	(delay@t+1),f
  5267  0783  03F5               	subwf	(delay@t+1),f
  5268  0784  02F5               	line	17
  5269                           ;delay.c: 17:         _delay((unsigned long)((1)*(4000000/4000.0)));
  5270                           	opt asmopt_push
  5271                           opt asmopt_off
  5272                           	movlw	199
  5273  0785  30C7               movwf	((??_delay+0)+0),f
  5274  0786  00F6               	u1937:
  5275  0787                     	nop2
  5276  0787  2F88               decfsz	(??_delay+0)+0,f
  5277  0788  0BF6               	goto	u1937
  5278  0789  2F87               	nop2
  5279  078A  2F8B               	nop2
  5280  078B  2F8C               opt asmopt_pop
  5281                           
  5282                           	goto	l1352
  5283  078C  2F8D               	line	18
  5284                           ;delay.c: 18:     }
  5285                           	
  5286                           l30:	
  5287  078D                     	line	14
  5288                           	
  5289                           l1352:	
  5290  078D                     ;delay.c: 14:     while( t )
  5291                           	movf	((delay@t)),w
  5292  078D  0874               iorwf	((delay@t+1)),w
  5293  078E  0475               	btfss	status,2
  5294  078F  1D03               	goto	u801
  5295  0790  2F92               	goto	u800
  5296  0791  2F93               u801:
  5297  0792                     	goto	l1350
  5298  0792  2F7F               u800:
  5299  0793                     	goto	l33
  5300  0793  2F94               	
  5301                           l32:	
  5302  0794                     	line	19
  5303                           	
  5304                           l33:	
  5305  0794                     	return
  5306  0794  0008               	opt stack 0
  5307                           GLOBAL	__end_of_delay
  5308                           	__end_of_delay:
  5309  0795                     	signat	_delay,4217
  5310                           	global	_dispLCD_clr
  5311                           
  5312 ;; *************** function _dispLCD_clr *****************
  5313 ;; Defined at:
  5314 ;;		line 245 in file "dispLCD4vias.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;		None
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;		None
  5319 ;; Return value:  Size  Location     Type
  5320 ;;                  1    wreg      void 
  5321 ;; Registers used:
  5322 ;;		wreg, status,2, status,0, pclath, cstack
  5323 ;; Tracked objects:
  5324 ;;		On entry : 0/0
  5325 ;;		On exit  : 0/0
  5326 ;;		Unchanged: 0/0
  5327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5328 ;;      Params:         0       0       0       0       0
  5329 ;;      Locals:         0       0       0       0       0
  5330 ;;      Temps:          0       0       0       0       0
  5331 ;;      Totals:         0       0       0       0       0
  5332 ;;Total ram usage:        0 bytes
  5333 ;; Hardware stack levels used:    1
  5334 ;; Hardware stack levels required when called:    3
  5335 ;; This function calls:
  5336 ;;		_dispLCD_instReg
  5337 ;; This function is called by:
  5338 ;;		_main
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5342                           	file	"dispLCD4vias.c"
  5343                           	line	245
  5344                           global __ptext14
  5345                           __ptext14:	;psect for function _dispLCD_clr
  5346  07EC                     psect	text14
  5347                           	file	"dispLCD4vias.c"
  5348                           	line	245
  5349                           	global	__size_of_dispLCD_clr
  5350                           	__size_of_dispLCD_clr	equ	__end_of_dispLCD_clr-_dispLCD_clr
  5351  0007                     	
  5352                           _dispLCD_clr:	
  5353  07EC                     ;incstack = 0
  5354                           	opt	stack 4
  5355                           ; Regs used in _dispLCD_clr: [wreg+status,2+status,0+pclath+cstack]
  5356                           	line	247
  5357                           	
  5358                           l1940:	
  5359  07EC                     ;dispLCD4vias.c: 247:     dispLCD_instReg(0x01);
  5360                           	movlw	low(01h)
  5361  07EC  3001               	fcall	_dispLCD_instReg
  5362  07ED  120A  118A  2460  120A  118A  	line	248
  5363                           	
  5364                           l103:	
  5365  07F2                     	return
  5366  07F2  0008               	opt stack 0
  5367                           GLOBAL	__end_of_dispLCD_clr
  5368                           	__end_of_dispLCD_clr:
  5369  07F3                     	signat	_dispLCD_clr,89
  5370                           	global	_dispLCD
  5371                           
  5372 ;; *************** function _dispLCD *****************
  5373 ;; Defined at:
  5374 ;;		line 175 in file "dispLCD4vias.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  lin             1    2[BANK0 ] unsigned char 
  5377 ;;  col             1    3[BANK0 ] unsigned char 
  5378 ;;  str             1    4[BANK0 ] PTR const unsigned char 
  5379 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  5380 ;;		 -> STR_6(17), STR_5(17), STR_4(20), STR_3(17), 
  5381 ;;		 -> STR_2(17), STR_1(17), 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5393 ;;      Params:         0       3       0       0       0
  5394 ;;      Locals:         0       0       0       0       0
  5395 ;;      Temps:          0       1       0       0       0
  5396 ;;      Totals:         0       4       0       0       0
  5397 ;;Total ram usage:        4 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:    4
  5400 ;; This function calls:
  5401 ;;		_dispLCD_dataReg
  5402 ;;		_dispLCD_lincol
  5403 ;; This function is called by:
  5404 ;;		_main
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5408                           	line	175
  5409                           global __ptext15
  5410                           __ptext15:	;psect for function _dispLCD
  5411  069C                     psect	text15
  5412                           	file	"dispLCD4vias.c"
  5413                           	line	175
  5414                           	global	__size_of_dispLCD
  5415                           	__size_of_dispLCD	equ	__end_of_dispLCD-_dispLCD
  5416  0032                     	
  5417                           _dispLCD:	
  5418  069C                     ;incstack = 0
  5419                           	opt	stack 3
  5420                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5421                           	line	177
  5422                           	
  5423                           l1898:	
  5424  069C                     ;dispLCD4vias.c: 175: void dispLCD( unsigned char lin, unsigned char col, const char * s
                                 tr );dispLCD4vias.c: 176: {;dispLCD4vias.c: 177:     dispLCD_lincol( lin, col );
  5425                           	bcf	status, 5	;RP0=0, select bank0
  5426  069C  1283               	bcf	status, 6	;RP1=0, select bank0
  5427  069D  1303               	movf	(dispLCD@col),w
  5428  069E  0823               	movwf	(??_dispLCD+0)+0
  5429  069F  00A5               	movf	(??_dispLCD+0)+0,w
  5430  06A0  0825               	movwf	(dispLCD_lincol@col)
  5431  06A1  00F7               	movf	(dispLCD@lin),w
  5432  06A2  0822               	fcall	_dispLCD_lincol
  5433  06A3  120A  118A  2795  120A  118A  	line	179
  5434                           ;dispLCD4vias.c: 179:     while( *str )
  5435                           	goto	l1904
  5436  06A8  2EBE               	
  5437                           l74:	
  5438  06A9                     	line	181
  5439                           	
  5440                           l1900:	
  5441  06A9                     ;dispLCD4vias.c: 180:     {;dispLCD4vias.c: 181:         dispLCD_dataReg( *str );
  5442                           	bcf	status, 5	;RP0=0, select bank0
  5443  06A9  1283               	bcf	status, 6	;RP1=0, select bank0
  5444  06AA  1303               	movf	(dispLCD@str),w
  5445  06AB  0824               	movwf	fsr0
  5446  06AC  0084               	fcall	stringdir
  5447  06AD  120A  118A  2320  120A  118A  	fcall	_dispLCD_dataReg
  5448  06B2  120A  118A  26FC  120A  118A  	line	182
  5449                           	
  5450                           l1902:	
  5451  06B7                     ;dispLCD4vias.c: 182:         ++str;
  5452                           	movlw	low(01h)
  5453  06B7  3001               	bcf	status, 5	;RP0=0, select bank0
  5454  06B8  1283               	bcf	status, 6	;RP1=0, select bank0
  5455  06B9  1303               	movwf	(??_dispLCD+0)+0
  5456  06BA  00A5               	movf	(??_dispLCD+0)+0,w
  5457  06BB  0825               	addwf	(dispLCD@str),f
  5458  06BC  07A4               	goto	l1904
  5459  06BD  2EBE               	line	183
  5460                           ;dispLCD4vias.c: 183:     }
  5461                           	
  5462                           l73:	
  5463  06BE                     	line	179
  5464                           	
  5465                           l1904:	
  5466  06BE                     ;dispLCD4vias.c: 179:     while( *str )
  5467                           	bcf	status, 5	;RP0=0, select bank0
  5468  06BE  1283               	bcf	status, 6	;RP1=0, select bank0
  5469  06BF  1303               	movf	(dispLCD@str),w
  5470  06C0  0824               	movwf	fsr0
  5471  06C1  0084               	fcall	stringdir
  5472  06C2  120A  118A  2320  120A  118A  	xorlw	0
  5473  06C7  3A00               	skipz
  5474  06C8  1D03               	goto	u1691
  5475  06C9  2ECB               	goto	u1690
  5476  06CA  2ECC               u1691:
  5477  06CB                     	goto	l1900
  5478  06CB  2EA9               u1690:
  5479  06CC                     	goto	l76
  5480  06CC  2ECD               	
  5481                           l75:	
  5482  06CD                     	line	184
  5483                           	
  5484                           l76:	
  5485  06CD                     	return
  5486  06CD  0008               	opt stack 0
  5487                           GLOBAL	__end_of_dispLCD
  5488                           	__end_of_dispLCD:
  5489  06CE                     	signat	_dispLCD,12409
  5490                           	global	_dispLCD_lincol
  5491                           
  5492 ;; *************** function _dispLCD_lincol *****************
  5493 ;; Defined at:
  5494 ;;		line 132 in file "dispLCD4vias.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  lin             1    wreg     unsigned char 
  5497 ;;  col             1    7[COMMON] unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  lin             1    1[BANK0 ] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  1    wreg      void 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, pclath, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         1       0       0       0       0
  5510 ;;      Locals:         0       1       0       0       0
  5511 ;;      Temps:          0       1       0       0       0
  5512 ;;      Totals:         1       2       0       0       0
  5513 ;;Total ram usage:        3 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    3
  5516 ;; This function calls:
  5517 ;;		_dispLCD_instReg
  5518 ;; This function is called by:
  5519 ;;		_dispLCD
  5520 ;;		_dispLCD_num
  5521 ;;		_dispLCD_putChar
  5522 ;;		_dispLCDstr
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5526                           	line	132
  5527                           global __ptext16
  5528                           __ptext16:	;psect for function _dispLCD_lincol
  5529  0795                     psect	text16
  5530                           	file	"dispLCD4vias.c"
  5531                           	line	132
  5532                           	global	__size_of_dispLCD_lincol
  5533                           	__size_of_dispLCD_lincol	equ	__end_of_dispLCD_lincol-_dispLCD_lincol
  5534  0015                     	
  5535                           _dispLCD_lincol:	
  5536  0795                     ;incstack = 0
  5537                           	opt	stack 3
  5538                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  5539                           ;dispLCD_lincol@lin stored from wreg
  5540                           	bcf	status, 5	;RP0=0, select bank0
  5541  0795  1283               	bcf	status, 6	;RP1=0, select bank0
  5542  0796  1303               	movwf	(dispLCD_lincol@lin)
  5543  0797  00A1               	line	134
  5544                           	
  5545                           l1810:	
  5546  0798                     ;dispLCD4vias.c: 132: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
                                 4vias.c: 133: {;dispLCD4vias.c: 134:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0
                                 x00) & 0x7F)) );
  5547                           	movf	(dispLCD_lincol@lin),w
  5548  0798  0821               	movwf	(??_dispLCD_lincol+0)+0
  5549  0799  00A0               	movlw	06h
  5550  079A  3006               u1505:
  5551  079B                     	clrc
  5552  079B  1003               	rlf	(??_dispLCD_lincol+0)+0,f
  5553  079C  0DA0               	addlw	-1
  5554  079D  3EFF               	skipz
  5555  079E  1D03               	goto	u1505
  5556  079F  2F9B               	movf	(dispLCD_lincol@col),w
  5557  07A0  0877               	addwf	0+(??_dispLCD_lincol+0)+0,w
  5558  07A1  0720               	andlw	07Fh
  5559  07A2  397F               	addlw	080h
  5560  07A3  3E80               	fcall	_dispLCD_instReg
  5561  07A4  120A  118A  2460  120A  118A  	line	135
  5562                           	
  5563                           l59:	
  5564  07A9                     	return
  5565  07A9  0008               	opt stack 0
  5566                           GLOBAL	__end_of_dispLCD_lincol
  5567                           	__end_of_dispLCD_lincol:
  5568  07AA                     	signat	_dispLCD_lincol,8313
  5569                           	global	_dispLCD_instReg
  5570                           
  5571 ;; *************** function _dispLCD_instReg *****************
  5572 ;; Defined at:
  5573 ;;		line 83 in file "dispLCD4vias.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  i               1    wreg     unsigned char 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  i               1    6[COMMON] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         0       0       0       0       0
  5588 ;;      Locals:         1       0       0       0       0
  5589 ;;      Temps:          2       0       0       0       0
  5590 ;;      Totals:         3       0       0       0       0
  5591 ;;Total ram usage:        3 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    2
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_dispLCD_lincol
  5598 ;;		_dispLCD_init
  5599 ;;		_dispLCD_clr
  5600 ;;		_dispLCD_newChar
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5604                           	line	83
  5605                           global __ptext17
  5606                           __ptext17:	;psect for function _dispLCD_instReg
  5607  0460                     psect	text17
  5608                           	file	"dispLCD4vias.c"
  5609                           	line	83
  5610                           	global	__size_of_dispLCD_instReg
  5611                           	__size_of_dispLCD_instReg	equ	__end_of_dispLCD_instReg-_dispLCD_instReg
  5612  0079                     	
  5613                           _dispLCD_instReg:	
  5614  0460                     ;incstack = 0
  5615                           	opt	stack 3
  5616                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  5617                           ;dispLCD_instReg@i stored from wreg
  5618                           	movwf	(dispLCD_instReg@i)
  5619  0460  00F6               	line	85
  5620                           	
  5621                           l1768:	
  5622  0461                     ;dispLCD4vias.c: 83: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 84: {;dispL
                                 CD4vias.c: 85:     LCDbits.RS = 0;
  5623                           	bcf	status, 5	;RP0=0, select bank0
  5624  0461  1283               	bcf	status, 6	;RP1=0, select bank0
  5625  0462  1303               	bcf	(8),4	;volatile
  5626  0463  1208               	line	86
  5627                           	
  5628                           l1770:	
  5629  0464                     ;dispLCD4vias.c: 86:     LCDbits.BUS = (i>>4);
  5630                           	movf	(dispLCD_instReg@i),w
  5631  0464  0876               	movwf	(??_dispLCD_instReg+0)+0
  5632  0465  00F4               	movlw	04h
  5633  0466  3004               u1435:
  5634  0467                     	clrc
  5635  0467  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  5636  0468  0CF4               	addlw	-1
  5637  0469  3EFF               	skipz
  5638  046A  1D03               	goto	u1435
  5639  046B  2C67               	movf	(8),w	;volatile
  5640  046C  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5641  046D  0674               	andlw	not ((1<<4)-1)
  5642  046E  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5643  046F  0674               	movwf	(8)	;volatile
  5644  0470  0088               	line	88
  5645                           	
  5646                           l1772:	
  5647  0471                     ;dispLCD4vias.c: 88:     LCDbits.EN = 0;
  5648                           	bcf	(8),5	;volatile
  5649  0471  1288               	line	89
  5650                           ;dispLCD4vias.c: 89:     if( i == 0x01 || i == 0x02 )
  5651                           		decf	((dispLCD_instReg@i)),w
  5652  0472  0376               	btfsc	status,2
  5653  0473  1903               	goto	u1441
  5654  0474  2C76               	goto	u1440
  5655  0475  2C77               u1441:
  5656  0476                     	goto	l1776
  5657  0476  2C7E               u1440:
  5658  0477                     	
  5659                           l1774:	
  5660  0477                     		movlw	2
  5661  0477  3002               	xorwf	((dispLCD_instReg@i)),w
  5662  0478  0676               	btfss	status,2
  5663  0479  1D03               	goto	u1451
  5664  047A  2C7C               	goto	u1450
  5665  047B  2C7D               u1451:
  5666  047C                     	goto	l1778
  5667  047C  2C88               u1450:
  5668  047D                     	goto	l1776
  5669  047D  2C7E               	
  5670                           l46:	
  5671  047E                     	line	90
  5672                           	
  5673                           l1776:	
  5674  047E                     ;dispLCD4vias.c: 90:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5675                           	opt asmopt_push
  5676                           opt asmopt_off
  5677                           movlw	3
  5678  047E  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  5679  047F  00F5               	movlw	151
  5680  0480  3097               movwf	((??_dispLCD_instReg+0)+0),f
  5681  0481  00F4               	u1947:
  5682  0482                     decfsz	((??_dispLCD_instReg+0)+0),f
  5683  0482  0BF4               	goto	u1947
  5684  0483  2C82               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  5685  0484  0BF5               	goto	u1947
  5686  0485  2C82               	nop2
  5687  0486  2C87               opt asmopt_pop
  5688                           
  5689                           	goto	l1780
  5690  0487  2C8D               	line	91
  5691                           ;dispLCD4vias.c: 91:     else
  5692                           	
  5693                           l44:	
  5694  0488                     	line	92
  5695                           	
  5696                           l1778:	
  5697  0488                     ;dispLCD4vias.c: 92:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5698                           	opt asmopt_push
  5699                           opt asmopt_off
  5700                           	movlw	13
  5701  0488  300D               movwf	((??_dispLCD_instReg+0)+0),f
  5702  0489  00F4               	u1957:
  5703  048A                     decfsz	(??_dispLCD_instReg+0)+0,f
  5704  048A  0BF4               	goto	u1957
  5705  048B  2C8A               opt asmopt_pop
  5706                           
  5707                           	goto	l1780
  5708  048C  2C8D               	
  5709                           l47:	
  5710  048D                     	line	93
  5711                           	
  5712                           l1780:	
  5713  048D                     ;dispLCD4vias.c: 93:     LCDbits.EN = 1;
  5714                           	bcf	status, 5	;RP0=0, select bank0
  5715  048D  1283               	bcf	status, 6	;RP1=0, select bank0
  5716  048E  1303               	bsf	(8),5	;volatile
  5717  048F  1688               	line	96
  5718                           	
  5719                           l1782:	
  5720  0490                     ;dispLCD4vias.c: 96:     if( (i & 0xF0) == (0x20 | 0x00) )
  5721                           	movlw	low(0F0h)
  5722  0490  30F0               	andwf	(dispLCD_instReg@i),w
  5723  0491  0576               	movwf	(??_dispLCD_instReg+0)+0
  5724  0492  00F4               		movlw	32
  5725  0493  3020               	xorwf	((??_dispLCD_instReg+0)+0),w
  5726  0494  0674               	btfss	status,2
  5727  0495  1D03               	goto	u1461
  5728  0496  2C98               	goto	u1460
  5729  0497  2C99               u1461:
  5730  0498                     	goto	l1794
  5731  0498  2CB0               u1460:
  5732  0499                     	line	98
  5733                           	
  5734                           l1784:	
  5735  0499                     ;dispLCD4vias.c: 97:     {;dispLCD4vias.c: 98:         LCDbits.RS = 0;
  5736                           	bcf	(8),4	;volatile
  5737  0499  1208               	line	99
  5738                           	
  5739                           l1786:	
  5740  049A                     ;dispLCD4vias.c: 99:         LCDbits.BUS = i>>4;
  5741                           	movf	(dispLCD_instReg@i),w
  5742  049A  0876               	movwf	(??_dispLCD_instReg+0)+0
  5743  049B  00F4               	movlw	04h
  5744  049C  3004               u1475:
  5745  049D                     	clrc
  5746  049D  1003               	rrf	(??_dispLCD_instReg+0)+0,f
  5747  049E  0CF4               	addlw	-1
  5748  049F  3EFF               	skipz
  5749  04A0  1D03               	goto	u1475
  5750  04A1  2C9D               	movf	(8),w	;volatile
  5751  04A2  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5752  04A3  0674               	andlw	not ((1<<4)-1)
  5753  04A4  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5754  04A5  0674               	movwf	(8)	;volatile
  5755  04A6  0088               	line	100
  5756                           	
  5757                           l1788:	
  5758  04A7                     ;dispLCD4vias.c: 100:         LCDbits.EN = 0;
  5759                           	bcf	(8),5	;volatile
  5760  04A7  1288               	line	101
  5761                           	
  5762                           l1790:	
  5763  04A8                     ;dispLCD4vias.c: 101:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5764                           	opt asmopt_push
  5765                           opt asmopt_off
  5766                           	movlw	13
  5767  04A8  300D               movwf	((??_dispLCD_instReg+0)+0),f
  5768  04A9  00F4               	u1967:
  5769  04AA                     decfsz	(??_dispLCD_instReg+0)+0,f
  5770  04AA  0BF4               	goto	u1967
  5771  04AB  2CAA               opt asmopt_pop
  5772                           
  5773                           	line	102
  5774                           	
  5775                           l1792:	
  5776  04AC                     ;dispLCD4vias.c: 102:         LCDbits.EN = 1;
  5777                           	bcf	status, 5	;RP0=0, select bank0
  5778  04AC  1283               	bcf	status, 6	;RP1=0, select bank0
  5779  04AD  1303               	bsf	(8),5	;volatile
  5780  04AE  1688               	goto	l1794
  5781  04AF  2CB0               	line	103
  5782                           ;dispLCD4vias.c: 103:     }
  5783                           	
  5784                           l48:	
  5785  04B0                     	line	105
  5786                           	
  5787                           l1794:	
  5788  04B0                     ;dispLCD4vias.c: 105:     LCDbits.RS = 0;
  5789                           	bcf	(8),4	;volatile
  5790  04B0  1208               	line	106
  5791                           	
  5792                           l1796:	
  5793  04B1                     ;dispLCD4vias.c: 106:     LCDbits.BUS = i & 0x0F;
  5794                           	movlw	low(0Fh)
  5795  04B1  300F               	andwf	(dispLCD_instReg@i),w
  5796  04B2  0576               	movwf	(??_dispLCD_instReg+0)+0
  5797  04B3  00F4               	movf	(8),w	;volatile
  5798  04B4  0808               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5799  04B5  0674               	andlw	not ((1<<4)-1)
  5800  04B6  39F0               	xorwf	0+(??_dispLCD_instReg+0)+0,w
  5801  04B7  0674               	movwf	(8)	;volatile
  5802  04B8  0088               	line	107
  5803                           	
  5804                           l1798:	
  5805  04B9                     ;dispLCD4vias.c: 107:     LCDbits.EN = 0;
  5806                           	bcf	(8),5	;volatile
  5807  04B9  1288               	line	108
  5808                           	
  5809                           l1800:	
  5810  04BA                     ;dispLCD4vias.c: 108:     if( i == 0x01 || i == 0x02 )
  5811                           		decf	((dispLCD_instReg@i)),w
  5812  04BA  0376               	btfsc	status,2
  5813  04BB  1903               	goto	u1481
  5814  04BC  2CBE               	goto	u1480
  5815  04BD  2CBF               u1481:
  5816  04BE                     	goto	l1804
  5817  04BE  2CC6               u1480:
  5818  04BF                     	
  5819                           l1802:	
  5820  04BF                     		movlw	2
  5821  04BF  3002               	xorwf	((dispLCD_instReg@i)),w
  5822  04C0  0676               	btfss	status,2
  5823  04C1  1D03               	goto	u1491
  5824  04C2  2CC4               	goto	u1490
  5825  04C3  2CC5               u1491:
  5826  04C4                     	goto	l1806
  5827  04C4  2CD0               u1490:
  5828  04C5                     	goto	l1804
  5829  04C5  2CC6               	
  5830                           l51:	
  5831  04C6                     	line	109
  5832                           	
  5833                           l1804:	
  5834  04C6                     ;dispLCD4vias.c: 109:         _delay((unsigned long)((2)*(4000000/4000.0)));
  5835                           	opt asmopt_push
  5836                           opt asmopt_off
  5837                           movlw	3
  5838  04C6  3003               movwf	((??_dispLCD_instReg+0)+0+1),f
  5839  04C7  00F5               	movlw	151
  5840  04C8  3097               movwf	((??_dispLCD_instReg+0)+0),f
  5841  04C9  00F4               	u1977:
  5842  04CA                     decfsz	((??_dispLCD_instReg+0)+0),f
  5843  04CA  0BF4               	goto	u1977
  5844  04CB  2CCA               	decfsz	((??_dispLCD_instReg+0)+0+1),f
  5845  04CC  0BF5               	goto	u1977
  5846  04CD  2CCA               	nop2
  5847  04CE  2CCF               opt asmopt_pop
  5848                           
  5849                           	goto	l1808
  5850  04CF  2CD5               	line	110
  5851                           ;dispLCD4vias.c: 110:     else
  5852                           	
  5853                           l49:	
  5854  04D0                     	line	111
  5855                           	
  5856                           l1806:	
  5857  04D0                     ;dispLCD4vias.c: 111:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  5858                           	opt asmopt_push
  5859                           opt asmopt_off
  5860                           	movlw	13
  5861  04D0  300D               movwf	((??_dispLCD_instReg+0)+0),f
  5862  04D1  00F4               	u1987:
  5863  04D2                     decfsz	(??_dispLCD_instReg+0)+0,f
  5864  04D2  0BF4               	goto	u1987
  5865  04D3  2CD2               opt asmopt_pop
  5866                           
  5867                           	goto	l1808
  5868  04D4  2CD5               	
  5869                           l52:	
  5870  04D5                     	line	112
  5871                           	
  5872                           l1808:	
  5873  04D5                     ;dispLCD4vias.c: 112:     LCDbits.EN = 1;
  5874                           	bcf	status, 5	;RP0=0, select bank0
  5875  04D5  1283               	bcf	status, 6	;RP1=0, select bank0
  5876  04D6  1303               	bsf	(8),5	;volatile
  5877  04D7  1688               	line	113
  5878                           	
  5879                           l53:	
  5880  04D8                     	return
  5881  04D8  0008               	opt stack 0
  5882                           GLOBAL	__end_of_dispLCD_instReg
  5883                           	__end_of_dispLCD_instReg:
  5884  04D9                     	signat	_dispLCD_instReg,4217
  5885                           	global	_dispLCD_dataReg
  5886                           
  5887 ;; *************** function _dispLCD_dataReg *****************
  5888 ;; Defined at:
  5889 ;;		line 116 in file "dispLCD4vias.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  d               1    wreg     unsigned char 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  d               1    5[COMMON] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5903 ;;      Params:         0       0       0       0       0
  5904 ;;      Locals:         1       0       0       0       0
  5905 ;;      Temps:          1       0       0       0       0
  5906 ;;      Totals:         2       0       0       0       0
  5907 ;;Total ram usage:        2 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    2
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_dispLCD
  5914 ;;		_dispLCD_num
  5915 ;;		_dispLCD_newChar
  5916 ;;		_dispLCD_putChar
  5917 ;;		_dispLCDstr
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5921                           	line	116
  5922                           global __ptext18
  5923                           __ptext18:	;psect for function _dispLCD_dataReg
  5924  06FC                     psect	text18
  5925                           	file	"dispLCD4vias.c"
  5926                           	line	116
  5927                           	global	__size_of_dispLCD_dataReg
  5928                           	__size_of_dispLCD_dataReg	equ	__end_of_dispLCD_dataReg-_dispLCD_dataReg
  5929  002B                     	
  5930                           _dispLCD_dataReg:	
  5931  06FC                     ;incstack = 0
  5932                           	opt	stack 4
  5933                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  5934                           ;dispLCD_dataReg@d stored from wreg
  5935                           	movwf	(dispLCD_dataReg@d)
  5936  06FC  00F5               	line	118
  5937                           	
  5938                           l1354:	
  5939  06FD                     ;dispLCD4vias.c: 116: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 117: {;dis
                                 pLCD4vias.c: 118:     LCDbits.RS = 1;
  5940                           	bcf	status, 5	;RP0=0, select bank0
  5941  06FD  1283               	bcf	status, 6	;RP1=0, select bank0
  5942  06FE  1303               	bsf	(8),4	;volatile
  5943  06FF  1608               	line	119
  5944                           	
  5945                           l1356:	
  5946  0700                     ;dispLCD4vias.c: 119:     LCDbits.BUS = d >> 4;
  5947                           	movf	(dispLCD_dataReg@d),w
  5948  0700  0875               	movwf	(??_dispLCD_dataReg+0)+0
  5949  0701  00F4               	movlw	04h
  5950  0702  3004               u815:
  5951  0703                     	clrc
  5952  0703  1003               	rrf	(??_dispLCD_dataReg+0)+0,f
  5953  0704  0CF4               	addlw	-1
  5954  0705  3EFF               	skipz
  5955  0706  1D03               	goto	u815
  5956  0707  2F03               	movf	(8),w	;volatile
  5957  0708  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5958  0709  0674               	andlw	not ((1<<4)-1)
  5959  070A  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  5960  070B  0674               	movwf	(8)	;volatile
  5961  070C  0088               	line	120
  5962                           	
  5963                           l1358:	
  5964  070D                     ;dispLCD4vias.c: 120:     LCDbits.EN = 0;
  5965                           	bcf	(8),5	;volatile
  5966  070D  1288               	line	121
  5967                           	
  5968                           l1360:	
  5969  070E                     ;dispLCD4vias.c: 121:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  5970                           	opt asmopt_push
  5971                           opt asmopt_off
  5972                           	movlw	13
  5973  070E  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  5974  070F  00F4               	u1997:
  5975  0710                     decfsz	(??_dispLCD_dataReg+0)+0,f
  5976  0710  0BF4               	goto	u1997
  5977  0711  2F10               opt asmopt_pop
  5978                           
  5979                           	line	122
  5980                           	
  5981                           l1362:	
  5982  0712                     ;dispLCD4vias.c: 122:     LCDbits.EN = 1;
  5983                           	bcf	status, 5	;RP0=0, select bank0
  5984  0712  1283               	bcf	status, 6	;RP1=0, select bank0
  5985  0713  1303               	bsf	(8),5	;volatile
  5986  0714  1688               	line	124
  5987                           	
  5988                           l1364:	
  5989  0715                     ;dispLCD4vias.c: 124:     LCDbits.RS = 1;
  5990                           	bsf	(8),4	;volatile
  5991  0715  1608               	line	125
  5992                           	
  5993                           l1366:	
  5994  0716                     ;dispLCD4vias.c: 125:     LCDbits.BUS = d & 0x0F;
  5995                           	movlw	low(0Fh)
  5996  0716  300F               	andwf	(dispLCD_dataReg@d),w
  5997  0717  0575               	movwf	(??_dispLCD_dataReg+0)+0
  5998  0718  00F4               	movf	(8),w	;volatile
  5999  0719  0808               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  6000  071A  0674               	andlw	not ((1<<4)-1)
  6001  071B  39F0               	xorwf	0+(??_dispLCD_dataReg+0)+0,w
  6002  071C  0674               	movwf	(8)	;volatile
  6003  071D  0088               	line	126
  6004                           	
  6005                           l1368:	
  6006  071E                     ;dispLCD4vias.c: 126:     LCDbits.EN = 0;
  6007                           	bcf	(8),5	;volatile
  6008  071E  1288               	line	127
  6009                           ;dispLCD4vias.c: 127:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  6010                           	opt asmopt_push
  6011                           opt asmopt_off
  6012                           	movlw	13
  6013  071F  300D               movwf	((??_dispLCD_dataReg+0)+0),f
  6014  0720  00F4               	u2007:
  6015  0721                     decfsz	(??_dispLCD_dataReg+0)+0,f
  6016  0721  0BF4               	goto	u2007
  6017  0722  2F21               opt asmopt_pop
  6018                           
  6019                           	line	128
  6020                           	
  6021                           l1370:	
  6022  0723                     ;dispLCD4vias.c: 128:     LCDbits.EN = 1;
  6023                           	bcf	status, 5	;RP0=0, select bank0
  6024  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  6025  0724  1303               	bsf	(8),5	;volatile
  6026  0725  1688               	line	129
  6027                           	
  6028                           l56:	
  6029  0726                     	return
  6030  0726  0008               	opt stack 0
  6031                           GLOBAL	__end_of_dispLCD_dataReg
  6032                           	__end_of_dispLCD_dataReg:
  6033  0727                     	signat	_dispLCD_dataReg,4217
  6034                           	global	_isr
  6035                           
  6036 ;; *************** function _isr *****************
  6037 ;; Defined at:
  6038 ;;		line 14 in file "interrupt.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6052 ;;      Params:         0       0       0       0       0
  6053 ;;      Locals:         0       0       0       0       0
  6054 ;;      Temps:          2       0       0       0       0
  6055 ;;      Totals:         2       0       0       0       0
  6056 ;;Total ram usage:        2 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    1
  6059 ;; This function calls:
  6060 ;;		_ADC_int
  6061 ;; This function is called by:
  6062 ;;		Interrupt level 1
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6066                           	file	"interrupt.c"
  6067                           	line	14
  6068                           global __ptext19
  6069                           __ptext19:	;psect for function _isr
  6070  07AA                     psect	text19
  6071                           	file	"interrupt.c"
  6072                           	line	14
  6073                           	global	__size_of_isr
  6074                           	__size_of_isr	equ	__end_of_isr-_isr
  6075  0014                     	
  6076                           _isr:	
  6077  07AA                     ;incstack = 0
  6078                           	opt	stack 3
  6079                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  6080                           psect	intentry,class=CODE,delta=2
  6081                           global __pintentry
  6082                           __pintentry:
  6083  0004                     global interrupt_function
  6084                           interrupt_function:
  6085  0004                     	global saved_w
  6086                           	saved_w	set	btemp+0
  6087  007E                     	movwf	saved_w
  6088  0004  00FE               	swapf	status,w
  6089  0005  0E03               	movwf	(??_isr+0)
  6090  0006  00F2               	movf	pclath,w
  6091  0007  080A               	movwf	(??_isr+1)
  6092  0008  00F3               	ljmp	_isr
  6093  0009  120A  118A  2FAA   psect	text19
  6094                           	line	16
  6095                           	
  6096                           i1l1138:	
  6097  07AA                     ;interrupt.c: 16:     if( PIR1bits.ADIF )
  6098                           	bcf	status, 5	;RP0=0, select bank0
  6099  07AA  1283               	bcf	status, 6	;RP1=0, select bank0
  6100  07AB  1303               	btfss	(12),6	;volatile
  6101  07AC  1F0C               	goto	u64_21
  6102  07AD  2FAF               	goto	u64_20
  6103  07AE  2FB0               u64_21:
  6104  07AF                     	goto	i1l119
  6105  07AF  2FB7               u64_20:
  6106  07B0                     	line	18
  6107                           	
  6108                           i1l1140:	
  6109  07B0                     ;interrupt.c: 17:     {;interrupt.c: 18:         PIR1bits.ADIF = 0;
  6110                           	bcf	(12),6	;volatile
  6111  07B0  130C               	line	19
  6112                           	
  6113                           i1l1142:	
  6114  07B1                     ;interrupt.c: 19:         ADC_int();
  6115                           	fcall	_ADC_int
  6116  07B1  120A  118A  2748  120A  118A  	goto	i1l119
  6117  07B6  2FB7               	line	20
  6118                           ;interrupt.c: 20:     }
  6119                           	
  6120                           i1l118:	
  6121  07B7                     	line	21
  6122                           	
  6123                           i1l119:	
  6124  07B7                     	movf	(??_isr+1),w
  6125  07B7  0873               	movwf	pclath
  6126  07B8  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  6127  07B9  0E72               	movwf	status
  6128  07BA  0083               	swapf	saved_w,f
  6129  07BB  0EFE               	swapf	saved_w,w
  6130  07BC  0E7E               	retfie
  6131  07BD  0009               	opt stack 0
  6132                           GLOBAL	__end_of_isr
  6133                           	__end_of_isr:
  6134  07BE                     	signat	_isr,89
  6135                           	global	_ADC_int
  6136                           
  6137 ;; *************** function _ADC_int *****************
  6138 ;; Defined at:
  6139 ;;		line 31 in file "adc.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;		None
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;		None
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6153 ;;      Params:         0       0       0       0       0
  6154 ;;      Locals:         0       0       0       0       0
  6155 ;;      Temps:          2       0       0       0       0
  6156 ;;      Totals:         2       0       0       0       0
  6157 ;;Total ram usage:        2 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_isr
  6163 ;; This function uses a non-reentrant model
  6164 ;;
  6165                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6166                           	file	"adc.c"
  6167                           	line	31
  6168                           global __ptext20
  6169                           __ptext20:	;psect for function _ADC_int
  6170  0748                     psect	text20
  6171                           	file	"adc.c"
  6172                           	line	31
  6173                           	global	__size_of_ADC_int
  6174                           	__size_of_ADC_int	equ	__end_of_ADC_int-_ADC_int
  6175  001F                     	
  6176                           _ADC_int:	
  6177  0748                     ;incstack = 0
  6178                           	opt	stack 3
  6179                           ; Regs used in _ADC_int: [wreg]
  6180                           	line	33
  6181                           	
  6182                           i1l980:	
  6183  0748                     ;adc.c: 33:     ADC_value = ADRESH;
  6184                           	bcf	status, 5	;RP0=0, select bank0
  6185  0748  1283               	bcf	status, 6	;RP1=0, select bank0
  6186  0749  1303               	movf	(30),w	;volatile
  6187  074A  081E               	movwf	(??_ADC_int+0)+0
  6188  074B  00F0               	clrf	(??_ADC_int+0)+0+1
  6189  074C  01F1               	movf	0+(??_ADC_int+0)+0,w
  6190  074D  0870               	movwf	(_ADC_value)
  6191  074E  00F8               	movf	1+(??_ADC_int+0)+0,w
  6192  074F  0871               	movwf	(_ADC_value+1)
  6193  0750  00F9               	line	34
  6194                           ;adc.c: 34:     ADC_value <<= 8;
  6195                           	movlw	08h
  6196  0751  3008               	
  6197                           u39_25:
  6198  0752                     	clrc
  6199  0752  1003               	rlf	(_ADC_value),f
  6200  0753  0DF8               	rlf	(_ADC_value+1),f
  6201  0754  0DF9               	addlw	-1
  6202  0755  3EFF               	skipz
  6203  0756  1D03               	goto	u39_25
  6204  0757  2F52               	line	35
  6205                           ;adc.c: 35:     ADC_value += ADRESL;
  6206                           	bsf	status, 5	;RP0=1, select bank1
  6207  0758  1683               	bcf	status, 6	;RP1=0, select bank1
  6208  0759  1303               	movf	(158)^080h,w	;volatile
  6209  075A  081E               	movwf	(??_ADC_int+0)+0
  6210  075B  00F0               	clrf	(??_ADC_int+0)+0+1
  6211  075C  01F1               	movf	0+(??_ADC_int+0)+0,w
  6212  075D  0870               	addwf	(_ADC_value),f
  6213  075E  07F8               	skipnc
  6214  075F  1803               	incf	(_ADC_value+1),f
  6215  0760  0AF9               	movf	1+(??_ADC_int+0)+0,w
  6216  0761  0871               	addwf	(_ADC_value+1),f
  6217  0762  07F9               	line	36
  6218                           	
  6219                           i1l982:	
  6220  0763                     ;adc.c: 36:     ADCON0bits.GO = 1;
  6221                           	bcf	status, 5	;RP0=0, select bank0
  6222  0763  1283               	bcf	status, 6	;RP1=0, select bank0
  6223  0764  1303               	bsf	(31),1	;volatile
  6224  0765  149F               	line	37
  6225                           	
  6226                           i1l22:	
  6227  0766                     	return
  6228  0766  0008               	opt stack 0
  6229                           GLOBAL	__end_of_ADC_int
  6230                           	__end_of_ADC_int:
  6231  0767                     	signat	_ADC_int,89
  6232                           global	___latbits
  6233                           ___latbits	equ	2
  6234  0002                     	global	fptotal
  6235                           fptotal equ 8
  6236  0008                     	file ""
  6237                           	line	#
  6238                           psect	functab,class=ENTRY,delta=2
  6239                           global __pfunctab
  6240                           __pfunctab:
  6241  0027                     	global	fptable,__fptable
  6242                           __fptable:
  6243  0027                     fptable:
  6244  0027                     	movwf (btemp+1)&07Fh
  6245  0027  00FF               	movlw high(fptable)
  6246  0028  3000               	movwf pclath
  6247  0029  008A               	movf (btemp+1)&07Fh,w
  6248  002A  087F               	addwf pc
  6249  002B  0782               	global	fpbase
  6250                           fpbase:
  6251  002C                     	goto fpbase	; Call via a null pointer and you will get stuck here.
  6252  002C  282C               	file ""
  6253                           	line	#
  6254                           fp__dispLCD:
  6255  002D                     entry__dispLCD:
  6256  002D                     	global	entry__dispLCD
  6257                           	ljmp	_dispLCD
  6258  002D  120A  118A  2E9C   	file ""
  6259                           	line	#
  6260                           fp__dispLCD_clr:
  6261  0030                     entry__dispLCD_clr:
  6262  0030                     	global	entry__dispLCD_clr
  6263                           	ljmp	_dispLCD_clr
  6264  0030  120A  118A  2FEC   	file ""
  6265                           	line	#
  6266                           fp__dispLCD_init:
  6267  0033                     entry__dispLCD_init:
  6268  0033                     	global	entry__dispLCD_init
  6269                           	ljmp	_dispLCD_init
  6270  0033  120A  118A  2E5B   	file ""
  6271                           	line	#
  6272                           fp__dispLCD_num:
  6273  0036                     entry__dispLCD_num:
  6274  0036                     	global	entry__dispLCD_num
  6275                           	ljmp	_dispLCD_num
  6276  0036  120A  118A  2A31   	global __end_of__fptable
  6277                           	__end_of__fptable:
  6278  0039                     	global __size_of__fptable
  6279                           	__size_of__fptable	equ	__end_of__fptable-__fptable
  6280  0012                     	global	btemp
  6281                           	btemp set 07Eh
  6282  007E                     
  6283                           	DABS	1,126,2	;btemp
  6284                           	global	wtemp0
  6285                           	wtemp0 set btemp+0
  6286  007E                     	end


Data Sizes:
    Strings     156
    Constant    0
    Data        23
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     33      60
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S348$1$0	PTR const unsigned char  size(1) Largest target is 0

    S348$2$2	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[20]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 

    temperatura@ptr	PTR struct SensorTemperatura_t size(1) Largest target is 6
		 -> main@sensor(BANK0[6]), 

    S348$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    IHM.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S348$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    IHM.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S348$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S348$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S348$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S348$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S348$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[20]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_sensor_init
    _main->_teclado
    _temperatura->___wmul
    _dispLCD_num->___awmod
    _dispLCD_num->_dispLCD_lincol
    ___awdiv->___wmul
    _dispLCD_init->_delay
    _dispLCD_init->_dispLCD_instReg
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg

Critical Paths under _isr in COMMON

    _isr->_ADC_int

Critical Paths under _main in BANK0

    _main->_dispLCD_num
    _temperatura->___lmul
    _dispLCD_num->___awdiv
    ___awdiv->___wmul
    _dispLCD->_dispLCD_lincol

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   11770
                                             23 BANK0     10    10      0
                              _delay
                            _dispLCD
                        _dispLCD_clr
                       _dispLCD_init
                        _dispLCD_num
                        _sensor_init
                            _teclado
                       _teclado_init
                        _temperatura
 ---------------------------------------------------------------------------------
 (1) _temperatura                                          9     9      0    2062
                                             12 BANK0      9     9      0
                           _ADC_read
                            ___awdiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              4 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     316
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado                                              7     7      0     204
                                              4 COMMON     4     4      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _sensor_init                                          4     0      4     196
                                              4 COMMON     4     0      4
                           _ADC_init
 ---------------------------------------------------------------------------------
 (2) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dispLCD_num                                         12     7      5    3844
                                             11 BANK0     12     7      5
                            ___awdiv
                            ___awmod
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     4     0      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1060
                                              2 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0     651
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     403
                                              4 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     248
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              4     1      3    3631
                                              2 BANK0      4     1      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     760
                                              7 COMMON     1     0      1
                                              0 BANK0      2     2      0
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     248
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              2 COMMON     2     2      0
                            _ADC_int
 ---------------------------------------------------------------------------------
 (5) _ADC_int                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _dispLCD
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr
     _dispLCD_instReg
   _dispLCD_init
     _delay
     _dispLCD_instReg
   _dispLCD_num
     ___awdiv
       ___wmul (ARG)
     ___awmod
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _sensor_init
     _ADC_init
   _teclado
   _teclado_init
   _temperatura
     _ADC_read
     ___awdiv
       ___wmul (ARG)
     ___lmul
     ___wmul

 _isr (ROOT)
   _ADC_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      3C       5       75.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Aug 11 15:33:23 2021

                       pc 0002               __CFG_CP$OFF 0000                        l30 078D  
                      l31 077F                        l32 0794                        l33 0794  
                      l17 0747                        l25 07F8                        l51 04C6  
                      l52 04D5                        l44 0488                        l53 04D8  
                      l46 047E                        l70 069B                        l47 048D  
                      l56 0726                        l48 04B0                        l49 04D0  
                      l73 06BE                        l74 06A9                        l90 0277  
                      l59 07A9                        l75 06CD                        l91 0299  
                      l76 06CD                        l92 02A5                        l93 029A  
                      l86 0247                        l95 02C2                        l87 028B  
                      l96 02C3                        l88 025C                        l97 02D1  
                      l89 0276                        l98 02D1                        l99 031F  
            ___awdiv@sign 0028   __end_of_dispLCD_dataReg 0727                        fsr 0004  
     ___wmul@multiplicand 0076                       l100 031F                       l103 07F2  
                     l202 07E0                       l130 07EB                       l133 05BD  
                     l205 045F                       l134 060C                       l302 061A  
                     l135 05D1                       l303 0636                       l136 0601  
                     l304 0651                       l137 05F6                       l305 065A  
                     l138 060E                       l170 0201                       l171 005F  
                     l172 0226                       l180 0182                       l181 0183  
                     l173 0062                       l190 022E                       l182 01A4  
                     l174 0082                       l191 022E                       l183 01A5  
                     l175 00A2                       l440 0513                       l184 01C6  
                     l176 00DD                       l441 052C                       l185 01C7  
                     l177 0126                       l169 0054                       l442 053A  
                     l434 04E8                       l450 057A                       l290 06D3  
                     l186 01E6                       l178 015C                       l443 0546  
                     l435 04F6                       l451 056E                       l291 06DF  
                     l187 01E7                       l179 0170                       l444 054B  
                     l436 053B                       l452 057F                       l292 06F4  
                     l188 01FF                       l437 050D                       l453 0580  
                     l293 06FB                       l189 022D                       l438 0501  
                     l454 0591                       l439 0512                       l455 059F  
                     l447 055B                       l456 05AB                       l448 0565  
                     l457 05B0                       l449 05A0                       _IHM 0051  
            __CFG_CPD$OFF 0000                       u800 0793                       u801 0792  
                     u815 0703                       u920 04E0                       u921 04DF  
                     u930 04EC                       u931 04EB                       u940 04FE  
                     u941 04FD                       u960 0511                       u961 0510  
                     u955 0502                       u980 0524                       u981 0523  
                     u975 0514                       u985 0520                       u995 052D  
                     _isr 07AA                       fsr0 0004                       indf 0000  
 __end_of_dispLCD_instReg 04D9              ___awmod@sign 0022           __end_of_ADC_int 0767  
            __CFG_LVP$OFF 0000                      l2000 0082                      l2010 00C1  
                    l2002 008D                      l2020 0104                      l2012 00D6  
                    l2004 0096                      l2030 013A                      l2022 0111  
                    l2014 00DD                      l2006 009B                      l2120 0209  
                    l2040 0169                      l2032 0147                      l2024 011F  
                    l2016 00F0                      l2008 00A2                      l1410 04E8  
                    l1402 04D9                      l1330 0734                      l2050 0189  
                    l2042 0170                      l2034 0155                      l2018 00FF  
                    l2026 0126                      l1420 04FE                      l1412 04EC  
                    l1404 04DC                      l1340 0743                      l1332 0739  
                    l1324 0727                      l2060 01BA                      l2052 0198  
                    l2044 0176                      l2028 0135                      l2036 015C  
                    l1350 077F                      l1430 0524                      l1422 0501  
                    l1414 04F1                      l1406 04E0                      l1342 0744  
                    l1334 073C                      l1326 072B                      l2070 01DF  
                    l2062 01BF                      l2054 019D                      l2046 017B  
                    l2038 0164                      l1360 070E                      l1352 078D  
                    l1440 0540                      l1432 052A                      l1424 0508  
                    l1416 04F6                      l1408 04E5                      l1336 073F  
                    l1328 0731                      l1344 07F3                      l2072 01E7  
                    l2064 01C7                      l2056 01A5                      l2048 0183  
                    l2080 0201                      l1370 0723                      l1362 0712  
                    l1354 06FD                      l1442 0546                      l1434 052C  
                    l1426 050D                      l1418 04F8                      l1338 0740  
                    l1346 07F8                      l2074 01F2                      l2066 01D2  
                    l2058 01AB                      l2082 0226                      l1364 0715  
                    l1356 0700                      l1348 077E                      l1444 054B  
                    l1436 0533                      l1428 0513                      l2076 01FA  
                    l2068 01DA                      l1366 0716                      l1358 070D  
                    l1438 053B                      l1550 07E4                      l2078 0200  
                    l1368 071E                      l1800 04BA                      l1560 05BD  
                    l1552 07E8                      l1802 04BF                      l1810 0798  
                    l1570 05E0                      l1562 05C8                      l1554 05B1  
                    l1804 04C6                      l1900 06A9                      l1572 05F6  
                    l1564 05C9                      l1580 060C                      l1556 05B5  
                    l1548 07E1                      l1820 06ED                      l1812 06CE  
                    l1806 04D0                      l1902 06B7                      l1910 0241  
                    l1582 060E                      l1574 05FA                      l1566 05D0  
                    l1558 05BC                      l1830 061E                      l1822 06F4  
                    l1814 06D3                      l1808 04D5                      l1904 06BE  
                    l1840 054C                      l1920 0273                      l1912 0247  
                    l1584 07D1                      l1576 0601                      l1568 05D1  
                    l1832 0636                      l1824 06FB                      l1816 06D7  
                    l1770 0464                      l1850 055F                      l1842 054F  
                    l1922 0277                      l1930 02A5                      l1914 0251  
                    l1906 0231                      l1586 07D6                      l1578 0605  
                    l1834 063F                      l1826 060F                      l1818 06E6  
                    l1780 048D                      l1772 0471                      l1940 07EC  
                    l1860 057A                      l1852 0565                      l1844 0553  
                    l1932 02B9                      l1924 028B                      l1916 0257  
                    l1908 023C                      l1588 07DC                      l1836 0651  
                    l1828 061A                      l1790 04A8                      l1782 0490  
                    l1774 0477                      l1862 0580                      l1854 056B  
                    l1870 05A0                      l1846 0558                      l1934 02C3  
                    l1926 029A                      l1918 025C                      l1838 065A  
                    l1950 0416                      l1942 03C5                      l1792 04AC  
                    l1784 0499                      l1776 047E                      l1768 0461  
                    l1880 0664                      l1872 05A5                      l1864 058A  
                    l1856 056E                      l1848 055B                      l1936 02CA  
                    l1928 02A0                      l1952 0448                      l1944 03D2  
                    l1786 049A                      l1794 04B0                      l1778 0488  
                    l1890 066B                      l1882 0667                      l1874 05AB  
                    l1866 0591                      l1858 0575                      l1938 0311  
                    l1946 03FD                      l1796 04B1                      l1788 04A7  
                    l1892 066C                      l1884 0668                      l1876 05B0  
                    l1868 0598                      l1948 0406                      l1798 04B9  
                    l1894 066D                      l1886 0669                      l1878 065B  
                    l1990 0054                      l1982 0039                      l1896 0677  
                    l1888 066A                      l1992 0062                      l1984 003C  
                    l1898 069C                      l1994 006D                      l1986 0041  
                    l1996 0076                      l1988 0046                      l1998 007B  
                    ?_isr 0070                      STR_1 034B                      STR_2 037E  
                    STR_3 03B1                      STR_4 0326                      STR_5 033A  
                    STR_6 038F                      STR_7 033A                      STR_8 03A0  
                    STR_9 035C                      u1000 0539                      u1001 0538  
                    u1010 0540                      u1011 053F                      u1210 05BB  
                    u1211 05BA                      u1230 05CF                      u2007 0721  
                    u1231 05CE                      u1224 05C3                      u1225 05C1  
                    u1250 05E0                      u1251 05DF                      u1244 05D7  
                    u1245 05D5                      u1270 0600                      u1510 06D7  
                    u1271 05FF                      u1511 06D6                      u1440 0477  
                    u1600 0553                      u1280 060B                      u1441 0476  
                    u1505 079B                      u1601 0552                      u1281 060A  
                    u1265 05E3                      u1450 047D                      u1610 055F  
                    u1451 047C                      u1435 0467                      u1611 055E  
                    u1460 0499                      u1620 056B                      u1700 0238  
                    u1540 06F3                      u1461 0498                      u1621 056A  
                    u1701 0236                      u1541 06F2                      u1525 06E0  
                    u1710 0239                      u1550 061E                      u1551 061D  
                    u1535 06E7                      u1480 04BF                      u1640 057E  
                    u1720 0241                      u1481 04BE                      u1641 057D  
                    u1721 0240                      u1561 0627                      u1490 04C5  
                    u1650 058A                      u1730 0273                      u1562 062E  
                    u1491 04C4                      u1475 049D                      u1651 0589  
                    u1635 056F                      u1731 0272                      u1563 0635  
                    u1740 0298                      u1900 01BA                      u1741 0297  
                    u1901 01B9                      u1670 059E                      u1750 02B9  
                    u1590 0650                      u1910 01DA                      u1671 059D  
                    u1655 0586                      u1751 02B8                      u1591 064F  
                    u1575 0638                      u1911 01D9                      u1680 05A5  
                    u1760 02C1                      u1920 01FA                      u1681 05A4  
                    u1665 0592                      u1761 02C0                      u1745 0294  
                    u1585 0640                      u1921 01F9                      u1905 01B6  
                    u1690 06CC                      u1770 02CA                      u1850 00FF  
                    u1691 06CB                      u1771 02C9                      u1755 02B5  
                    u1851 00FE                      u1780 031E                      u1860 0135  
                    u1781 031D                      u1861 0134                      u1870 0164  
                    u1871 0163                      u1855 00FB                      u1880 0176  
                    u1937 0787                      u1785 031A                      u1881 0175  
                    u1865 0131                      u1890 0198                      u1947 0482  
                    u1795 03FF                      u1891 0197                      u1957 048A  
                    i1l22 0766                      u1967 04AA                      u1895 0194  
                    u1977 04CA                      u1987 04D2                      u1997 0710  
            __CFG_WRT$OFF 0000                      _main 0039                      btemp 007E  
                    start 000C          __end_of_ADC_init 0748          __end_of_ADC_read 07F9  
           __CFG_IESO$OFF 0000                     ??_isr 0072                     ?_main 0070  
         __end_of___awdiv 054C                     STR_10 036D             __CFG_WDTE$OFF 0000  
         __end_of___awmod 05B1           ___awdiv@divisor 0022                     i1l118 07B7  
                   i1l119 07B7                     i1l980 0748                     i1l982 0763  
         ___awdiv@counter 0027                     _PORTB 0006                     u39_25 0752  
                   u64_20 07B0                     u64_21 07AF                     _TRISB 0086  
     ___lmul@multiplicand 0024           __end_of_dispLCD 06CE            __CFG_FCMEN$OFF 0000  
                   _delay 077E                     fpbase 002C           __end_of_teclado 060F  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E      __end_of_dispLCD_init 069C            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0231          ?_dispLCD_dataReg 0070  
               ??_ADC_int 0070                    ??_main 0037      __size_of_dispLCD_clr 0007  
    __size_of_dispLCD_num 00EF          ?_dispLCD_instReg 0070                    ?_delay 0074  
                  _ADRESH 001E                    _ADRESL 009E          ___awdiv@dividend 0024  
                  _ANSELH 0189                    i1l1140 07B0                    i1l1142 07B1  
                  i1l1138 07AA          __end_of__fptable 0039            __CFG_PWRTE$OFF 0000  
                  ___lmul 060F                    ___wmul 06CE                 ??___awdiv 0026  
               ??___awmod 0020                    _tMax_C 0058                    _tMin_C 005A  
                  _tabela 0041                    delay@t 0074          ___awdiv@quotient 0029  
         ___awmod@divisor 0074                 ??_dispLCD 0025           ___awmod@counter 0021  
       entry__dispLCD_clr 0030              ?_temperatura 0070         entry__dispLCD_num 0036  
            ?_sensor_init 0074                    fptable 0027                    fptotal 0008  
               ??_teclado 0074                    saved_w 007E                 ?_ADC_init 0070  
               ?_ADC_read 0074   __end_of__initialization 0023   __size_of_dispLCD_lincol 0015  
          __pcstackCOMMON 0070              __pidataBANK0 0767             __end_of_delay 0795  
              ??_ADC_init 0074                ??_ADC_read 0076                   ??_delay 0076  
              __pbssBANK0 0058     __size_of_dispLCD_init 0041             ?_teclado_init 0070  
              __pmaintext 0039                   ?___lmul 0020                _dispLCD_B0 0000  
              _dispLCD_B1 0000                   ?___wmul 0074                __pintentry 0004  
              _dispLCDstr 0000            ___lmul@product 0028                   _ADC_int 0748  
                 _LCDbits 0008              _dispLCD_init 065B                __stringtab 0320  
          ??_teclado_init 0074                 _ADC_value 0078                   ___awdiv 04D9  
         __size_of___lmul 004C                   ___awmod 054C           __size_of___wmul 002E  
               _ANSELbits 0188                   _dispLCD 069C                   __ptext1 03C2  
                 __ptext2 06CE                   __ptext3 060F                   __ptext4 07F3  
                 __ptext5 07E1                   __ptext6 05B1                   __ptext7 07D1  
                 __ptext8 0727                   __ptext9 0231              __size_of_isr 0014  
        ___awmod@dividend 0076                   _teclado 05B1      __size_of_temperatura 009E  
    __size_of_sensor_init 0010        entry__dispLCD_init 0033      end_of_initialization 0023  
          dispLCD_num@col 002C            dispLCD_num@div 0035            dispLCD_num@lin 002B  
          dispLCD_num@tam 002F            dispLCD_num@num 002D            _dispLCD_lincol 0795  
              dispLCD@col 0023                dispLCD@lin 0022                dispLCD@str 0024  
           ??_dispLCD_clr 0077             ??_dispLCD_num 0030                fp__dispLCD 002D  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002B         __size_of_ADC_init 0021  
       __size_of_ADC_read 0006    __end_of_dispLCD_lincol 07AA  __size_of_dispLCD_instReg 0079  
              main@estado 003A                main@sensor 003B            __end_of___lmul 065B  
          __end_of___wmul 06FC      __end_of_teclado_init 07EC       start_initialization 000F  
     __end_of_dispLCD_clr 07F3       __end_of_dispLCD_num 0320               __end_of_isr 07BE  
         ?_dispLCD_lincol 0077  __CFG_FOSC$INTRC_NOCLKOUT 0000         dispLCD_lincol@col 0077  
       dispLCD_lincol@lin 0021                  ??___lmul 0074                  ??___wmul 0078  
              init_fetch0 07BE               __pdataBANK0 0041                  ?_ADC_int 0070  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of__fptable 0012         ??_dispLCD_dataReg 0074         ??_dispLCD_instReg 0074  
               __pfunctab 0027                teclado@col 0021                teclado@lin 0022  
                ?___awdiv 0022                  ?___awmod 0074               _dispLCD_clr 07EC  
             _dispLCD_num 0231                  ?_dispLCD 0022                 __pstrings 0320  
            teclado@tecla 0020                  ?_teclado 0070                  _ADC_init 0727  
                _ADC_read 07F3            __size_of_delay 0017         interrupt_function 0004  
         sensor_init@tmax 0076           sensor_init@tmin 0074            ___wmul@product 0020  
                _PIE1bits 008C                  _PIR1bits 000C     __size_of_teclado_init 000B  
        dispLCD_dataReg@d 0075                _ADCON0bits 001F               __stringbase 0325  
              _ADCON1bits 009F             ??_temperatura 002C         ___wmul@multiplier 0074  
        __size_of_ADC_int 001F             ??_sensor_init 0078                 main@tecla 0039  
       ___lmul@multiplier 0020              _teclado_init 07E1          dispLCD_instReg@i 0076  
        __size_of___awdiv 0073          __size_of___awmod 0065           fp__dispLCD_init 0033  
        dispLCD_num@sinal 0034        __end_of__stringtab 0326          __size_of_dispLCD 0032  
           entry__dispLCD 002D                  __fptable 0027            temperatura@ptr 0034  
        ??_dispLCD_lincol 0020          __size_of_teclado 005E                  __ptext10 054C  
                __ptext11 04D9                  __ptext20 0748                  __ptext12 065B  
                __ptext13 077E                  __ptext14 07EC                  __ptext15 069C  
                __ptext16 0795                  __ptext17 0460                  __ptext18 06FC  
                __ptext19 07AA       __end_of_temperatura 0460         __CFG_BOR4V$BOR40V 0000  
     __end_of_sensor_init 07E1             __size_of_main 01F8                _INTCONbits 000B  
           ?_dispLCD_init 0070           _dispLCD_dataReg 06FC                  init_ram0 07C2  
          fp__dispLCD_clr 0030            fp__dispLCD_num 0036           dispLCD_num@size 0033  
         _dispLCD_instReg 0460                  intlevel1 0027                 stringcode 0320  
            ?_dispLCD_clr 0070              ?_dispLCD_num 002B               _temperatura 03C2  
            temperatura@t 0030               _sensor_init 07D1            ??_dispLCD_init 0077  
                stringdir 0320                  stringtab 0320  
